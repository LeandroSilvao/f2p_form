{"version":3,"sources":["config.js","components/Toastify/index.jsx","components/Toastify/Toastify.js","contexts/FormContexts.jsx","contexts/ClientInfoContexts.jsx","contexts/IdentificationTypeContexts.jsx","contexts/AttorneyContexts.jsx","contexts/AdressesContexts.jsx","contexts/BankContexts.jsx","contexts/PhonesContexts.jsx","contexts/EmailContexts.jsx","contexts/Wealths.jsx","contexts/Work.jsx","components/IdentificationType/index.jsx","components/Countries/index.jsx","components/State/index.jsx","components/City/index.jsx","components/AdressType/index.jsx","components/Cep/index.jsx","components/AdressUtils/index.jsx","components/ClientAdress/index.jsx","components/BankAccounts/index.jsx","contexts/PPERelatedsContext.jsx","utils.js","components/PPE Related/index.jsx","contexts/Spouse.jsx","components/Spouse/index.jsx","components/Work/index.jsx","contexts/LegalRepresentativeContexts.jsx","components/LegalRepresentative/index.jsx","components/ClientInfo/index.jsx","contexts/FormSuity.jsx","components/FormSuity/index.jsx","components/Attorney/index.jsx","components/Email/index.jsx","components/Wealths/index.jsx","components/Phones/index.jsx","assets/header.png","template/header/index.jsx","assets/footer.png","template/footer/index.jsx","assets/cadastro.jpeg","template/body/index.jsx","components/AdditionalInformations/index.jsx","form.js","App.js","index.js"],"names":["proxy","config","_urlCountries","_urlStates","_urlCities","_urlAdressType","_urlPhoneType","_urlGenders","_urlMaritalStatus","_urlMaritalAgreement","_urlProfessionalOccupation","_urlEducation","_urlEmailType","_urlIdentificationType","_urlWealthType","_urlRelationshipType","_urlBankAccountType","_urlBankGetByCode","_urlBankGetById","_urlBank","_urlQuestions","_urlAnswers","_urlSaveClient","_urlGetPluralAccount","Toastify","className","this","props","description","Component","Error","id","text","autoClose","draggable","icon","toast","isActive","error","toastId","Warn","warn","InitialState","languagePT","Clicked","_Json_ClientAddresses","obj","_Json_ClientInfo","_Json_AttorneyInfo","_Json_PhoneInfo","_Json_EmailInfo","_Json_ClientIdentification","_Json_Spouse","_Json_Work","_Json_Wealths","_Json_FormSuity","_Json_BankAccounts","_Json_LegalRepresentative","_Json_PPERelateds","saveClient","reqJSON","clientId","name","shortName","taxPayerRegistry","birthDate","fatherName","genderId","maritalStatusId","maritalAgreementId","motherName","nationality","countryBirthId","stateBirthId","stateBirthName","professionalOccupationId","residenceInOtherCountryId","otherTaxResidenceCountryId","educationLevelId","ppeOccupation","usPerson","isAssociatedPerson","urlCallback","isAcceptedOrderAttorney","isAdministratorInAnotherAccount","attorneys","spouse","document","work","phones","emails","bankAccounts","wealths","addresses","ppeRelateds","formSuity","legalRepresentatives","authentication","login","password","FormContext","createContext","FormProvider","useState","setLanguagePT","setClicked","useEffect","window","location","pathname","split","filter","i","length","Provider","value","required","console","log","JSON","stringify","axios","post","then","res","data","clientCode","interval","setInterval","get","clearInterval","SuccessMessage","success","Success","catch","err","response","innerMessage","request","message","CheckClient","code","includes","children","String","setname","setshortName","settaxPayerRegistry","setbirthDate","age","Number","setAge","setfatherName","setgenderId","gendersIds","setmaritalStatusId","maritalStatus","maritalAgreements","setmotherName","getCountriesBirthId","setppeOccupation","setusPerson","setisAssociatedPerson","setisAdministratorInAnotherAccount","ClientInfoContext","ClientInfoProvider","useContext","setnationality","setgendersIds","setMaritalStatus","setmaritalAgreementId","setmaritalAgreements","setcountryBirthId","countriesBirthId","setcountriesBirthId","setstateBirthId","setstateBirthName","statesBirth","setstatesBirth","setprofessionalOccupationId","professionalOccupationsId","setprofessionalOccupationsId","setresidenceInOtherCountryId","residencesInOtherCountryId","setresidencesInOtherCountryId","setotherTaxResidenceCountryId","otherTaxResidencesCountryId","setotherTaxResidencesCountryId","seteducationLevelId","educationsLevelId","seteducationsLevelId","replace","parseInt","identificationTypeId","number","emissionInssuer","emission","stateId","identificationTypes","setidentificationTypeId","setnumber","setemissionInssuer","setemission","setstateId","IdentificationTypeContext","IdentificationTypeProvider","setIdentificationTypes","states","setStates","cpf","taxpayerRegistry","settaxpayerRegistry","isPEP","setisPEP","actionDescription","setactionDescription","countryId","setCountryId","setStateId","stateName","setStateName","cityId","setCityId","cityName","setCityName","neighborhood","setneighborhood","setdescription","zipCode","setZipCode","complement","setcomplement","typeAddressId","setTypeAddressId","AttorneyContext","AttorneyProvider","setisAcceptedOrderAttorney","address","setNeighborhood","setDescription","zipcode","setNumber","setComplement","AdressesContext","AdressesProvider","AdressJson","bankId","agency","account","digit","typeAccountId","bankAccountTypes","banks","setbankId","setagency","setaccount","setdigit","settypeAccountId","BankAccountsContext","BankAccountsProvider","setBankAccountTypes","setBanks","newBanks","map","bank","push","GetBanks","phoneTypes","phoneTypeId","countryCode","stateCode","setPhoneTypeId","setCountryCode","setStateCode","PhonesContext","PhonesProvider","setPhoneTypes","type","mail","isCorrespondency","emailTypes","setMail","setType","setIsCorrespondency","EmailContext","EmailProvider","setEmailTypes","typeWealthId","typesWealthId","settypeWealthId","setvalue","WealthsTypeContext","WealthsTypeProvider","settypesWealthId","institutionName","occupation","profession","corporateTaxpayerRegistry","setinstitutionName","setoccupation","setprofession","setcorporateTaxpayerRegistry","setIsRequired","WorkContext","WorkProvider","isRequired","IdentificationType","Labels","componentTitle","Select","States","documentNumber","Max","Date","toISOString","Min","OnChangeField","e","target","onChange","defaultValue","idt","identifycationTypeId","s","statename","min","max","Countries","countries","setCountries","Atctx","Attorney","ClientAdress","onSelectCountry","c","Adctx","SelectError","getStates","_countryId","onSelectState","Cities","cities","setCities","getCities","_stateId","onSelectCity","cityname","AdressType","adressType","setAdressType","onSelectTypeAddress","adt","addressTypeId","CEP","setError","CollectCep","maxLength","Cep","onCollectCep","test","ValidateCEP","AdressUtils","setInput","Adresses","selectedIndex","options","getAttribute","cep","BankAccounts","clientBankAccounts","setclientBankAccounts","selectItems","SelecttypeAccountId","SelectbankId","addAccount","bat","bankAccountTypeId","SelectSearch","search","filterOptions","fuse","Fuse","keys","threshold","array","item","emptyMessage","printOptions","closeOnSelect","index","find","b","toString","onClick","addBankAccount","PPERelatedsContext","PPERelatedsProvider","reqJson","ValidCPF","Soma","Resto","substring","PPERelateds","errorCpf","setErrorCpf","PPERelated","setPPERelated","cpfTitle","onlyLettersTitle","onColor","onHandleColor","offColor","offHandleColor","checked","cheked","handleDiameter","boxShadow","activeBoxShadow","height","width","pattern","title","mask","onlyLettersAndNumbersTitle","setHide","SpouseContext","SpouseProvider","spouseId","hide","Spouse","emissionDoc","Work","errorCNPJ","setErrorCNPJ","cnpjTitle","cnpj","tamanho","numeros","digitos","soma","pos","charAt","resultado","validarCNPJ","relationshipTypeId","relationshipTypesId","setRelationshipTypeId","LegalRepresentativeContext","LegalRepresentativeProvider","setRelationshipTypesId","errorOnApi","legalRepresentativeName","legalRepresentativeTaxpayerRegistry","reltid","ClientInfo","dateInvalid","residenceInOtherCountryIdSelect","otherTaxResidenceCountryIdSelect","OnChangeFields","d","ano_atual","getFullYear","mes_atual","getMonth","dia_atual","getDate","ano_aniversario","mes_aniversario","dia_aniversario","Qtd_Anos","stateNameBirth","g","m","pot","ed","questions","answers","FormSuityContext","FormSuityProvider","setQuestions","setAnswers","questionsAnswers","q","suityQuestionId","question","req","questionId","answerId","OnChange","QuestionId","a","suityAnswerId","answer","Adress","EmailType","Email","SelectTypeEmail","em","emailTypeId","placeholder","SetMail","Wealths","clientWealths","setClientWealths","SelectWealthTypeId","inputDescriptionTitle","addButtonDescription","valor","tw","wealthTypeId","cw","parseFloat","wealth","addClientWealth","PhoneType","Celnumber","Resnumber","Comnumber","SetPhoneNumber","CountryCode","StateCode","_Number","SelectTypePhone","ph","maskChar","Header","href","src","imgHeader","alt","loading","Footer","imgFooter","imgCadastro","AdditionalInformations","roc","otrc","App","HeaderTitle","BackToSite","ButtonSave","onSubmit","preventDefault","action","method","autoComplete","disabled","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnHover","pauseOnVisibilityChange","pauseOnFocusLoss","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.44917abf.chunk.js","sourcesContent":["// const proxy = \"http://localhost:2525/\"\r\nconst proxy = \"https://proxy-cors.vercel.app/\"\r\n\r\nconst config = {\r\n    _urlCountries: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Country`,\r\n    _urlStates: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/State/GetByCountryId/`,\r\n    _urlCities: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/City/GetByStateId/`,\r\n    _urlAdressType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/AddressType`,\r\n    _urlPhoneType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/PhoneType`,\r\n    _urlGenders: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Gender`,\r\n    _urlMaritalStatus: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/MaritalStatus`,\r\n    _urlMaritalAgreement: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/MaritalAgreement`,\r\n    _urlProfessionalOccupation: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/ProfessionalOccupation`,\r\n    _urlEducation: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Education`,\r\n    _urlEmailType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/EmailType`,\r\n    _urlIdentificationType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/IdentificationType`,\r\n    _urlWealthType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/WealthType`,\r\n    _urlRelationshipType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/RelationshipType`,\r\n    _urlBankAccountType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/BankAccountType`,\r\n    _urlBankGetByCode: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Bank/GetByCode/`,\r\n    _urlBankGetById: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Bank/GetById/`,\r\n    _urlBank: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Bank`,\r\n    _urlQuestions: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Suity/Questions`,\r\n    _urlAnswers: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Suity/Answers`,\r\n    _urlSaveClient: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/Save`,\r\n    _urlGetPluralAccount: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/GetPluralAccount/`\r\n}\r\n\r\nexport default config","/* eslint-disable no-empty */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Toastify extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex df-jcspb\">\r\n                <div className=\"toastify-icon\">\r\n                    <i className={this.props.className} />\r\n                </div>\r\n                <span> {this.props.description}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport Toastify from \"./index\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction Success(id,text,autoClose=2500,draggable = true,icon = 'fas fa-check'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.success(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable  }\r\n          );\r\n    }\r\n}\r\nfunction Error(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-triangle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.error(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\nfunction Warn(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-circle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.warn(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\n\r\nexport { Success, Error, Warn }","import { createContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\n\r\nimport { Error, Success, Warn } from '../components/Toastify/Toastify'\r\n\r\nconst InitialState = {\r\n  languagePT: true,\r\n  Clicked: false,\r\n  _Json_ClientAddresses: (obj) => { },\r\n  _Json_ClientInfo: (obj) => { },\r\n  _Json_AttorneyInfo: (obj) => { },\r\n  _Json_PhoneInfo: (obj) => { },\r\n  _Json_EmailInfo: (obj) => { },\r\n  _Json_ClientIdentification: (obj) => { },\r\n  _Json_Spouse: (obj) => { },\r\n  _Json_Work: (obj) => { },\r\n  _Json_Wealths: (obj) => { },\r\n  _Json_FormSuity: (obj) => { },\r\n  _Json_BankAccounts: (obj) => { },\r\n  _Json_LegalRepresentative: (obj) => { },\r\n  _Json_PPERelateds: (obj) => { },\r\n  saveClient: () => { }\r\n}\r\n\r\nlet reqJSON = {\r\n  clientId: 0,\r\n  name: '',\r\n  shortName: '',\r\n  taxPayerRegistry: '',\r\n  birthDate: '',\r\n  fatherName: '',\r\n  genderId: 0,\r\n  maritalStatusId: 0,\r\n  maritalAgreementId: 0,\r\n  motherName: '',\r\n  nationality: '',\r\n  countryBirthId: 0,\r\n  stateBirthId: 0,\r\n  stateBirthName: '',\r\n  professionalOccupationId: 0,\r\n  residenceInOtherCountryId: 0,\r\n  otherTaxResidenceCountryId: 0,\r\n  educationLevelId: 0,\r\n  ppeOccupation: '',\r\n  usPerson: false,\r\n  isAssociatedPerson: false,\r\n  urlCallback: '',\r\n  isAcceptedOrderAttorney: false,\r\n  isAdministratorInAnotherAccount: false,\r\n  attorneys: [],\r\n  spouse: {},\r\n  document: {},\r\n  work: {},\r\n  phones: [],\r\n  emails: [],\r\n  bankAccounts: [],\r\n  wealths: [],\r\n  addresses: [],\r\n  ppeRelateds: [],\r\n  formSuity: [],\r\n  legalRepresentatives: [],\r\n  authentication: {\r\n    login: 'APITEST',\r\n    password: 'APITEST'\r\n  }\r\n}\r\n\r\nexport const FormContext = createContext(InitialState);\r\n\r\nexport const FormProvider = (props) => {\r\n  const [languagePT, setLanguagePT] = useState(true)\r\n  const [Clicked, setClicked] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const url = window.location.pathname.split(\"/\")\r\n    const enUS = url.filter(i => i === 'en')\r\n    if (enUS.length > 0) setLanguagePT(false)\r\n    else setLanguagePT(true)\r\n  }, [])\r\n\r\n  function _Json_ClientAddresses(obj) {\r\n    reqJSON.addresses = [obj]\r\n  }\r\n  function _Json_ClientInfo(obj) {\r\n    reqJSON = { ...reqJSON, ...obj }\r\n  }\r\n  function _Json_AttorneyInfo(obj) {\r\n    reqJSON.attorneys = obj\r\n  }\r\n  function _Json_PhoneInfo(obj) {\r\n    reqJSON.phones = [obj]\r\n  }\r\n  function _Json_EmailInfo(obj) {\r\n    reqJSON.emails = [obj]\r\n  }\r\n  function _Json_ClientIdentification(obj) {\r\n    reqJSON.document = obj\r\n  }\r\n  function _Json_Spouse(obj) {\r\n    reqJSON.spouse = obj\r\n  }\r\n  function _Json_Work(obj) {\r\n    reqJSON.work = obj\r\n  }\r\n  function _Json_Wealths(obj) {\r\n    reqJSON.wealths = obj\r\n  }\r\n  function _Json_FormSuity(obj) {\r\n    reqJSON.formSuity = obj\r\n  }\r\n  function _Json_PPERelateds(obj) {\r\n    reqJSON.ppeRelateds = obj\r\n  }\r\n  function _Json_BankAccounts(obj) {\r\n    reqJSON.bankAccounts = obj\r\n  }\r\n  function _Json_LegalRepresentative(obj) {\r\n    reqJSON.legalRepresentatives = obj\r\n  }\r\n  function saveClient() {\r\n    const required = reqJSON.professionalOccupationId === 8 || reqJSON.professionalOccupationId === 9 ? false : true\r\n    if (reqJSON.bankAccounts.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione uma conta bancaria' : 'Add a bank account'\r\n      Warn(\r\n        \"Addbankaccount\",\r\n        ErrorMessage,\r\n        10000,\r\n        false\r\n      );\r\n    }\r\n    else if (required && reqJSON.wealths.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione um bem/finança' : 'Add a wealth / finance'\r\n      Warn(\r\n        \"Addwealth/finance\",\r\n        ErrorMessage,\r\n        10000,\r\n        false\r\n      );\r\n    }\r\n    else {\r\n      setClicked(true)\r\n      console.log(JSON.stringify(reqJSON))\r\n      axios.post(config._urlSaveClient, reqJSON)\r\n        .then(res => {\r\n          if (res.data) {\r\n            CheckClient(res.data.code)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          setClicked(false)\r\n          if (err.response) {\r\n            // Request made and server responded\r\n            // equired in minor age. Client.BirthDate: 22/04/2021. Age: 0\r\n            let err_message\r\n            const { innerMessage, message } = err.response.data\r\n            if (innerMessage) {\r\n              if (innerMessage.includes(\"spouse has a same Taxpayer as client\")) err_message = \"Cônjuge tem o mesmo cpf que o cliente\"\r\n              else err_message = innerMessage\r\n                Error(\r\n                  \"SaveClient\",\r\n                  err_message,\r\n                  20000,\r\n                  false\r\n                );\r\n            }\r\n            else {\r\n              console.log('Error', err.message);\r\n              const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n              Error(\r\n                \"ErrorOnCreateClient\",\r\n                ErrorMessage,\r\n                20000,\r\n                false\r\n              );\r\n            }\r\n          }\r\n          else if (err.request || err.response) {\r\n            // The request was made but no response was received\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              20000,\r\n              false\r\n            );\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              10000,\r\n              false\r\n            );\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  function CheckClient(clientCode) {\r\n    const interval = setInterval(() => {\r\n      axios.get(`${config._urlGetPluralAccount}${clientCode}`)\r\n        .then(res => {\r\n          if (res.data.clientCode) {\r\n            // Cliente cadastrado com sucesso\r\n            clearInterval(interval)\r\n            const SuccessMessage = languagePT ? 'Cadastro Concluido com Sucesso' : 'Registration Completed Successfully'\r\n            setClicked(false)\r\n            Success('ClientCreated', SuccessMessage, 5000, false)\r\n            // setTimeout(() => {\r\n            //   window.location.replace(\"https://flow2pay.com.br/\");\r\n            // }, 5000);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (err.response) {\r\n            // Request made and server responded\r\n            if (err.response.data.innerMessage) {\r\n              setClicked(true)\r\n              const WarnMessage = languagePT ? 'O cadastro está na fila de análise/aprovação interna' : 'The registration is in the internal review / approval queue'\r\n              Warn(\r\n                \"RegistryInQueue\",\r\n                WarnMessage,\r\n                10000,\r\n                false\r\n              );\r\n            }\r\n          }\r\n          else if (err.request) {\r\n            setClicked(false)\r\n            // The request was made but no response was received\r\n            console.log(err.request);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              10000,\r\n              false\r\n            );\r\n          } else {\r\n            setClicked(false)\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              10000,\r\n              false\r\n            );\r\n          }\r\n        })\r\n    }, 10000);\r\n\r\n  }\r\n\r\n  return (\r\n    <FormContext.Provider\r\n      value={{\r\n        languagePT,\r\n        _Json_ClientAddresses,\r\n        _Json_ClientInfo,\r\n        _Json_AttorneyInfo,\r\n        _Json_PhoneInfo,\r\n        _Json_EmailInfo,\r\n        _Json_ClientIdentification,\r\n        _Json_Spouse,\r\n        _Json_Work,\r\n        _Json_Wealths,\r\n        _Json_LegalRepresentative,\r\n        _Json_BankAccounts,\r\n        _Json_FormSuity,\r\n        _Json_PPERelateds,\r\n        Clicked,\r\n        saveClient\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FormContext.Provider>\r\n  );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    name: String,\r\n    setname: () => { },\r\n    shortName: String,\r\n    setshortName: () => { },\r\n    taxPayerRegistry: String,\r\n    settaxPayerRegistry: () => { },\r\n    birthDate: String,\r\n    setbirthDate: () => { },\r\n    age: Number,\r\n    setAge: () => { },\r\n    fatherName: String,\r\n    setfatherName: () => { },\r\n    genderId: String,\r\n    setgenderId: () => { },\r\n    gendersIds: [],\r\n    maritalStatusId: String,\r\n    setmaritalStatusId: () => { },\r\n    maritalStatus: [],\r\n    maritalAgreementId: String,\r\n    maritalAgreements: [],\r\n    motherName: String,\r\n    setmotherName: () => { },\r\n    nationality: String,\r\n    countryBirthId: String,\r\n    getCountriesBirthId: () => { },\r\n    stateBirthId: String,\r\n    stateBirthName: String,\r\n    professionalOccupationId: String,\r\n    residenceInOtherCountryId: String,\r\n    otherTaxResidenceCountryId: String,\r\n    educationLevelId: String,\r\n    ppeOccupation: String,\r\n    setppeOccupation: () => { },\r\n    usPerson: String,\r\n    setusPerson: () => { },\r\n    isAssociatedPerson: String,\r\n    setisAssociatedPerson: () => { },\r\n    urlCallback: String,\r\n    isAcceptedOrderAttorney: String,\r\n    isAdministratorInAnotherAccount: String,\r\n    setisAdministratorInAnotherAccount: () => { }\r\n}\r\nexport const ClientInfoContext = createContext(InitialState);\r\n\r\nexport const ClientInfoProvider = (props) => {\r\n    const {_Json_ClientInfo, _Json_Spouse} = useContext(FormContext)\r\n\r\n    //#region States\r\n\r\n    const [clientId, setclientId] = useState(0)\r\n    const [name, setname] = useState('')\r\n    const [shortName, setshortName] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [age, setAge] = useState(-1)\r\n    const [fatherName, setfatherName] = useState('')\r\n    const [motherName, setmotherName] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    //! Gender variables\r\n    const [genderId, setgenderId] = useState('')\r\n    const [gendersIds, setgendersIds] = useState([])\r\n    //! Marital variables\r\n    const [maritalStatusId, setmaritalStatusId] = useState('')\r\n    const [maritalStatus, setMaritalStatus] = useState([])\r\n    const [maritalAgreementId, setmaritalAgreementId] = useState('')\r\n    const [maritalAgreements, setmaritalAgreements] = useState([])\r\n    //! Country and state birth variables\r\n    const [countryBirthId, setcountryBirthId] = useState('')\r\n    const [countriesBirthId, setcountriesBirthId] = useState([])\r\n    const [stateBirthId, setstateBirthId] = useState('')\r\n    const [stateBirthName, setstateBirthName] = useState('')\r\n    const [statesBirth, setstatesBirth] = useState([])\r\n    //! Professional ocupation variables\r\n    const [professionalOccupationId, setprofessionalOccupationId] = useState('')\r\n    const [professionalOccupationsId, setprofessionalOccupationsId] = useState([])\r\n    //! Residence in other country variables\r\n    const [residenceInOtherCountryId, setresidenceInOtherCountryId] = useState('')\r\n    const [residencesInOtherCountryId, setresidencesInOtherCountryId] = useState([])\r\n    //! Other tax residence in other country variables\r\n    const [otherTaxResidenceCountryId, setotherTaxResidenceCountryId] = useState('')\r\n    const [otherTaxResidencesCountryId, setotherTaxResidencesCountryId] = useState([])\r\n    //! Education level variables\r\n    const [educationLevelId, seteducationLevelId] = useState('')\r\n    const [educationsLevelId, seteducationsLevelId] = useState([])\r\n    const [ppeOccupation, setppeOccupation] = useState('')\r\n    const [usPerson, setusPerson] = useState(false)\r\n    const [isAssociatedPerson, setisAssociatedPerson] = useState(false)\r\n    const [isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount] = useState(false)\r\n\r\n    //#endregion\r\n\r\n    const reqJSON = {\r\n        clientId: clientId,\r\n        name: name,\r\n        shortName: shortName,\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        birthDate: `${birthDate}T00:00:00`,\r\n        fatherName: fatherName,\r\n        genderId: parseInt(genderId),\r\n        maritalStatusId: parseInt(maritalStatusId),\r\n        maritalAgreementId: maritalAgreementId ? parseInt(maritalAgreementId) : 0,\r\n        motherName: motherName,\r\n        nationality: nationality,\r\n        countryBirthId: parseInt(countryBirthId),\r\n        stateBirthId: parseInt(stateBirthId),\r\n        stateBirthName: stateBirthName,\r\n        professionalOccupationId: parseInt(professionalOccupationId),\r\n        residenceInOtherCountryId: parseInt(residenceInOtherCountryId),\r\n        otherTaxResidenceCountryId: parseInt(otherTaxResidenceCountryId),\r\n        educationLevelId: parseInt(educationLevelId),\r\n        ppeOccupation: ppeOccupation,\r\n        usPerson: usPerson,\r\n        isAssociatedPerson: isAssociatedPerson,\r\n        isAdministratorInAnotherAccount: isAdministratorInAnotherAccount,\r\n    }\r\n    useEffect(() => {\r\n        if(maritalStatusId !== \"2\") _Json_Spouse({})\r\n    }, [maritalStatusId])\r\n\r\n    // Campos não obrigatórios\r\n    useEffect(() => {\r\n        _Json_ClientInfo(reqJSON)\r\n    }, [usPerson, isAssociatedPerson,ppeOccupation, maritalAgreementId, otherTaxResidenceCountryId,residenceInOtherCountryId,isAdministratorInAnotherAccount])\r\n\r\n    // Campos obrigatórios\r\n    useEffect(() => {\r\n        if (name && shortName && birthDate && fatherName && motherName && taxPayerRegistry && genderId && maritalStatusId && nationality && countryBirthId &&\r\n            stateBirthId && stateBirthName && professionalOccupationId  && educationLevelId) {\r\n            _Json_ClientInfo(reqJSON)\r\n        }\r\n    }, [name, shortName, birthDate, fatherName, motherName, taxPayerRegistry, genderId, maritalStatusId, nationality, countryBirthId,\r\n        stateBirthId, stateBirthName, professionalOccupationId, educationLevelId])\r\n\r\n\r\n    useEffect(() => {\r\n            getGendersIds()\r\n            getMaritalStatus()\r\n            getMaritalAgreements()\r\n            getCountries()\r\n            getProfessionalOccupations()\r\n            getEducation()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(countryBirthId === '') setstatesBirth([])\r\n        else getStatesBirth() \r\n    }, [countryBirthId])\r\n\r\n\r\n    function getGendersIds() {\r\n        axios.get(config._urlGenders)\r\n            .then(res => setgendersIds(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalStatus() {\r\n        axios.get(config._urlMaritalStatus)\r\n            .then(res => setMaritalStatus(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalAgreements() {\r\n        axios.get(config._urlMaritalAgreement)\r\n            .then(res => setmaritalAgreements(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => {\r\n                setcountriesBirthId(res.data)\r\n                setresidencesInOtherCountryId(res.data)\r\n                setotherTaxResidencesCountryId(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getStatesBirth() {\r\n        axios.get(`${config._urlStates}${countryBirthId}`)\r\n            .then(res => setstatesBirth(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getProfessionalOccupations() {\r\n        axios.get(config._urlProfessionalOccupation)\r\n            .then(res => setprofessionalOccupationsId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getEducation() {\r\n        axios.get(config._urlEducation)\r\n            .then(res => seteducationsLevelId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <ClientInfoContext.Provider\r\n            value={{\r\n                name, setname,\r\n                shortName, setshortName,\r\n                taxPayerRegistry, settaxPayerRegistry,\r\n                birthDate, setbirthDate, age, setAge,\r\n                fatherName, setfatherName,\r\n                motherName, setmotherName,\r\n                genderId, setgenderId, gendersIds,\r\n                maritalStatusId, setmaritalStatusId, maritalStatus,\r\n                maritalAgreements, setmaritalAgreementId,\r\n                nationality, setnationality,\r\n                setcountryBirthId, countriesBirthId,\r\n                setstateBirthId, setstateBirthName, statesBirth,\r\n                setprofessionalOccupationId, professionalOccupationsId,professionalOccupationId,\r\n                residencesInOtherCountryId, setresidenceInOtherCountryId,\r\n                otherTaxResidencesCountryId, setotherTaxResidenceCountryId,\r\n                seteducationLevelId, educationsLevelId,\r\n                ppeOccupation,setppeOccupation,\r\n                usPerson, setusPerson,\r\n                isAssociatedPerson, setisAssociatedPerson,\r\n                isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ClientInfoContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from '../contexts/FormContexts'\r\nimport { ClientInfoContext } from \"./ClientInfoContexts\"\r\n\r\nconst InitialState = {\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n}\r\n\r\nexport const IdentificationTypeContext = createContext(InitialState);\r\n\r\nexport const IdentificationTypeProvider = (props) => {\r\n\r\n    const { _Json_ClientIdentification } = useContext(FormContext)\r\n    const { taxPayerRegistry } = useContext(ClientInfoContext)\r\n\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    let reqJSON = {\r\n        identificationTypeId: parseInt(identificationTypeId),\r\n        number: number,\r\n        emissionInssuer: emissionInssuer,\r\n        emission: `${emission}T00:00:00`,\r\n        stateId: parseInt(stateId),\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (identificationTypeId && emissionInssuer && emission && stateId) {\r\n            if (identificationTypeId === \"40\") {\r\n                const cpf = taxPayerRegistry.replace(/[^\\d]+/g, '')\r\n                setnumber(cpf)\r\n                _Json_ClientIdentification(reqJSON)\r\n            }\r\n            else if (number) _Json_ClientIdentification(reqJSON)\r\n        }\r\n    }, [identificationTypeId, number, emissionInssuer, emission, stateId,taxPayerRegistry])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <IdentificationTypeContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                setnumber,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states\r\n            }}\r\n        >\r\n            {props.children}\r\n        </IdentificationTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    isAcceptedOrderAttorney: false,\r\n    name: '',\r\n    setname: () => { },\r\n    taxpayerRegistry: '',\r\n    settaxpayerRegistry: () => { },\r\n    birthDate: '',\r\n    setbirthDate: () => { },\r\n    isPEP: false,\r\n    setisPEP: () => { },\r\n    actionDescription: '',\r\n    setactionDescription: () => { },\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setneighborhood: () => { },\r\n    description: '',\r\n    setdescription: () => { },\r\n    zipCode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setnumber: () => { },\r\n    complement: '',\r\n    setcomplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { },\r\n}\r\nexport const AttorneyContext = createContext(InitialState);\r\n\r\nexport const AttorneyProvider = (props) => {\r\n    const [isAcceptedOrderAttorney, setisAcceptedOrderAttorney] = useState(false)\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [isPEP, setisPEP] = useState(false)\r\n    const [actionDescription, setactionDescription] = useState('')\r\n    const [countryId, setCountryId] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setneighborhood] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const [zipCode, setZipCode] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [complement, setcomplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_AttorneyInfo } = useContext(FormContext)\r\n\r\n    const attorneys = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry.replace(/[^\\d]+/g, ''),\r\n        birthDate: birthDate,\r\n        isPEP: isPEP,\r\n        actionDescription: actionDescription,\r\n        address: {\r\n            countryId: countryId,\r\n            stateId: stateId,\r\n            stateName: stateName,\r\n            cityId: cityId,\r\n            cityName: cityName,\r\n            neighborhood: neighborhood,\r\n            description: description,\r\n            zipCode: zipCode,\r\n            number: number,\r\n            complement: complement,\r\n            typeAddressId: typeAddressId\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(!isAcceptedOrderAttorney) _Json_AttorneyInfo([])\r\n        else if (isAcceptedOrderAttorney && name && taxpayerRegistry && birthDate && actionDescription && countryId && stateId && stateName && cityId && cityName &&\r\n            neighborhood && description && zipCode && number && complement && typeAddressId) {\r\n            _Json_AttorneyInfo([attorneys])\r\n        }\r\n    }, [isAcceptedOrderAttorney, name, taxpayerRegistry, birthDate, isPEP, actionDescription, countryId, stateId, stateName, cityId, cityName,\r\n        neighborhood, description, zipCode, number, complement, typeAddressId])\r\n\r\n    return (\r\n        <AttorneyContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, birthDate, isPEP, actionDescription,\r\n                countryId, isAcceptedOrderAttorney, stateId,\r\n                setisAcceptedOrderAttorney, setname, settaxpayerRegistry,\r\n                setbirthDate, setisPEP, setactionDescription,\r\n                setCountryId, setStateId, setStateName, setCityId, setneighborhood,\r\n                setCityName, setTypeAddressId, setZipCode, setdescription, setnumber, setcomplement\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AttorneyContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setNeighborhood: () => { },\r\n    description: '',\r\n    setDescription: () => { },\r\n    zipcode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setNumber: () => { },\r\n    complement: '',\r\n    setComplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { }\r\n}\r\nexport const AdressesContext = createContext(InitialState);\r\n\r\nexport const AdressesProvider = (props) => {\r\n    const [countryId, setCountryId] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [zipcode, setZipCode] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setNeighborhood] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [complement, setComplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_ClientAddresses } = useContext(FormContext)\r\n\r\n    const AdressJson = {\r\n        \"countryId\": countryId,\r\n        \"stateId\": stateId,\r\n        \"stateName\": stateName,\r\n        \"cityId\": cityId,\r\n        \"cityName\": cityName,\r\n        \"neighborhood\": neighborhood,\r\n        \"description\": description,\r\n        \"zipCode\": zipcode,\r\n        \"number\": number,\r\n        \"complement\": complement,\r\n        \"typeAddressId\": typeAddressId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cityId && cityName && complement && countryId && description && neighborhood && number && stateId && stateName && typeAddressId && zipcode) {\r\n            _Json_ClientAddresses(AdressJson)\r\n        }\r\n    }, [cityId, cityName, complement, countryId, description, neighborhood, number, stateId, stateName, typeAddressId, zipcode])\r\n\r\n    return (\r\n        <AdressesContext.Provider\r\n            value={{\r\n                countryId,\r\n                setCountryId,\r\n                stateId,\r\n                setStateId,\r\n                setStateName,\r\n                cityId,\r\n                setCityId,\r\n                setCityName,\r\n                zipcode,\r\n                setZipCode,\r\n                stateName,\r\n                cityName,\r\n                neighborhood,\r\n                setNeighborhood,\r\n                description,\r\n                setDescription,\r\n                number,\r\n                setNumber,\r\n                complement,\r\n                setComplement,\r\n                typeAddressId,\r\n                setTypeAddressId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AdressesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    bankId: '',\r\n    agency: '',\r\n    account: '',\r\n    digit: '',\r\n    typeAccountId: '',\r\n    bankAccountTypes: [],\r\n    banks: [],\r\n    setbankId: () => { },\r\n    setagency: () => { },\r\n    setaccount: () => { },\r\n    setdigit: () => { },\r\n    settypeAccountId: () => { }\r\n}\r\n\r\nexport const BankAccountsContext = createContext(InitialState);\r\n\r\nexport const BankAccountsProvider = (props) => {\r\n    const [bankId, setbankId] = useState('')\r\n    const [agency, setagency] = useState('')\r\n    const [account, setaccount] = useState('')\r\n    const [digit, setdigit] = useState('')\r\n    const [typeAccountId, settypeAccountId] = useState('')\r\n\r\n\r\n    const [bankAccountTypes, setBankAccountTypes] = useState([])\r\n    const [banks, setBanks] = useState([])\r\n\r\n    useEffect(() => {\r\n        GetAccountTypes()\r\n        GetBanks()\r\n    }, [])\r\n\r\n    function GetAccountTypes() {\r\n        axios.get(config._urlBankAccountType)\r\n            .then(res => { if (res.data) setBankAccountTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function GetBanks() {\r\n        const newBanks = []\r\n        axios.get(config._urlBank)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    res.data.map(i => {\r\n                        const bank = { name: `${i.code} ${i.name}`, value: `${i.bankId}` }\r\n                        newBanks.push(bank)\r\n                    })\r\n                }\r\n            })\r\n            .then(res => {\r\n                setBanks(newBanks)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <BankAccountsContext.Provider\r\n            value={{\r\n                bankAccountTypes, banks,\r\n                bankId, setbankId,\r\n                agency, setagency,\r\n                account, setaccount,\r\n                digit, setdigit,\r\n                typeAccountId, settypeAccountId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </BankAccountsContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    phoneTypes: [],\r\n    phoneTypeId: '',\r\n    countryCode: '',\r\n    stateCode: '',\r\n    number: '',\r\n    setPhoneTypeId: () => { },\r\n    setCountryCode: () => { },\r\n    setStateCode: () => { },\r\n    setNumber: () => { },\r\n}\r\n\r\n\r\n\r\nexport const PhonesContext = createContext(InitialState);\r\n\r\nexport const PhonesProvider = (props) => {\r\n    const { _Json_PhoneInfo } = useContext(FormContext)\r\n    const [phoneTypeId, setPhoneTypeId] = useState('')\r\n    const [countryCode, setCountryCode] = useState('')\r\n    const [stateCode, setStateCode] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [phoneTypes, setPhoneTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        countryCode: countryCode,\r\n        stateCode: stateCode,\r\n        number: number,\r\n        type: parseInt(phoneTypeId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (countryCode && stateCode && number && phoneTypeId) _Json_PhoneInfo(reqJSON)\r\n    }, [countryCode, stateCode, number, phoneTypeId])\r\n\r\n    useEffect(() => {\r\n            getPhoneTypes()\r\n    }, [])\r\n\r\n\r\n    function getPhoneTypes() {\r\n        axios.get(config._urlPhoneType)\r\n            .then(res => {\r\n                if (res.data) setPhoneTypes(res.data)\r\n            })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    return (\r\n        <PhonesContext.Provider\r\n            value={{\r\n                phoneTypes, setPhoneTypeId, phoneTypeId,\r\n                countryCode, setCountryCode,\r\n                stateCode, setStateCode,\r\n                number, setNumber\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PhonesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    mail: '',\r\n    type: '',\r\n    isCorrespondency: true,\r\n    emailTypes: [],\r\n    setMail: () => { },\r\n    setType: () => { },\r\n    setIsCorrespondency: () => { },\r\n}\r\n\r\nexport const EmailContext = createContext(InitialState);\r\n\r\nexport const EmailProvider = (props) => {\r\n    const { _Json_EmailInfo } = useContext(FormContext)\r\n    const [mail, setMail] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [isCorrespondency, setIsCorrespondency] = useState(true)\r\n    const [emailTypes, setEmailTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        mail: mail,\r\n        type: parseInt(type),\r\n        isCorrespondency: true\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (mail && type) _Json_EmailInfo(reqJSON)\r\n    }, [mail, type])\r\n\r\n    useEffect(() => {\r\n            getEmailTypes()\r\n    }, [])\r\n\r\n\r\n    function getEmailTypes() {\r\n        axios.get(config._urlEmailType)\r\n            .then(res => {\r\n                if (res.data) setEmailTypes(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <EmailContext.Provider\r\n            value={{\r\n                emailTypes,\r\n                setIsCorrespondency, isCorrespondency,\r\n                setType, setMail\r\n            }}\r\n        >\r\n            {props.children}\r\n        </EmailContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport { FormContext } from './FormContexts'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    typeWealthId: '',\r\n    value: '',\r\n    description: '',\r\n    typesWealthId: [],\r\n    settypeWealthId: () => { },\r\n    setvalue: () => { },\r\n    setdescription: () => { },\r\n}\r\n\r\nexport const WealthsTypeContext = createContext(InitialState);\r\n\r\nexport const WealthsTypeProvider = (props) => {\r\n\r\n    const [typeWealthId, settypeWealthId] = useState('')\r\n    const [value, setvalue] = useState('')\r\n    const [description, setdescription] = useState('')\r\n\r\n    const [typesWealthId, settypesWealthId] = useState([])\r\n\r\n    useEffect(() => {\r\n            GetWealthTypes()\r\n    }, [])\r\n\r\n    function GetWealthTypes() {\r\n        axios.get(config._urlWealthType)\r\n            .then(res => { if (res.data) settypesWealthId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <WealthsTypeContext.Provider\r\n            value={{\r\n                typeWealthId, value, description,\r\n                settypeWealthId, setvalue, setdescription,\r\n                typesWealthId,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WealthsTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    institutionName: '',\r\n    occupation: '',\r\n    profession: '',\r\n    corporateTaxpayerRegistry: '',\r\n    setinstitutionName: () => { },\r\n    setoccupation: () => { },\r\n    setprofession: () => { },\r\n    setcorporateTaxpayerRegistry: () => { },\r\n    setIsRequired: () => { }\r\n}\r\n\r\nexport const WorkContext = createContext(InitialState);\r\n\r\nexport const WorkProvider = (props) => {\r\n\r\n    const { _Json_Work } = useContext(FormContext)\r\n\r\n    const [institutionName, setinstitutionName] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n    const [profession, setprofession] = useState('')\r\n    const [corporateTaxpayerRegistry, setcorporateTaxpayerRegistry] = useState('')\r\n    \r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    let reqJSON = {\r\n        institutionName: institutionName,\r\n        occupation: occupation,\r\n        profession: profession,\r\n        corporateTaxpayerRegistry: corporateTaxpayerRegistry.replace(/[^\\d]+/g, '')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_Work({})\r\n        else if (institutionName && occupation && profession && corporateTaxpayerRegistry){\r\n            _Json_Work(reqJSON)\r\n        }\r\n    }, [isRequired,institutionName, occupation, profession, corporateTaxpayerRegistry])\r\n\r\n\r\n    return (\r\n        <WorkContext.Provider\r\n            value={{\r\n                institutionName, setinstitutionName,\r\n                occupation, setoccupation,\r\n                profession, setprofession,\r\n                corporateTaxpayerRegistry, setcorporateTaxpayerRegistry,\r\n                setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WorkContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { IdentificationTypeContext } from '../../contexts/IdentificationTypeContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function IdentificationType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, \r\n        setstateId,setemissionInssuer, setnumber, setemission, emission } = useContext(IdentificationTypeContext)\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Identificação' : 'Identification',\r\n        Select: languagePT ? 'Selecionar tipo de identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Document UF',\r\n        emission: languagePT ? 'Data de emissão' : 'Issue date',\r\n        emissionInssuer: languagePT ? 'Orgão emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    function OnChangeField(e) {\r\n        const {value, id} = e.target \r\n        switch (id) {\r\n            case 'identificationType':\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'IdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'identificationTypeemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'identificationTypedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'identificationTypeemission':\r\n                setemission(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divIdentificationTypeSelect\">\r\n\r\n            <div className=\"componentTitle\">\r\n                <span>{Labels.componentTitle}</span>\r\n                <hr />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.Select}</p>\r\n                </div>\r\n                <select required\r\n                    name=\"identificationType\" id=\"identificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex-input d-flexdc\"}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.documentNumber}</p>\r\n                </div>\r\n                <input required={identificationTypeId !== \"40\"} type=\"text\" name=\"identificationTypedocument\" id=\"identificationTypedocument\" onChange={e => OnChangeField(e)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.States}</p>\r\n                </div>\r\n                <select required name=\"IdtypeStateId\" id=\"IdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderStates()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.emission}</p>\r\n                </div>\r\n                <input value={emission} required type=\"date\" name=\"identificationTypeemission\" id=\"identificationTypeemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max}/>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.emissionInssuer}</p>\r\n                </div>\r\n                <input required type=\"text\" name=\"identificationTypeemissionInssuer\" id=\"identificationTypeemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                />\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nexport default function Countries(props) {\r\n    const [countries, setCountries] = useState([])\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar País' : 'Select Country'\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n        getCountries()\r\n    }, [])\r\n\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => { if (res.data) setCountries(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function RenderCountries() {\r\n        return (\r\n            countries.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"countries\" id=\"countries\" onChange={props.onSelectCountry}>\r\n            <option defaultValue value=\"\"></option>\r\n            {RenderCountries()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { AdressesContext } from \"../../contexts/AdressesContexts\";\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const Atctx = useContext(AttorneyContext)\r\n    const Adctx = useContext(AdressesContext)\r\n\r\n    const [states, setStates] = useState([])\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Estado' : 'Select State',\r\n        SelectError: languagePT ? 'Erro ao consultar estados' : 'Error querying states'\r\n    }\r\n\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if(Atctx.isAcceptedOrderAttorney) required = true\r\n        else if(!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n\r\n    useEffect(() => {\r\n        if(props.ClientAdress) {\r\n            if (Adctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n        else if (props.Attorney){\r\n            if (Atctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n    }, [Atctx.countryId, Adctx.countryId])\r\n\r\n    function getStates() {\r\n        const _countryId = props.ClientAdress ? Adctx.countryId : Atctx.countryId\r\n        axios.get(`${config._urlStates}${_countryId}`)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    setStates(res.data)\r\n                }\r\n                else {\r\n                    console.log(Labels.SelectError)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(Labels.SelectError)\r\n            })\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"states\" id=\"states\" onChange={props.onSelectState}>\r\n            <option defaultValue value=\"\"></option>\r\n            {RenderStates()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function Cities(props) {\r\n    const Adctx = useContext(AdressesContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const [cities, setCities] = useState([])\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Cidade' : 'Select City',\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n        if (props.ClientAdress) {\r\n            if (Adctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n        else if (props.Attorney) {\r\n            if (Atctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n    }, [Atctx.stateId, Adctx.stateId])\r\n\r\n    function getCities() {\r\n        const _stateId = props.ClientAdress ? Adctx.stateId : Atctx.stateId\r\n        axios.get(`${config._urlCities}${_stateId}`)\r\n            .then(res => { if (res.data) { setCities(res.data) } })\r\n            .catch(err => { console.log(err) })\r\n    }\r\n    function RenderCities() {\r\n        return (\r\n            cities.map(c => {\r\n                return (\r\n                    <option key={c.cityId} value={c.cityId} cityname={c.name}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divCitiesSelect\">\r\n            <select required={required} name=\"cities\" id=\"cities\" onChange={props.onSelectCity}>\r\n                <option defaultValue value=\"\"></option>\r\n                {RenderCities()}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport config from \"../../config\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nexport default function AdressType(props) {\r\n    const [adressType, setAdressType] = useState([])\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Tipo de Endereço' : 'Select Address Type',\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n            getAdressType()\r\n    }, [])\r\n\r\n    function getAdressType() {\r\n        axios.get(config._urlAdressType)\r\n            .then(res => {if (res.data) setAdressType(res.data)})\r\n            .catch(err => console.log(err))\r\n    }\r\n    function RenderAdressType() {\r\n        return (\r\n            adressType.map(adt => {\r\n                return (\r\n                    <option key={adt.addressTypeId} value={adt.addressTypeId}>{adt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n            <select required={required} name=\"addressType\" id=\"addressType\" onChange={props.onSelectTypeAddress}>\r\n                <option defaultValue value=\"\"></option>\r\n                {RenderAdressType()}\r\n            </select>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function CEP(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const [error, setError] = useState(false)\r\n    const Labels = {\r\n        CollectCep: languagePT ? 'Digite seu cep' : 'Type your ZIP Code',\r\n        Error: languagePT ? 'CEP Invalido' : 'Invalid ZIP Code'\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    function ValidateCEP(e) {\r\n        const Cep = e.target.value\r\n        if (Cep.length === 0) {\r\n            setError(false)\r\n            props.onCollectCep('')\r\n        }\r\n        const validacep = /^[0-9]{5,8}$/;\r\n        if (validacep.test(Cep)) {\r\n            setError(false)\r\n            props.onCollectCep(Cep)\r\n        }\r\n        else {\r\n            props.onCollectCep('')\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"divCollectCep\">\r\n            <input required={required} className={error ? \"error\" : \"\"} type=\"text\" name=\"cep\" id=\"cep\"\r\n                maxLength=\"8\" onChange={e => ValidateCEP(e)} />\r\n            <p className={error ? \"msgError\" : \"d-none\"}>{Labels.Error}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts';\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function AdressUtils(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setComplement, setDescription, setNeighborhood, setNumber } = useContext(AdressesContext)\r\n    const { setcomplement, setdescription, setneighborhood, setnumber, isAcceptedOrderAttorney } = useContext(AttorneyContext)\r\n    const Labels = {\r\n        neighborhood: languagePT ? 'Bairro' : 'Neighborhood',\r\n        description: languagePT ? 'Rua' : 'Street',\r\n        number: languagePT ? 'Número' : 'Number',\r\n        complement: languagePT ? 'Complemento' : 'Complement',\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if(isAcceptedOrderAttorney) required = true\r\n        else if(!isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n    \r\n\r\n    function setInput(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'neighborhood':\r\n                if (props.Attorney) setneighborhood(value)\r\n                else if (props.ClientAdress) setNeighborhood(value)\r\n                break;\r\n            case 'description':\r\n                if (props.Attorney) setdescription(value)\r\n                else if (props.ClientAdress) setDescription(value)\r\n                break;\r\n            case 'number':\r\n                if (props.Attorney) setnumber(value)\r\n                else if (props.ClientAdress) setNumber(value)\r\n                break;\r\n            case 'complement':\r\n                if (props.Attorney) setcomplement(value)\r\n                else if (props.ClientAdress) setComplement(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        // <div className=\"divCollectUtilsAdress\">\r\n            <>\r\n            {props.children}\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.neighborhood}</p>\r\n                </div>\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"neighborhood\" id=\"neighborhood\"/>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.description}</p>\r\n                </div>\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"description\" id=\"description\"/>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.number}</p>\r\n                </div>\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" maxLength=\"20\" name=\"number\" id=\"number\"/>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.complement}</p>\r\n                </div>\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"complement\" id=\"complement\"/>\r\n            </div>\r\n        </>\r\n        /* </div> */\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nexport default function Adresses(props) {\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode } = useContext(AdressesContext)\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Endereço' : 'Address',\r\n    }\r\n\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientAdress\">\r\n            <div className=\"componentTitle\">\r\n                <span>Contato e endereço</span>\r\n                <hr />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">País</p>\r\n                </div>\r\n                <Countries onSelectCountry={onSelectCountry} ClientAdress={true} Attorney={false} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">Estado</p>\r\n                </div>\r\n                <States onSelectState={onSelectState} ClientAdress={true} Attorney={false} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">Cidade</p>\r\n                </div>\r\n                <Cities onSelectCity={onSelectCity} ClientAdress={true} Attorney={false} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">Selecione o tipo do endereço</p>\r\n                </div>\r\n                <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={true} Attorney={false} />\r\n            </div>\r\n\r\n\r\n            <AdressUtils ClientAdress={true} Attorney={false}>\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">CEP</p>\r\n                    </div>\r\n                    <CEP onCollectCep={onCollectCep} ClientAdress={true} Attorney={false} />\r\n                </div>\r\n            </AdressUtils>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport Fuse from 'fuse.js';\r\n\r\nimport SelectSearch from 'react-select-search'\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { BankAccountsContext } from '../../contexts/BankContexts';\r\n\r\nimport './index.css'\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function BankAccounts(props) {\r\n    const [error, setError] = useState(false)\r\n    const { languagePT, _Json_BankAccounts } = useContext(FormContext)\r\n    const { bankAccountTypes, banks,\r\n        bankId, setbankId,\r\n        agency, setagency,\r\n        account, setaccount,\r\n        digit, setdigit,\r\n        typeAccountId, settypeAccountId } = useContext(BankAccountsContext)\r\n    const [clientBankAccounts, setclientBankAccounts] = useState([])\r\n    const Labels = {\r\n        selectItems: languagePT ? 'Selecione um item da lista e Preencha os campos' : 'Select an item from the list and fill the fields',\r\n        SelecttypeAccountId: languagePT ? 'Tipo de conta bancária' : 'Bank account type',\r\n        SelectbankId: languagePT ? 'Selecione o seu banco' : 'Select your bank',\r\n        account: languagePT ? 'Número da conta bancária' : 'Bank account number',\r\n        digit: languagePT ? 'Digito' : 'Digit',\r\n        agency: languagePT ? 'Agência' : 'Agency',\r\n        description: languagePT ? 'Contas bancarias' : 'Bank accounts',\r\n        addAccount: languagePT ? 'Adicionar conta bancária' : 'CLICK TO ADD BANK ACCOUNT'\r\n    }\r\n\r\n    function RenderBankAccountTypes() {\r\n        return (\r\n            bankAccountTypes.map(bat => {\r\n                return (\r\n                    <option key={bat.bankAccountTypeId} value={bat.bankAccountTypeId}>{bat.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderBanks() {\r\n        return (\r\n            banks.map(bank => {\r\n                return (\r\n                    <option key={bank.bankId} value={bank.bankId} code={bank.code}>{bank.code} | {bank.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderclientBankAccounts() {\r\n        return (\r\n            clientBankAccounts.map((bat, index) => {\r\n                return (\r\n                    <div className=\"account\" key={index}>\r\n                        <div className=\"d-flex d-flexdc\">\r\n                            <span className=\"inputDescription\">{banks.find(b => b.value === bat.bankId.toString()).name}</span>\r\n                            <span className=\"inputDescription\">Agencia: {bat.agency}</span>\r\n                            <span className=\"inputDescription\">Conta: {bat.account}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeBankAccount(index)}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addBankAccount() {\r\n        if (!account || !agency || !bankId || !digit || !typeAccountId) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            let bank = {\r\n                bankId: parseInt(bankId),\r\n                agency: parseInt(agency),\r\n                account: parseInt(account),\r\n                digit: parseInt(digit),\r\n                typeAccountId: parseInt(typeAccountId)\r\n            }\r\n            setclientBankAccounts([...clientBankAccounts, bank])\r\n            setaccount('')\r\n            setdigit('')\r\n            setagency('')\r\n        }\r\n    }\r\n    function removeBankAccount(i) {\r\n        setclientBankAccounts(clientBankAccounts.filter((c, index) => index !== i))\r\n    }\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'typeAccountId':\r\n                settypeAccountId(value)\r\n                break;\r\n            case 'account':\r\n                setaccount(value)\r\n                break;\r\n            case 'digit':\r\n                setdigit(value)\r\n                break;\r\n            case 'agency':\r\n                setagency(value)\r\n                break;\r\n            case 'bankId':\r\n                console.log(value)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        _Json_BankAccounts(clientBankAccounts)\r\n    }, [clientBankAccounts])\r\n\r\n\r\n    function fuzzySearch(options) {\r\n        const fuse = new Fuse(options, {\r\n            keys: ['name'],\r\n            threshold: 0.3,\r\n        });\r\n\r\n        return (value) => {\r\n            if (!value.length) {\r\n                return options;\r\n            }\r\n            let array = fuse.search(value)\r\n            array = array.map(i => i.item)\r\n            return array;\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className=\"divBankAccounts\">\r\n            <div className=\"componentTitle\">\r\n                <span>{Labels.description}</span>\r\n                <hr />\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.SelecttypeAccountId}</p>\r\n                </div>\r\n                <select required={clientBankAccounts.length === 0} name=\"typeAccountId\" id=\"typeAccountId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderBankAccountTypes()}\r\n                </select>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.SelectbankId}</p>\r\n                </div>\r\n                <SelectSearch options={banks} search={true} filterOptions={fuzzySearch} name=\"name\"\r\n                    emptyMessage=\"Não encontrado\" id=\"bankId\"\r\n                    printOptions=\"auto\" closeOnSelect={true} onChange={id => setbankId(id)}/>\r\n            </div>\r\n            \r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.account}</p>\r\n                </div>\r\n                <input required={clientBankAccounts.length === 0} value={account} type=\"text\" name=\"account\" id=\"account\"\r\n                   onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.digit}</p>\r\n                </div>\r\n                <input required={clientBankAccounts.length === 0} value={digit} type=\"text\" name=\"digit\" id=\"digit\"\r\n                    onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.agency}</p>\r\n                </div>\r\n                <input required={clientBankAccounts.length === 0} value={agency} type=\"text\" name=\"agency\" id=\"agency\"\r\n                  onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n\r\n            <div className=\"bankAccounts\">\r\n                {RenderclientBankAccounts()}\r\n            </div>\r\n\r\n\r\n            <div className=\"addAccount\">\r\n                <button onClick={() => addBankAccount()} type=\"button\">\r\n                    {Labels.addAccount}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>{Labels.selectItems}</p>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    name: '',\r\n    nationality: '',\r\n    occupation: '',\r\n    settaxPayerRegistry: () => { },\r\n    setname: () => { },\r\n    setnationality: () => { },\r\n    setoccupation: () => { }\r\n}\r\n\r\nexport const PPERelatedsContext = createContext(InitialState);\r\n\r\nexport const PPERelatedsProvider = (props) => {\r\n    const { _Json_PPERelateds } = useContext(FormContext)\r\n\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [name, setname] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n\r\n    const reqJson = {\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        name: name,\r\n        nationality: nationality,\r\n        occupation: occupation\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(name && taxPayerRegistry && occupation && nationality) _Json_PPERelateds([reqJson])\r\n    }, [name,taxPayerRegistry,occupation,nationality])\r\n\r\n    return (\r\n        <PPERelatedsContext.Provider\r\n            value={{\r\n                taxPayerRegistry,\r\n                name,\r\n                nationality,\r\n                occupation,\r\n                settaxPayerRegistry,\r\n                setname,\r\n                setnationality,\r\n                setoccupation\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PPERelatedsContext.Provider>\r\n    );\r\n};\r\n","function ValidCPF(cpf) {\r\n    var Soma;\r\n    var Resto;\r\n    Soma = 0;\r\n    if (cpf === \"00000000000\") return false;\r\n    if (cpf === \"11111111111\") return false;\r\n    if (cpf === \"22222222222\") return false;\r\n    if (cpf === \"33333333333\") return false;\r\n    if (cpf === \"44444444444\") return false;\r\n    if (cpf === \"55555555555\") return false;\r\n    if (cpf === \"66666666666\") return false;\r\n    if (cpf === \"77777777777\") return false;\r\n    if (cpf === \"88888888888\") return false;\r\n\r\n    for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n    if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n    Soma = 0;\r\n    for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n    if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n    return true;\r\n}\r\n\r\nfunction validarCNPJ(cnpj) {\r\n    cnpj = cnpj.replace(/[^\\d]+/g,'');\r\n    if(cnpj == '') return false;\r\n    if (cnpj.length != 14)\r\n        return false;\r\n    // Elimina CNPJs invalidos conhecidos\r\n    if (cnpj == \"00000000000000\" || \r\n        cnpj == \"11111111111111\" || \r\n        cnpj == \"22222222222222\" || \r\n        cnpj == \"33333333333333\" || \r\n        cnpj == \"44444444444444\" || \r\n        cnpj == \"55555555555555\" || \r\n        cnpj == \"66666666666666\" || \r\n        cnpj == \"77777777777777\" || \r\n        cnpj == \"88888888888888\" || \r\n        cnpj == \"99999999999999\")\r\n        return false;\r\n    // Valida DVs\r\n    let tamanho = cnpj.length - 2\r\n    let numeros = cnpj.substring(0,tamanho);\r\n    let digitos = cnpj.substring(tamanho);\r\n    let soma = 0;\r\n    let pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(0))\r\n        return false;\r\n    tamanho = tamanho + 1;\r\n    numeros = cnpj.substring(0,tamanho);\r\n    soma = 0;\r\n    pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(1))\r\n          return false;\r\n           \r\n    return true;\r\n}\r\n\r\nexport {\r\n    ValidCPF, validarCNPJ\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { PPERelatedsContext } from '../../contexts/PPERelatedsContext';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport InputMask from \"react-input-mask\";\r\nimport Switch from \"react-switch\";\r\n\r\nimport { ValidCPF } from '../../utils'\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function PPERelateds(props) {\r\n    const { languagePT, _Json_PPERelateds } = useContext(FormContext)\r\n    const { name, nationality, occupation, setname, setnationality,\r\n        setoccupation, settaxPayerRegistry, taxPayerRegistry } = useContext(PPERelatedsContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n\r\n    const [PPERelated, setPPERelated] = useState(false)\r\n\r\n    const Labels = {\r\n        PPERelated: languagePT ? 'Cliente têm relacionamento com uma Pessoa Politicamente Exposta ?' : 'Customer has a relationship with a Politically Exposed Person ?',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        name: languagePT ? 'Nome da Pessoa Politicamente Exposta' : 'Politically Exposed Person\\'s Name',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'TaxPayerRegistry',\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!PPERelated) _Json_PPERelateds([])\r\n    }, [PPERelated])\r\n\r\n    function OnChangeField(e) {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"RelPPERelated\">\r\n                <Switch\r\n                    onColor=\"#071223\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#071223\"\r\n                    offHandleColor=\"#F49925\"\r\n                    checked={PPERelated}\r\n                    onChange={cheked => setPPERelated(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={35}\r\n                    width={70}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n                <p className=\"inputDescription\">{Labels.PPERelated}</p>\r\n            </div>\r\n\r\n\r\n            <div className={PPERelated ? \"d-flex-input d-flexdc\" : \"d-none\"}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.name}</p>\r\n                </div>\r\n                <input value={name} required={PPERelated} type=\"text\" name=\"name\" id=\"name\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex-input d-flexdc\" : \"d-none\"}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.nationality}</p>\r\n                </div>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} value={nationality} required={PPERelated} type=\"text\"\r\n                    name=\"nationality\" id=\"nationality\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex-input d-flexdc\" : \"d-none\"}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.taxPayerRegistry}</p>\r\n                </div>\r\n                <InputMask className={PPERelated ? \"\" : \"d-none\"} value={taxPayerRegistry} required={PPERelated}\r\n                    type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\"\r\n                    mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\"\r\n                    title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n\r\n            <div className={PPERelated ? \"d-flex-input d-flexdc\" : \"d-none\"}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.occupation}</p>\r\n                </div>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} required={PPERelated} value={occupation}\r\n                    type=\"text\" name=\"occupation\" id=\"occupation\"\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setname: () => { },\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n    setHide: () => { }\r\n}\r\n\r\nexport const SpouseContext = createContext(InitialState);\r\n\r\nexport const SpouseProvider = (props) => {\r\n\r\n    const { _Json_Spouse } = useContext(FormContext)\r\n\r\n    const [spouseId, setspouseId] = useState(0)\r\n    const [name, setname] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    \r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    const [hide, setHide] = useState(false)\r\n\r\n    let reqJSON = {\r\n        spouseId: parseInt(spouseId),\r\n        name: name,\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        document: {\r\n            identificationTypeId: parseInt(identificationTypeId),\r\n            number: number,\r\n            emissionInssuer: emissionInssuer,\r\n            emission: emission,\r\n            stateId: parseInt(stateId)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (identificationTypeId === \"40\") {\r\n            if (name && taxPayerRegistry && identificationTypeId && emissionInssuer && emission && stateId) {\r\n                const cpf = taxPayerRegistry.replace(/[^\\d]+/g, '')\r\n                reqJSON.document.number = identificationTypeId === \"40\" ? cpf : number\r\n                reqJSON.taxPayerRegistry = cpf\r\n                _Json_Spouse(reqJSON)\r\n            }\r\n        }\r\n        else if (name && taxPayerRegistry && identificationTypeId && number && emissionInssuer && emission && stateId) {\r\n            const cpf = taxPayerRegistry.replace(/[^\\d]+/g, '')\r\n            reqJSON.taxPayerRegistry = cpf\r\n            _Json_Spouse(reqJSON)\r\n        }\r\n\r\n    }, [hide, name, taxPayerRegistry, identificationTypeId, number, emissionInssuer, emission, stateId])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <SpouseContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                settaxPayerRegistry, taxPayerRegistry,\r\n                setnumber, setname, name,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states,\r\n                setHide\r\n            }}\r\n        >\r\n            {props.children}\r\n        </SpouseContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { SpouseContext } from '../../contexts/Spouse';\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport { ValidCPF } from '../../utils'\r\nimport './index.css'\r\n\r\nexport default function Spouse(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, setHide,\r\n        setstateId, setemissionInssuer, setnumber, setemission, number, taxPayerRegistry, settaxPayerRegistry, setname, name } = useContext(SpouseContext)\r\n    const Labels = {\r\n        name: languagePT ? 'Nome Completo' : 'Name',\r\n        Select: languagePT ? 'Selecionar Tipo de Identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Document UF',\r\n        emission: languagePT ? 'Data de emissão' : 'Issue date',\r\n        emissionInssuer: languagePT ? 'Orgão Emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'spousename':\r\n                setname(value)\r\n                break;\r\n            case 'spouseidentificationType':\r\n                setnumber('')\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'spouseIdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'spouseemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'spousedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'spouseemission':\r\n                const emissionDoc = `${value}T00:00:00`\r\n                setemission(emissionDoc)\r\n                break;\r\n            case 'spousedocumentcpf':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className={props.hide ? \"d-none\" : \"divSpouse\"}>\r\n            <div className=\"componentTitle\">\r\n                <span>Informações da cônjuge</span>\r\n                <hr />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.name}</p>\r\n                </div>\r\n                <input value={name} required={props.required} type=\"text\" name=\"spousename\" id=\"spousename\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.Select}</p>\r\n                </div>\r\n                <select required={props.required}\r\n                    name=\"spouseidentificationType\" id=\"spouseidentificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex-input d-flexdc\"}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.documentNumber}</p>\r\n                </div>\r\n                <input value={number} required={identificationTypeId !== \"40\" && props.required} type=\"text\" name=\"spousedocument\" id=\"spousedocument\" onChange={e => OnChangeField(e)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.taxPayerRegistry}</p>\r\n                </div>\r\n                <InputMask value={taxPayerRegistry} required={props.required} type=\"text\" name=\"spousedocumentcpf\" id=\"spousedocumentcpf\"\r\n                    mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\"\r\n                    title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.States}</p>\r\n                </div>\r\n                <select required={props.required} name=\"spouseIdtypeStateId\" id=\"spouseIdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderStates()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.emission}</p>\r\n                </div>\r\n                <input required={props.required} type=\"date\" name=\"spouseemission\" id=\"spouseemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.emissionInssuer}</p>\r\n                </div>\r\n                <input required={props.required} type=\"text\" name=\"spouseemissionInssuer\" id=\"spouseemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                />\r\n            </div>\r\n\r\n\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WorkContext } from '../../contexts/Work';\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport { validarCNPJ } from '../../utils'\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport './index.css'\r\n\r\nexport default function Work(props) {\r\n    const [errorCNPJ, setErrorCNPJ] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setinstitutionName, setprofession, setoccupation, setcorporateTaxpayerRegistry,\r\n        institutionName, profession, occupation, corporateTaxpayerRegistry, setIsRequired } = useContext(WorkContext)\r\n    const { professionalOccupationId } = useContext(ClientInfoContext)\r\n\r\n    const required = professionalOccupationId === \"3\" || professionalOccupationId === \"6\" ||\r\n        professionalOccupationId === \"8\" || professionalOccupationId === \"9\" || professionalOccupationId === \"\" ? false : true\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [required])\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações Instituição de Trabalho' : 'Work Institution Information',\r\n        institutionName: languagePT ? 'Nome da instituição' : 'Institution Name',\r\n        onlyLettersAndNumbersTitle: languagePT ? 'Somente letras e numeros' : 'Only letters and numbers',\r\n        profession: languagePT ? 'Profissão' : 'Profession',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        corporateTaxpayerRegistry: languagePT ? 'CNPJ da instituição de trabalho' : 'CNPJ of the work institution',\r\n        cnpjTitle: languagePT ? 'Digite um cnpj valido' : 'Enter a valid cnpj',\r\n    }\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'institutionName':\r\n                setinstitutionName(value)\r\n                break;\r\n            case 'profession':\r\n                setprofession(value)\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'corporateTaxpayerRegistry':\r\n                setcorporateTaxpayerRegistry(value)\r\n                const cnpj = value.replace(/[^\\d]+/g, '');\r\n\r\n                if (cnpj.length < 14) setErrorCNPJ(false)\r\n                else if (cnpj.length === 14) {\r\n                    if (validarCNPJ(cnpj)) {\r\n                        setErrorCNPJ(false)\r\n                        setcorporateTaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        setcorporateTaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCNPJ(true)\r\n                    }\r\n                }\r\n                else if (cnpj.length > 14) {\r\n                    setErrorCNPJ(true)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={required ? \"divWork\" : \"d-none\"}>\r\n            <div className=\"componentTitle\">\r\n                <span>{Labels.componentTitle}</span>\r\n                <hr />\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.institutionName}</p>\r\n                </div>\r\n                <input required={required} value={institutionName} type=\"text\" name=\"institutionName\" id=\"institutionName\"\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.profession}</p>\r\n                </div>\r\n                <input required={required} value={profession} type=\"text\" name=\"profession\" id=\"profession\"\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.occupation}</p>\r\n                </div>\r\n                <input required={required} value={occupation} type=\"text\" name=\"occupation\" id=\"occupation\"\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.corporateTaxpayerRegistry}</p>\r\n                </div>\r\n                <InputMask required={required} value={corporateTaxpayerRegistry} type=\"text\" name=\"corporateTaxpayerRegistry\" id=\"corporateTaxpayerRegistry\"\r\n                    pattern=\"^\\d{2}\\.?\\d{3}\\.?\\d{3}\\/?\\d{4}-?\\d{2}$\" mask=\"99.999.999/9999-99\" title={Labels.cnpjTitle}\r\n                    onChange={e => OnChangeField(e)} />\r\n                <p className={errorCNPJ ? 'errorCNPJ' : 'd-none'}>{Labels.cnpjTitle}</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nimport config from \"../config\";\r\n\r\nconst InitialState = {\r\n    name: '',\r\n    taxpayerRegistry: '',\r\n    relationshipTypeId: '',\r\n    relationshipTypesId: [],\r\n    setname: () => { },\r\n    settaxpayerRegistry: () => { },\r\n    setRelationshipTypeId: () => { },\r\n    setIsRequired: () => { }\r\n}\r\nexport const LegalRepresentativeContext = createContext(InitialState);\r\n\r\nexport const LegalRepresentativeProvider = (props) => {\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [relationshipTypeId, setRelationshipTypeId] = useState('')\r\n\r\n    const [relationshipTypesId, setRelationshipTypesId] = useState([])\r\n\r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    const { _Json_LegalRepresentative, errorOnApi } = useContext(FormContext)\r\n\r\n    const legalRepresentatives = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry,\r\n        relationshipTypeId: relationshipTypeId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_LegalRepresentative([])\r\n        else if (name && taxpayerRegistry && relationshipTypeId) _Json_LegalRepresentative([legalRepresentatives])\r\n    }, [isRequired, name, taxpayerRegistry, relationshipTypeId])\r\n\r\n    useEffect(() => {\r\n            GetRelationsShipType()\r\n    }, [])\r\n\r\n    function GetRelationsShipType() {\r\n        axios.get(config._urlRelationshipType)\r\n            .then(res => { if (res.data) setRelationshipTypesId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <LegalRepresentativeContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, relationshipTypeId,\r\n                setname, settaxpayerRegistry, setRelationshipTypeId,\r\n                relationshipTypesId, setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </LegalRepresentativeContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\nimport { LegalRepresentativeContext } from '../../contexts/LegalRepresentativeContexts';\r\n\r\nimport './index.css'\r\nimport { ValidCPF } from '../../utils'\r\n\r\nimport InputMask from 'react-input-mask'\r\n\r\nexport default function Work(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { age } = useContext(ClientInfoContext)\r\n    const { name, taxpayerRegistry, relationshipTypesId,\r\n        setname, settaxpayerRegistry, setRelationshipTypeId, setIsRequired } = useContext(LegalRepresentativeContext)\r\n\r\n    let required = age >= 0 && age < 18 ? true : false\r\n\r\n    const Labels = {\r\n        legalRepresentativeName: languagePT ? 'Nome ao representante legal do cliente' : '',\r\n        legalRepresentativeTaxpayerRegistry: languagePT ? 'CPF ao representante legal do cliente' : '',\r\n        relationshipTypeId: languagePT ? 'Tipo do relacionamento ao representante legal' : '',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : '',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    \r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'legalRepresentativeName':\r\n                setname(value)\r\n                break;\r\n            case 'relationshipTypeId':\r\n                setRelationshipTypeId(value)\r\n                break;\r\n            case 'legalRepresentativeTaxpayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxpayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderRelationshipTypes() {\r\n        return (\r\n            relationshipTypesId.map(reltid => {\r\n                return (\r\n                    <option key={reltid.relationshipTypeId} value={reltid.relationshipTypeId}>{reltid.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [])\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n        if (required) {\r\n            setname('')\r\n            setRelationshipTypeId('')\r\n            settaxpayerRegistry('')\r\n        }\r\n    }, [age])\r\n\r\n    return (\r\n        <div className={required ? \"divLegalRepresentative\" : \"d-none\"}>\r\n            <div className=\"componentTitle\">\r\n                <span>Representates legais</span>\r\n                <hr />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.legalRepresentativeName}</p>\r\n                </div>\r\n                <input required={required} value={name} type=\"text\" name=\"legalRepresentativeName\" id=\"legalRepresentativeName\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.legalRepresentativeTaxpayerRegistry}</p>\r\n                </div>\r\n                <InputMask value={taxpayerRegistry} required={required} type=\"text\" name=\"legalRepresentativeTaxpayerRegistry\" id=\"legalRepresentativeTaxpayerRegistry\"\r\n                    mask=\"999.999.999-99\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.relationshipTypeId}</p>\r\n                </div>\r\n                <select required={required}\r\n                    name=\"relationshipTypeId\" id=\"relationshipTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderRelationshipTypes()}\r\n                </select>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\n\r\n\r\nimport Spouse from '../Spouse'\r\nimport Work from '../Work'\r\nimport LegalRepresentative from '../LegalRepresentative'\r\n\r\nimport { LegalRepresentativeProvider } from '../../contexts/LegalRepresentativeContexts';\r\nimport { SpouseProvider } from '../../contexts/Spouse';\r\nimport { WorkProvider } from '../../contexts/Work';\r\n\r\n\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nimport { ValidCPF } from '../../utils'\r\n\r\nimport Switch from \"react-switch\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport './index.css'\r\n\r\nexport default function ClientInfo() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const {\r\n        // States\r\n        name, shortName, birthDate, fatherName, motherName, taxPayerRegistry, genderId, gendersIds, maritalStatusId, nationality,\r\n        countriesBirthId, stateBirthId, statesBirth, professionalOccupationId, professionalOccupationsId,\r\n        residenceInOtherCountryId, residencesInOtherCountryId, otherTaxResidencesCountryId, otherTaxResidenceCountryId,\r\n        educationLevelId, educationsLevelId, ppeOccupation, usPerson, isAssociatedPerson, isAdministratorInAnotherAccount,\r\n        maritalStatus, maritalAgreements, maritalAgreementId,\r\n        // Sets\r\n        setname, setshortName, setbirthDate, setAge, setfatherName, setmotherName, settaxPayerRegistry, setgenderId, setmaritalStatusId, setmaritalAgreementId,\r\n        setnationality, setcountryBirthId, setstateBirthId, setstateBirthName, setprofessionalOccupationId, setresidenceInOtherCountryId,\r\n        setotherTaxResidenceCountryId, seteducationLevelId, setppeOccupation, setusPerson, setisAssociatedPerson, setisAdministratorInAnotherAccount\r\n    } = useContext(ClientInfoContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações do cliente' : 'Customer information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        dateInvalid: languagePT ? 'Selecione uma data valida' : 'Select a valid date',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        name: languagePT ? 'Nome Completo' : 'Name',\r\n        shortName: languagePT ? 'Apelido' : 'ShortName',\r\n        birthDate: languagePT ? 'Data de Nascimento' : 'BirthDate',\r\n        fatherName: languagePT ? 'Nome do Pai' : 'Father Name',\r\n        motherName: languagePT ? 'Nome da Mãe' : 'Mother Name',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        genderId: languagePT ? 'Genero' : 'Gender',\r\n        maritalStatusId: languagePT ? 'Estado civil' : 'Marital Status',\r\n        maritalAgreementId: languagePT ? 'Regime do estado civil' : 'Marital Agreement',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        countryBirthId: languagePT ? 'País de nascimento' : 'Country Birth',\r\n        stateBirthId: languagePT ? 'UF de nascimento do cliente' : 'State Birth',\r\n        stateBirthName: languagePT ? 'Nome UF de nascimento' : 'State Birth Name',\r\n        professionalOccupationId: languagePT ? 'Natureza da ocupação' : 'Professional Occupation',\r\n        residenceInOtherCountryId: languagePT ? 'País ao cliente que possui residencia em outros países' : 'Residence in Other Country',\r\n        otherTaxResidenceCountryId: languagePT ? 'País ao cliente que possui domicílio fiscal além do declarado' : 'Other Tax Residence Country',\r\n        residenceInOtherCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        otherTaxResidenceCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        educationLevelId: languagePT ? 'Escolaridade' : 'Education Level',\r\n        ppeOccupation: languagePT ? 'Cargo PPE do cliente, se o mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n        usPerson: languagePT ? 'Cliente considerado como USPerson' : 'Considered as USPerson',\r\n        isAssociatedPerson: languagePT ? 'Pessoa Vinculada' : 'Associated Person',\r\n        isAdministratorInAnotherAccount: languagePT ? 'Cliente realiza operações por conta de terceiros' : 'Customer performs operations on behalf of third parties',\r\n        urlCallback: languagePT ? '' : '',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador' : 'Authorizes the transmission of orders by proxy',\r\n    }\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value, selectedIndex, options } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'shortName':\r\n                setshortName(value)\r\n                break;\r\n            case 'birthDate':\r\n                setAge('')\r\n\r\n                const d = new Date()\r\n                const ano_atual = d.getFullYear()\r\n                const mes_atual = d.getMonth() + 1\r\n                const dia_atual = d.getDate()\r\n\r\n                const ano_aniversario = parseInt(value.split(\"-\")[0])\r\n                const mes_aniversario = parseInt(value.split(\"-\")[1])\r\n                const dia_aniversario = parseInt(value.split(\"-\")[2])\r\n\r\n                if (ano_aniversario >= parseInt(Min.split(\"-\")[0])) {\r\n                    let Qtd_Anos = ano_atual - ano_aniversario\r\n                    if (mes_atual < mes_aniversario || mes_atual === mes_aniversario && dia_atual < dia_aniversario) {\r\n                        Qtd_Anos--\r\n                    }\r\n                    setAge(Qtd_Anos)\r\n                }\r\n                setbirthDate(value)\r\n                break;\r\n            case 'fatherName':\r\n                setfatherName(value)\r\n                break;\r\n            case 'motherName':\r\n                setmotherName(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'gender':\r\n                setgenderId(value)\r\n                break;\r\n            case 'maritalStatusId':\r\n                setmaritalStatusId(value)\r\n                if (value !== '2') setmaritalAgreementId('')\r\n                break;\r\n            case 'maritalAgreementId':\r\n                setmaritalAgreementId(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            case 'countryBirthId':\r\n                setcountryBirthId(value)\r\n                break;\r\n            case 'statesBirth':\r\n                const stateNameBirth = options[selectedIndex].getAttribute('statename')\r\n                // console.log(stateNameBirth)\r\n                setstateBirthId(value)\r\n                setstateBirthName(stateNameBirth)\r\n                break;\r\n            case 'professionalOccupationId':\r\n                setprofessionalOccupationId(value)\r\n                break;\r\n            case 'residenceInOtherCountryId':\r\n                setresidenceInOtherCountryId(value)\r\n                break;\r\n            case 'otherTaxResidenceCountryId':\r\n                setotherTaxResidenceCountryId(value)\r\n                break;\r\n            case 'educationLevel':\r\n                seteducationLevelId(value)\r\n                break;\r\n            case 'ppeOccupation':\r\n                setppeOccupation(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderGenders() {\r\n        return (\r\n            gendersIds.map(g => {\r\n                return (\r\n                    <option key={g.genderId} value={g.genderId}>{g.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalStatus() {\r\n        return (\r\n            maritalStatus.map(m => {\r\n                return (\r\n                    <option key={m.maritalStatusId} value={m.maritalStatusId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalAgreementId() {\r\n        return (\r\n            maritalAgreements.map(m => {\r\n                return (\r\n                    <option key={m.maritalAgreementId} value={m.maritalAgreementId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderCountriesBirth() {\r\n        return (\r\n            countriesBirthId.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            statesBirth.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderProfessionalOccupations() {\r\n        return (\r\n            professionalOccupationsId.map(pot => {\r\n                return (\r\n                    <option key={pot.professionalOccupationId} value={pot.professionalOccupationId}>{pot.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderEducationLevel() {\r\n        return (\r\n            educationsLevelId.map(ed => {\r\n                return (\r\n                    <option key={ed.educationLevelId} value={ed.educationLevelId}>{ed.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientInfo\">\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.name}</p>\r\n                </div>\r\n                <input value={name} required type=\"text\" name=\"name\" id=\"name\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.shortName}</p>\r\n                </div>\r\n                <input value={shortName} required type=\"text\" name=\"shortName\" id=\"shortName\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.birthDate}</p>\r\n                </div>\r\n                <input value={birthDate} required type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                    min={Min} max={Max} title={Labels.onlyLettersTitle} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.fatherName}</p>\r\n                </div>\r\n                <input value={fatherName} required type=\"text\" name=\"fatherName\" id=\"fatherName\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.motherName}</p>\r\n                </div>\r\n                <input value={motherName} required type=\"text\" name=\"motherName\" id=\"motherName\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.taxPayerRegistry}</p>\r\n                </div>\r\n                <InputMask value={taxPayerRegistry} required type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\"\r\n                    mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.genderId}</p>\r\n                </div>\r\n                <select value={genderId} required className=\"clSelect\" name=\"gender\" id=\"gender\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderGenders()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.maritalStatusId}</p>\r\n                </div>\r\n                <select value={maritalStatusId} required className=\"clSelect\" name=\"maritalStatusId\" id=\"maritalStatusId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderMaritalStatus()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.nationality}</p>\r\n                </div>\r\n                <input value={nationality} required type=\"text\" name=\"nationality\" id=\"nationality\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.countryBirthId}</p>\r\n                </div>\r\n                <select required className=\"clSelect\" name=\"countryBirthId\" id=\"countryBirthId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderCountriesBirth()}\r\n                </select>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.stateBirthName}</p>\r\n                </div>\r\n                <select value={stateBirthId} required className=\"clSelect\" name=\"statesBirth\" id=\"statesBirth\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderStates()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.professionalOccupationId}</p>\r\n                </div>\r\n                <select value={professionalOccupationId} required className=\"clSelect\" name=\"professionalOccupationId\" id=\"professionalOccupationId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderProfessionalOccupations()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.educationLevelId}</p>\r\n                </div>\r\n                <select value={educationLevelId} required className=\"clSelect\" name=\"educationLevel\" id=\"educationLevel\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderEducationLevel()}\r\n                </select>\r\n            </div>\r\n\r\n            <LegalRepresentativeProvider>\r\n                <LegalRepresentative />\r\n            </LegalRepresentativeProvider>\r\n\r\n            <SpouseProvider>\r\n                <Spouse hide={maritalStatusId === '2' ? false : true} required={maritalStatusId === '2' ? true : false}>\r\n                    <div className={maritalStatusId === '2' ? \"d-flex-input d-flexdc\" : \"d-none\"}>\r\n                        <div className=\"d-flex\">\r\n                            <p className=\"required\">*</p>\r\n                            <p className=\"inputDescription\">{Labels.maritalAgreementId}</p>\r\n                        </div>\r\n                        <select value={maritalAgreementId} required={maritalStatusId === '2'} className=\"clSelect\" name=\"maritalAgreementId\" id=\"maritalAgreementId\" onChange={e => OnChangeFields(e)}>\r\n                            <option defaultValue value=\"\"></option>\r\n                            {RenderMaritalAgreementId()}\r\n                        </select>\r\n                    </div>\r\n                </Spouse>\r\n            </SpouseProvider>\r\n\r\n            <WorkProvider>\r\n                <Work />\r\n            </WorkProvider>\r\n        </div>\r\n    )\r\n}\r\n","import { createContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    questions:[],\r\n    answers:[]\r\n}\r\n\r\nexport const FormSuityContext = createContext(InitialState);\r\n\r\nexport const FormSuityProvider = (props) => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState([])\r\n\r\n    useEffect(() => {\r\n        GetQuestions()\r\n        GetAnswers()\r\n    }, [])\r\n\r\n    function GetQuestions() {\r\n        axios.get(config._urlQuestions)\r\n            .then(res => { if (res.data) setQuestions(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function GetAnswers() {\r\n        axios.get(config._urlAnswers)\r\n            .then(res => { if (res.data) setAnswers(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <FormSuityContext.Provider\r\n            value={{\r\n                questions, answers\r\n            }}\r\n        >\r\n            {props.children}\r\n        </FormSuityContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { FormSuityContext } from \"../../contexts/FormSuity\";\r\n\r\nimport Select from \"../Select\"\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT, _Json_FormSuity } = useContext(FormContext)\r\n    const { answers, questions } = useContext(FormSuityContext)\r\n\r\n    const Labels = {\r\n        answers: languagePT ? 'Selecionar uma resposta para a pergunta' : '',\r\n        title: languagePT ? 'Questionário' : ''\r\n    }\r\n\r\n    let questionsAnswers = []\r\n\r\n    function OnChange(e) {\r\n        const { value, props } = e\r\n        const req = {\r\n            questionId: parseInt(props.suityQuestionId),\r\n            answerId: parseInt(value)\r\n        }\r\n        questionsAnswers = questionsAnswers.filter(q => q.questionId !== parseInt(props.suityQuestionId))\r\n        questionsAnswers.push(req)\r\n        _Json_FormSuity(questionsAnswers)\r\n    }\r\n\r\n    function RenderAnswers(QuestionId) {\r\n        const answersFiltered = answers.filter(a => a.suityQuestionId === QuestionId)\r\n        return (\r\n            answersFiltered.map(a => {\r\n                return (\r\n                    <option key={a.suityAnswerId} value={a.suityAnswerId} >{a.answer}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    function RenderQuestions() {\r\n        return (\r\n            questions.map((q, index) => {\r\n                return (\r\n                    <div className=\"div-question-answer\" key={q.suityQuestionId} id={q.suityQuestionId}>\r\n                        <div className=\"d-flex\">\r\n                            <p className=\"required\">*</p>\r\n                            <p className=\"inputDescription\">{q.question}</p>\r\n                        </div>\r\n                        <select className=\"selectpicker\" required name={q.suityQuestionId} id={q.suityQuestionId}\r\n                            onChange={e => OnChange(e)}>\r\n                            <option defaultValue value=\"\">{Labels.answers}</option>\r\n                            {RenderAnswers(q.suityQuestionId)}\r\n                        </select>\r\n\r\n                        {/* <Select title={Labels.answers} required={true} id={index} props={{ suityQuestionId: q.suityQuestionId }}\r\n                            options={answers.filter(a => a.suityQuestionId === q.suityQuestionId).map(a => a)}\r\n                            value=\"suityAnswerId\" label=\"answer\" OnChange={OnChange} /> */}\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"componentTitle\">\r\n                <span>{Labels.title}</span>\r\n                <hr />\r\n            </div>\r\n            {RenderQuestions()}\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nimport Switch from \"react-switch\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport { ValidCPF } from '../../utils'\r\n\r\n\r\nexport default function Attorney() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Dados do procurador' : 'Attorney information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador ?' : 'Do you authorize the transmission of orders by a Attorney?',\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        Adress: languagePT ? 'Endereço' : 'Address',\r\n        birthDate: languagePT ? 'Nascimento' : 'BirthDate',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        actionDescription: languagePT ? 'Descrição dos poderes' : 'Description of powers',\r\n        isPEP: languagePT ? 'O mesmo consta como Pessoa Politicamente Exposta' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person',\r\n    }\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode,\r\n        isAcceptedOrderAttorney, setisAcceptedOrderAttorney, name, taxpayerRegistry,\r\n        isPEP, setisPEP, actionDescription, setactionDescription, setname, settaxpayerRegistry, setbirthDate } = useContext(AttorneyContext)\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'birthDate':\r\n                const birthDate = `${value}T00:00:00`\r\n                console.log(birthDate)\r\n                setbirthDate(birthDate)\r\n                break;\r\n            case 'taxpayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxpayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'actionDescription':\r\n                setactionDescription(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"Attorney-check\">\r\n                <Switch\r\n                    onColor=\"#071223\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#071223\"\r\n                    offHandleColor=\"#F49925\"\r\n                    checked={isAcceptedOrderAttorney}\r\n                    onChange={cheked => setisAcceptedOrderAttorney(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={35}\r\n                    width={70}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n                <p className=\"inputDescription\">{Labels.isAcceptedOrderAttorney}</p>\r\n            </div>\r\n\r\n            <div className={isAcceptedOrderAttorney ? \"attorney-info\" : \"d-none\"}>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">{Labels.name}</p>\r\n                    </div>\r\n                    <input value={name} required={isAcceptedOrderAttorney} type=\"text\" name=\"name\" id=\"name\"\r\n                        pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                </div>\r\n\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">{Labels.taxPayerRegistry}</p>\r\n                    </div>\r\n                    <InputMask value={taxpayerRegistry} required={isAcceptedOrderAttorney} type=\"text\" name=\"taxpayerRegistry\" id=\"taxpayerRegistry\"\r\n                        mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle}\r\n                        onChange={e => OnChangeFields(e)} />\r\n                    <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n                </div>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">{Labels.taxPayerRegistry}</p>\r\n                    </div>\r\n                    <InputMask value={taxpayerRegistry} required={isAcceptedOrderAttorney} type=\"text\" name=\"taxpayerRegistry\" id=\"taxpayerRegistry\"\r\n                        mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle}\r\n                        onChange={e => OnChangeFields(e)} />\r\n                    <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n                </div>\r\n\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">Data de nascimento</p>\r\n                    </div>\r\n                    <input required={isAcceptedOrderAttorney} type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                        min={Min} max={Max} />\r\n                </div>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">{Labels.actionDescription}</p>\r\n                    </div>\r\n                    <input required={isAcceptedOrderAttorney} value={actionDescription} type=\"text\" name=\"actionDescription\" id=\"actionDescription\"\r\n                        pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                </div>\r\n\r\n                <div className=\"Attorney-check\">\r\n                    <Switch\r\n                        onColor=\"#071223\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#071223\"\r\n                        offHandleColor=\"#F49925\"\r\n                        checked={isPEP}\r\n                        onChange={cheked => setisPEP(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={35}\r\n                        width={70}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                    <p className=\"inputDescription\">{Labels.isPEP} ?</p>\r\n                </div>\r\n\r\n                \r\n\r\n\r\n                <div className=\"componentTitle\">\r\n                    <span>Endereço do procurador</span>\r\n                    <hr />\r\n                </div>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">País</p>\r\n                    </div>\r\n                    <Countries onSelectCountry={onSelectCountry} ClientAdress={false} Attorney={true} />\r\n                </div>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">Estado</p>\r\n                    </div>\r\n                    <States onSelectState={onSelectState} ClientAdress={false} Attorney={true} />\r\n                </div>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">Cidade</p>\r\n                    </div>\r\n                    <Cities onSelectCity={onSelectCity} ClientAdress={false} Attorney={true} />\r\n                </div>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">Selecione o tipo do endereço</p>\r\n                    </div>\r\n                    <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={false} Attorney={true} />\r\n                </div>\r\n\r\n\r\n                <AdressUtils ClientAdress={true} Attorney={false}>\r\n                    <div className=\"d-flex-input d-flexdc\">\r\n                        <div className=\"d-flex\">\r\n                            <p className=\"required\">*</p>\r\n                            <p className=\"inputDescription\">CEP</p>\r\n                        </div>\r\n                        <CEP onCollectCep={onCollectCep} ClientAdress={false} Attorney={true} />\r\n                    </div>\r\n                </AdressUtils>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { EmailContext } from '../../contexts/EmailContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function EmailType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { emailTypes, setType, setMail } = useContext(EmailContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar tipo de e-mail' : 'Select Email Type',\r\n        Email: languagePT ? 'Formato aceitado: example@domain.com' : 'Format accepted: example@domain.com'\r\n    }\r\n\r\n    function SelectTypeEmail(e) {\r\n        const { value } = e.target\r\n        setType(value)\r\n    }\r\n    function SetMail(e) {\r\n        const { value } = e.target\r\n        setMail(value)\r\n    }\r\n    function RenderEmailType() {\r\n        return (\r\n            emailTypes.map(em => {\r\n                return (\r\n                    <option key={em.emailTypeId} value={em.emailTypeId}>{em.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            {/* <div className=\"divEmailTypeSelect\"> */}\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">{Labels.Select}</p>\r\n                    </div>\r\n                    <select required\r\n                        name=\"emailType\" id=\"emailType\" onChange={e => SelectTypeEmail(e)}>\r\n                        <option defaultValue value=\"\"></option>\r\n                        {RenderEmailType()}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">E-mail</p>\r\n                    </div>\r\n                    <input required type=\"email\" placeholder=\"example@domain.com\"\r\n                        pattern=\"^[\\w._\\-]+@\\w+.com(.br)?\" title={Labels.Email} onChange={e => SetMail(e)} />\r\n                </div>\r\n            {/* </div> */}\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WealthsTypeContext } from '../../contexts/Wealths';\r\n\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nimport './index.css'\r\n\r\nexport default function Wealths(props) {\r\n    const { languagePT, _Json_Wealths } = useContext(FormContext)\r\n\r\n    const { typeWealthId, value, description, settypeWealthId, setvalue, setdescription, typesWealthId } = useContext(WealthsTypeContext)\r\n    const { professionalOccupationId } = useContext(ClientInfoContext)\r\n    const [error, setError] = useState(false)\r\n\r\n    const [clientWealths, setClientWealths] = useState([])\r\n\r\n    const Labels = {\r\n        SelectWealthTypeId: languagePT ? 'Selecione tipo de bens/finanças' : 'Select type of wealth/finances to register',\r\n        inputDescriptionTitle: languagePT ? 'Informações de bens/finanças' : 'Wealths/Finances information for registration',\r\n        description: languagePT ? 'Descrição do bem/finança' : 'Wealths/Finances Description',\r\n        value: languagePT ? 'Valor do bem/finança' : 'Wealths/Finances Value',\r\n        addButtonDescription: languagePT ? 'Adicionar bem ou finança' : 'CLICK TO ADD A WEALTH/FINANCE'\r\n    }\r\n\r\n    let required = professionalOccupationId === \"8\" || professionalOccupationId === \"9\" ||\r\n        professionalOccupationId === \"\" ? false : true\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'wealthTypeId':\r\n                settypeWealthId(value)\r\n                break;\r\n            case 'wealthDescription':\r\n                setdescription(value)\r\n                break;\r\n            case 'wealthValue':\r\n                let valor = value + '';\r\n                valor = parseInt(valor.replace(/[\\D]+/g, ''));\r\n                valor = valor + '';\r\n                valor = valor.replace(/([0-9]{2})$/g, \".$1\");\r\n                setvalue(valor)\r\n                if (valor == 'NaN') setvalue('') \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderWealthTypes() {\r\n        return (\r\n            typesWealthId.map(tw => {\r\n                return (\r\n                    <option key={tw.wealthTypeId} value={tw.wealthTypeId}>{tw.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderClientWealths() {\r\n        return (\r\n            clientWealths.map((cw, index) => {\r\n                return (\r\n                    <div className=\"wealth\" key={`${cw.description}${index}`}>\r\n                        <div className=\"d-flex d-flexdc\">\r\n                            <span className=\"inputDescription\">Descrição: {cw.description}</span>\r\n                            <span className=\"inputDescription\">Valor: {cw.value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\")}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeClientWealth(index)}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addClientWealth() {\r\n        if (!typeWealthId || !description || !value) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            console.log(parseFloat(value))\r\n            console.log(typeof parseFloat(value))\r\n            let wealth = {\r\n                typeWealthId: parseInt(typeWealthId),\r\n                value: parseFloat(value),\r\n                description: description\r\n            }\r\n            setClientWealths([...clientWealths, wealth])\r\n            setdescription('')\r\n            setvalue('')\r\n        }\r\n    }\r\n    function removeClientWealth(i) {\r\n        setClientWealths(clientWealths.filter((c, index) => index !== i))\r\n    }\r\n\r\n    useEffect(() => {\r\n        required = professionalOccupationId === \"8\" || professionalOccupationId === \"9\" ||\r\n        professionalOccupationId === \"\" ? false : true\r\n        if(!required) _Json_Wealths([])\r\n    }, [professionalOccupationId])\r\n    useEffect(() => {\r\n        _Json_Wealths(clientWealths)\r\n    }, [clientWealths])\r\n\r\n    return (\r\n        <div className={required ? \"divWealthTypes\" : \"d-none\"}>\r\n            <div className=\"componentTitle\">\r\n                <span>{Labels.inputDescriptionTitle}</span>\r\n                <hr />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.SelectWealthTypeId}</p>\r\n                </div>\r\n                <select required={required && clientWealths.length === 0} name=\"wealthTypeId\" id=\"wealthTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderWealthTypes()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.description}</p>\r\n                </div>\r\n                <input required={required && clientWealths.length === 0} value={description} type=\"text\" \r\n                name=\"wealthDescription\" id=\"wealthDescription\"\r\n                    onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.value}</p>\r\n                </div>\r\n                <input type=\"text\" value={value} required={required && clientWealths.length === 0} name=\"wealthValue\" id=\"wealthValue\"\r\n                    placeholder=\"$0\" onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n\r\n            <div className=\"wealths\">\r\n                {RenderClientWealths()}\r\n            </div>\r\n\r\n            <div className=\"addButton\">\r\n                <button type=\"button\" onClick={() => addClientWealth()}>\r\n                    {Labels.addButtonDescription}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>Selecione um item da lista e Preencha os campos</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { PhonesContext } from \"../../contexts/PhonesContexts\";\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\n\r\nimport { EmailProvider } from '../../contexts/EmailContexts';\r\nimport EmailType from '../Email'\r\n\r\nimport './index.css'\r\n\r\nexport default function PhoneType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { phoneTypes, setPhoneTypeId, phoneTypeId, setCountryCode, setNumber, setStateCode } = useContext(PhonesContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecione o tipo de telefone' : 'Select Phone Type',\r\n        SelectError: languagePT ? 'Erro ao consultar Tipos de Telefone' : 'Error querying Phone Type',\r\n        Celnumber: languagePT ? 'Formato exigido: +DDI (DDD) 9XXXX-XXXX' : '',\r\n        Resnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : '',\r\n        Comnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : ''\r\n    }\r\n\r\n    function SelectTypePhone(e) {\r\n        const { value } = e.target\r\n        setPhoneTypeId(value)\r\n    }\r\n\r\n    function SetPhoneNumber(e) {\r\n        const { value } = e.target\r\n        if (value.length >= 18) {\r\n            const CountryCode = value.split(\" \")[0].replace(\"+\", \"\")\r\n            const StateCode = value.split(\" \")[1].replace(\"(\", \"\").replace(\")\", \"\")\r\n            const _Number = value.split(\" \")[2].replace(\"-\", \"\")\r\n            setCountryCode(CountryCode)\r\n            setStateCode(StateCode)\r\n            setNumber(_Number)\r\n        }\r\n    }\r\n\r\n    function RenderPhoneType() {\r\n        return (\r\n            phoneTypes.map(ph => {\r\n                return (\r\n                    <option key={ph.phoneTypeId} value={ph.phoneTypeId}>{ph.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divPhoneTypeSelect\">\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.Select}</p>\r\n                </div>\r\n                <select required\r\n                    name=\"phoneType\" id=\"phoneType\" onChange={e => SelectTypePhone(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderPhoneType()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className={phoneTypeId === '1' ? 'd-flex-input d-flexdc' : 'd-none'}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">Telefone</p>\r\n                </div>\r\n                <InputMask name=\"ResidencialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '1'} maskChar=\"\" title={Labels.Resnumber}\r\n                    mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\" />\r\n            </div>\r\n\r\n            <div className={phoneTypeId === '2' ? 'd-flex-input d-flexdc' : 'd-none'}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">Telefone</p>\r\n                </div>\r\n                <InputMask name=\"ComercialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '2'} maskChar=\"\" title={Labels.Comnumber}\r\n                    className={phoneTypeId === '2' ? '' : 'd-none'} mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\" />\r\n            </div>\r\n\r\n            <div className={phoneTypeId === '3' ? 'd-flex-input d-flexdc' : 'd-none'}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">Telefone</p>\r\n                </div>\r\n                <InputMask name=\"CelNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '3'} maskChar=\"\" title={Labels.Celnumber}\r\n                    className={phoneTypeId === '3' ? '' : 'd-none'} mask=\"+99 (99) 99999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{5}[-]\\d{4}\" />\r\n            </div>\r\n\r\n\r\n            <EmailProvider>\r\n                <EmailType />\r\n            </EmailProvider>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/header.6afa50c1.png\";","import React from 'react';\r\nimport imgHeader from '../../assets/header.png'\r\n\r\nimport './index.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <div className=\"header-image\">\r\n                <a href=\"https://flow2pay.com.br/\">\r\n                    <img src={imgHeader} alt=\"FLOW2PAY-Logo-Padrao.png\" loading=\"lazy\" />\r\n                </a>\r\n            </div>\r\n\r\n            <div className=\"div-empty\">\r\n                <ul>\r\n                    <li>\r\n                        <a href=\"https://flow2pay.com.br/#quemsomos\">\r\n                            <span>Quem somos</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"https://flow2pay.com.br/#servico1\">\r\n                            <span>Serviços</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"\">\r\n                            <span>Cadastre-se</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"https://flow2pay.com.br/en\">\r\n                            <span>EN-US</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/footer.4c88b87b.png\";","import React from 'react';\r\nimport imgFooter from '../../assets/footer.png'\r\n\r\nimport './index.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer\">\r\n                <div className=\"footer-img\">\r\n                    <div className=\"div-footer-img\">\r\n                        <img src={imgFooter} alt=\"footer.png\" />\r\n                        <span>contato@flow2pay.com.br</span>\r\n                        <span>Av. Brigadeiro Faria Lima, 1811 – Conj. 918 a 922 – Jardins São Paulo – SP, 01452-001</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"footer-vantagens\">\r\n                    <div className=\"div-vantagens\">\r\n                        <a className=\"footer-title\" href=\"https://flow2pay.com.br/#Vantagens\">Vantagens</a>\r\n                        <span>Atendimento</span>\r\n                        <span>Taxa</span>\r\n                        <span>Liquidações</span>\r\n                        <span>Cadastramento</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"footer-servicos\">\r\n                    <div className=\"div-servicos\">\r\n                        <a className=\"footer-title\" href=\"https://flow2pay.com.br/#servico1\">Serviços</a>\r\n                        <span>Remessas internacionais</span>\r\n                        <span>Pagamentos internacionais (+ de 180 países)</span>\r\n                        <span>Importação e Exportação</span>\r\n                        <span>Investimentos e compra de imóveis no exterior</span>\r\n                        <span>Assessoria para abertura de Empresa e conta corrente nos EUA</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"footer-links\">\r\n                    <div className=\"div-links\">\r\n                        <h3 className=\"footer-title\">Links</h3>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"https://flow2pay.com.br/#quemsomos\">\r\n                                    <span>Quem somos</span>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://flow2pay.com.br/#servico1\">\r\n                                    <span>Serviços</span>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://flow2pay.com.br/en\">\r\n                                    <span>EN-US</span>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://flow2pay.com.br/politica-de-privacidade/\">\r\n                                    <span>Política de privacidade</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer-end\">Flow2pay® 2021 - Todos os direitos reservados</div>\r\n        </footer>\r\n\r\n    );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/cadastro.a995af3c.jpeg\";","import React from 'react';\r\nimport imgCadastro from '../../assets/cadastro.jpeg'\r\n\r\nimport './index.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <>\r\n            <div className=\"div-body\">\r\n\r\n                <div className=\"div-body-txt\">\r\n                    <h1>Cadastro online.</h1>\r\n                    <span>\r\n                        Cadastramento de pessoa física 100% online, com\r\n                        abertura de conta corrente junto a nossos bancos\r\n                        parceiros em até 24h.\r\n                </span>\r\n                </div>\r\n\r\n                <div className=\"div-body-img\">\r\n                    <img src={imgCadastro} alt=\"cadastro.jpeg\" />\r\n                </div>\r\n            </div>\r\n            <span className=\"div-body-info-title\">Precisamos de algumas informações</span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useContext } from 'react';\r\nimport Switch from 'react-switch';\r\n\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\nimport { FormContext } from '../../contexts/FormContexts';\r\n\r\nimport './index.css'\r\n\r\n\r\nfunction AdditionalInformations() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const {\r\n        // States\r\n        residenceInOtherCountryId, otherTaxResidenceCountryId, ppeOccupation,\r\n        usPerson, isAssociatedPerson, isAdministratorInAnotherAccount, residencesInOtherCountryId, otherTaxResidencesCountryId,\r\n        // Sets\r\n        setusPerson, setisAssociatedPerson, setisAdministratorInAnotherAccount, setresidenceInOtherCountryId,\r\n        setotherTaxResidenceCountryId, setppeOccupation\r\n    } = useContext(ClientInfoContext)\r\n\r\n    const Labels = {\r\n        residenceInOtherCountryId: languagePT ? 'Possui residência em outro país?' : 'Residence in Other Country',\r\n        otherTaxResidenceCountryId: languagePT ? 'País se possui domicílio fiscal além do declarado' : 'Other Tax Residence Country',\r\n        residenceInOtherCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        otherTaxResidenceCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        educationLevelId: languagePT ? 'Escolaridade' : 'Education Level',\r\n        ppeOccupation: languagePT ? 'Cargo PPE do cliente, se o mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n        usPerson: languagePT ? 'Cliente considerado como USPerson ?' : 'Considered as USPerson',\r\n        isAssociatedPerson: languagePT ? 'Pessoa Vinculada' : 'Associated Person',\r\n        isAdministratorInAnotherAccount: languagePT ? 'Cliente realiza operações por conta de terceiros' : 'Customer performs operations on behalf of third parties',\r\n        urlCallback: languagePT ? '' : '',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador' : 'Authorizes the transmission of orders by proxy',\r\n    }\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'residenceInOtherCountryId':\r\n                setresidenceInOtherCountryId(value)\r\n                break;\r\n            case 'otherTaxResidenceCountryId':\r\n                setotherTaxResidenceCountryId(value)\r\n                break;\r\n            case 'ppeOccupation':\r\n                setppeOccupation(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    function RenderResidencesInOtherCountry() {\r\n        return (\r\n            residencesInOtherCountryId.map(roc => {\r\n                return (\r\n                    <option key={roc.countryId} value={roc.countryId}>{roc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderOtherTaxResidencesCountry() {\r\n        return (\r\n            otherTaxResidencesCountryId.map(otrc => {\r\n                return (\r\n                    <option key={otrc.countryId} value={otrc.countryId}>{otrc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"componentTitle\">\r\n                <span>Informações adicionais</span>\r\n                <hr />\r\n            </div>\r\n\r\n            <div className=\"AdditionalInformations-info\">\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"inputDescription\">{Labels.residenceInOtherCountryId}</p>\r\n                    </div>\r\n                    <select value={residenceInOtherCountryId} className=\"clSelect\" name=\"residenceInOtherCountryId\" id=\"residenceInOtherCountryId\" onChange={e => OnChangeFields(e)}>\r\n                        <option defaultValue value=\"\">{Labels.residenceInOtherCountryIdSelect}</option>\r\n                        {RenderResidencesInOtherCountry()}\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"inputDescription\">{Labels.otherTaxResidenceCountryId}</p>\r\n                    </div>\r\n                    <select value={otherTaxResidenceCountryId} className=\"clSelect\" name=\"otherTaxResidenceCountryId\" id=\"otherTaxResidenceCountryId\" onChange={e => OnChangeFields(e)}>\r\n                        <option defaultValue value=\"\">{Labels.otherTaxResidenceCountryIdSelect}</option>\r\n                        {RenderOtherTaxResidencesCountry()}\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"inputDescription\">{Labels.ppeOccupation}</p>\r\n                    </div>\r\n                    <input value={ppeOccupation} type=\"text\" name=\"ppeOccupation\" id=\"ppeOccupation\"\r\n                        pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"AdditionalInformations\">\r\n                <Switch\r\n                    onColor=\"#071223\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#071223\"\r\n                    offHandleColor=\"#F49925\"\r\n                    checked={usPerson}\r\n                    onChange={cheked => setusPerson(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={35}\r\n                    width={70}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n                <p className=\"inputDescription\">{Labels.usPerson}</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"AdditionalInformations\">\r\n                <Switch\r\n                    onColor=\"#071223\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#071223\"\r\n                    offHandleColor=\"#F49925\"\r\n                    checked={isAssociatedPerson}\r\n                    onChange={cheked => setisAssociatedPerson(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={35}\r\n                    width={70}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n                <p className=\"inputDescription\">{Labels.isAssociatedPerson} ?</p>\r\n            </div>\r\n\r\n            <div className=\"AdditionalInformations\">\r\n                <Switch\r\n                    onColor=\"#071223\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#071223\"\r\n                    offHandleColor=\"#F49925\"\r\n                    checked={isAdministratorInAnotherAccount}\r\n                    onChange={cheked => setisAdministratorInAnotherAccount(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={35}\r\n                    width={70}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n                <p className=\"inputDescription\">{Labels.isAdministratorInAnotherAccount} ?</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AdditionalInformations","import { useContext, useEffect } from 'react';\r\n\r\nimport { IdentificationTypeProvider } from './contexts/IdentificationTypeContexts';\r\nimport { FormContext } from './contexts/FormContexts';\r\nimport { AttorneyProvider } from './contexts/AttorneyContexts';\r\nimport { AdressesProvider } from './contexts/AdressesContexts'\r\nimport { BankAccountsProvider } from './contexts/BankContexts'\r\nimport { PhonesProvider } from './contexts/PhonesContexts';\r\nimport { EmailProvider } from './contexts/EmailContexts';\r\nimport { WealthsTypeProvider } from './contexts/Wealths';\r\nimport { WorkProvider } from './contexts/Work';\r\n\r\n\r\n\r\nimport IdentificationType from './components/IdentificationType';\r\nimport ClientAdress from './components/ClientAdress'\r\nimport BankAccounts from './components/BankAccounts';\r\nimport PPERelateds from './components/PPE Related';\r\nimport ClientInfo from './components/ClientInfo';\r\nimport FormSuity from './components/FormSuity';\r\nimport Attorney from './components/Attorney';\r\nimport EmailType from './components/Email';\r\nimport Wealths from './components/Wealths';\r\nimport Phones from './components/Phones';\r\nimport Work from './components/Work';\r\n\r\nimport './Global.css';\r\nimport { FormSuityProvider } from './contexts/FormSuity';\r\nimport { PPERelatedsProvider } from './contexts/PPERelatedsContext';\r\n\r\n\r\nimport Header from './template/header'\r\nimport Footer from './template/footer'\r\nimport Body from './template/body'\r\nimport AdditionalInformations from './components/AdditionalInformations';\r\n\r\nfunction App() {\r\n    const { saveClient, languagePT, Clicked } = useContext(FormContext)\r\n    const Labels = {\r\n        HeaderTitle: languagePT ? \"Cadastro de Cliente\" : \"Customer registration\",\r\n        BackToSite: languagePT ? \"Voltar ao Site\" : \"Back to site\",\r\n        ButtonSave: languagePT ? \"Solicitar Cadastro\" : \"Save\"\r\n    }\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault()\r\n        saveClient()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Body />\r\n\r\n            <form onSubmit={e => onSubmit(e)} action=\"\" method=\"\" autoComplete=\"off\" id=\"form\">\r\n                <div className=\"div-infos\">\r\n\r\n                    <div className=\"div-client-info\">\r\n                        <ClientInfo />\r\n                    </div>\r\n\r\n                    <div className=\"div-identification-type\">\r\n                        <IdentificationTypeProvider>\r\n                            <IdentificationType />\r\n                        </IdentificationTypeProvider>\r\n                    </div>\r\n\r\n                    <div className=\"div-contact-adress\">\r\n                        <AdressesProvider>\r\n                            <ClientAdress />\r\n                        </AdressesProvider>\r\n\r\n                        <PhonesProvider>\r\n                            <Phones />\r\n                        </PhonesProvider>\r\n                    </div>\r\n\r\n                    <div className=\"div-bank-accounts\">\r\n                        <BankAccountsProvider>\r\n                            <BankAccounts />\r\n                        </BankAccountsProvider>\r\n                    </div>\r\n\r\n                    <div className=\"div-wealths-types\">\r\n                        <WealthsTypeProvider>\r\n                            <Wealths />\r\n                        </WealthsTypeProvider>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"div-formsuity\">\r\n                        <FormSuityProvider>\r\n                            <FormSuity />\r\n                        </FormSuityProvider>\r\n                    </div>\r\n\r\n                    <div className=\"div-additional-information\">\r\n                        <AdditionalInformations/>\r\n\r\n                        <PPERelatedsProvider>\r\n                            <PPERelateds />\r\n                        </PPERelatedsProvider>\r\n\r\n                        <AttorneyProvider>\r\n                            <Attorney />\r\n                        </AttorneyProvider>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"div-footer\">\r\n                    <button type=\"submit\" disabled={Clicked}>\r\n                        <i className={Clicked ? \"fa fa-spinner fa-spin\" : \"d-none\"} /> {Clicked ? \"Aguarde\" : Labels.ButtonSave}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { FormProvider } from './contexts/FormContexts';\nimport { ClientInfoProvider } from './contexts/ClientInfoContexts';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Form from './form'\n\nimport './Global.css';\n\nfunction App() {\n  return (\n    <FormProvider>\n      <ClientInfoProvider>\n        <ToastContainer\n          position=\"top-right\" autoClose={2500}\n          hideProgressBar={false} newestOnTop={false}\n          closeOnClick rtl={false} pauseOnHover={false}\n          pauseOnVisibilityChange draggable\n          pauseOnFocusLoss={false}\n        />\n        <Form />\n      </ClientInfoProvider>\n    </FormProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}