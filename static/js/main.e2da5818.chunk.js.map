{"version":3,"sources":["config.js","components/Toastify/index.jsx","components/Toastify/Toastify.js","components/Modal/index.jsx","contexts/FormContexts.jsx","contexts/ClientInfoContexts.jsx","contexts/IdentificationTypeContexts.jsx","contexts/AttorneyContexts.jsx","contexts/AdressesContexts.jsx","contexts/BankContexts.jsx","contexts/PhonesContexts.jsx","contexts/EmailContexts.jsx","contexts/Wealths.jsx","contexts/Work.jsx","components/IdentificationType/index.jsx","components/Countries/index.jsx","components/State/index.jsx","components/City/index.jsx","components/AdressType/index.jsx","components/Cep/index.jsx","components/AdressUtils/index.jsx","components/ClientAdress/index.jsx","components/BankAccounts/index.jsx","contexts/PPERelatedsContext.jsx","utils.js","components/PPE Related/index.jsx","contexts/Spouse.jsx","components/Spouse/index.jsx","components/Work/index.jsx","contexts/LegalRepresentativeContexts.jsx","components/LegalRepresentative/index.jsx","components/ClientInfo/index.jsx","contexts/FormSuity.jsx","components/FormSuity/index.jsx","components/Attorney/index.jsx","components/Email/index.jsx","components/Wealths/index.jsx","components/Phones/index.jsx","assets/header.png","template/header/index.jsx","assets/footer.png","template/footer/index.jsx","assets/cadastro.jpeg","template/body/index.jsx","components/AdditionalInformations/index.jsx","form.js","App.js","index.js"],"names":["proxy","config","_urlCountries","_urlStates","_urlCities","_urlAdressType","_urlPhoneType","_urlGenders","_urlMaritalStatus","_urlMaritalAgreement","_urlProfessionalOccupation","_urlEducation","_urlEmailType","_urlIdentificationType","_urlWealthType","_urlRelationshipType","_urlBankAccountType","_urlBankGetByCode","_urlBankGetById","_urlBank","_urlQuestions","_urlAnswers","_urlSaveClient","_urlGetPluralAccount","Toastify","className","this","props","description","Component","Warn","id","text","autoClose","draggable","icon","toast","isActive","warn","toastId","Modal","useContext","FormContext","Redirect","agency","account","digit","type","onClick","InitialState","languagePT","Clicked","SaveClientWarn","_Json_ClientAddresses","obj","_Json_ClientInfo","_Json_AttorneyInfo","_Json_PhoneInfo","_Json_EmailInfo","_Json_ClientIdentification","_Json_Spouse","_Json_Work","_Json_Wealths","_Json_FormSuity","_Json_BankAccounts","_Json_LegalRepresentative","_Json_PPERelateds","saveClient","reqJSON","clientId","name","shortName","taxPayerRegistry","birthDate","fatherName","genderId","maritalStatusId","maritalAgreementId","motherName","nationality","countryBirthId","stateBirthId","stateBirthName","professionalOccupationId","residenceInOtherCountryId","otherTaxResidenceCountryId","educationLevelId","ppeOccupation","usPerson","isAssociatedPerson","urlCallback","isAcceptedOrderAttorney","isAdministratorInAnotherAccount","attorneys","spouse","document","work","phones","emails","bankAccounts","wealths","addresses","ppeRelateds","formSuity","legalRepresentatives","authentication","login","password","createContext","FormProvider","useState","setClicked","isModalOpen","setIsModalOpen","setSaveClientWarn","setagency","setaccount","setdigit","useEffect","Provider","value","required","length","console","log","JSON","stringify","axios","post","then","res","data","clientCode","interval","setInterval","get","bankAccount","clearInterval","catch","err","response","innerMessage","request","message","CheckClient","code","err_message","includes","children","String","setname","setshortName","settaxPayerRegistry","setbirthDate","age","Number","setAge","setfatherName","setgenderId","gendersIds","setmaritalStatusId","maritalStatus","maritalAgreements","setmotherName","getCountriesBirthId","setppeOccupation","setusPerson","setisAssociatedPerson","setisAdministratorInAnotherAccount","ClientInfoContext","ClientInfoProvider","setnationality","setgendersIds","setMaritalStatus","setmaritalAgreementId","setmaritalAgreements","setcountryBirthId","countriesBirthId","setcountriesBirthId","setstateBirthId","setstateBirthName","statesBirth","setstatesBirth","setprofessionalOccupationId","professionalOccupationsId","setprofessionalOccupationsId","setresidenceInOtherCountryId","residencesInOtherCountryId","setresidencesInOtherCountryId","setotherTaxResidenceCountryId","otherTaxResidencesCountryId","setotherTaxResidencesCountryId","seteducationLevelId","educationsLevelId","seteducationsLevelId","replace","parseInt","identificationTypeId","number","emissionInssuer","emission","stateId","identificationTypes","setidentificationTypeId","setnumber","setemissionInssuer","setemission","setstateId","IdentificationTypeContext","IdentificationTypeProvider","setIdentificationTypes","states","setStates","cpf","taxpayerRegistry","settaxpayerRegistry","isPEP","setisPEP","actionDescription","setactionDescription","countryId","setCountryId","setStateId","stateName","setStateName","cityId","setCityId","cityName","setCityName","neighborhood","setneighborhood","setdescription","zipCode","setZipCode","complement","setcomplement","typeAddressId","setTypeAddressId","AttorneyContext","AttorneyProvider","setisAcceptedOrderAttorney","address","setNeighborhood","setDescription","zipcode","setNumber","setComplement","AdressesContext","AdressesProvider","AdressJson","bankId","typeAccountId","bankAccountTypes","banks","setbankId","settypeAccountId","BankAccountsContext","BankAccountsProvider","setBankAccountTypes","setBanks","newBanks","map","i","bank","push","GetBanks","phoneTypes","phoneTypeId","countryCode","stateCode","setPhoneTypeId","setCountryCode","setStateCode","PhonesContext","PhonesProvider","setPhoneTypes","mail","isCorrespondency","emailTypes","setMail","setType","setIsCorrespondency","EmailContext","EmailProvider","setEmailTypes","typeWealthId","typesWealthId","settypeWealthId","setvalue","WealthsTypeContext","WealthsTypeProvider","settypesWealthId","institutionName","occupation","profession","corporateTaxpayerRegistry","setinstitutionName","setoccupation","setprofession","setcorporateTaxpayerRegistry","setIsRequired","WorkContext","WorkProvider","isRequired","IdentificationType","Labels","componentTitle","Select","States","documentNumber","Max","Date","toISOString","split","Min","OnChangeField","e","target","onChange","defaultValue","idt","identifycationTypeId","s","statename","min","max","Countries","countries","setCountries","Atctx","Attorney","ClientAdress","onSelectCountry","c","Adctx","SelectError","getStates","_countryId","onSelectState","Cities","cities","setCities","getCities","_stateId","onSelectCity","cityname","AdressType","adressType","setAdressType","onSelectTypeAddress","adt","addressTypeId","CEP","error","setError","CollectCep","Error","maxLength","Cep","onCollectCep","test","ValidateCEP","AdressUtils","setInput","Adresses","selectedIndex","options","getAttribute","cep","BankAccounts","clientBankAccounts","setclientBankAccounts","selectItems","SelecttypeAccountId","SelectbankId","addAccount","bat","bankAccountTypeId","SelectSearch","search","filterOptions","fuse","Fuse","keys","threshold","array","item","emptyMessage","printOptions","closeOnSelect","index","find","b","toString","filter","addBankAccount","PPERelatedsContext","PPERelatedsProvider","reqJson","ValidCPF","Soma","Resto","substring","PPERelateds","errorCpf","setErrorCpf","PPERelated","setPPERelated","cpfTitle","onlyLettersTitle","onColor","onHandleColor","offColor","offHandleColor","checked","cheked","handleDiameter","boxShadow","activeBoxShadow","height","width","pattern","title","mask","onlyLettersAndNumbersTitle","setHide","SpouseContext","SpouseProvider","spouseId","hide","Spouse","emissionDoc","Work","errorCNPJ","setErrorCNPJ","cnpjTitle","cnpj","tamanho","numeros","digitos","soma","pos","charAt","resultado","validarCNPJ","relationshipTypeId","relationshipTypesId","setRelationshipTypeId","LegalRepresentativeContext","LegalRepresentativeProvider","setRelationshipTypesId","errorOnApi","legalRepresentativeName","legalRepresentativeTaxpayerRegistry","reltid","ClientInfo","dateInvalid","residenceInOtherCountryIdSelect","otherTaxResidenceCountryIdSelect","OnChangeFields","d","ano_atual","getFullYear","mes_atual","getMonth","dia_atual","getDate","ano_aniversario","mes_aniversario","dia_aniversario","Qtd_Anos","stateNameBirth","g","m","pot","ed","questions","answers","FormSuityContext","FormSuityProvider","setQuestions","setAnswers","questionsAnswers","q","suityQuestionId","question","req","questionId","answerId","OnChange","QuestionId","a","suityAnswerId","answer","Adress","EmailType","Email","SelectTypeEmail","em","emailTypeId","placeholder","SetMail","Wealths","clientWealths","setClientWealths","SelectWealthTypeId","inputDescriptionTitle","addButtonDescription","valor","tw","wealthTypeId","cw","parseFloat","wealth","addClientWealth","PhoneType","Celnumber","Resnumber","Comnumber","SetPhoneNumber","CountryCode","StateCode","_Number","SelectTypePhone","ph","maskChar","Header","href","src","imgHeader","alt","loading","Footer","imgFooter","imgCadastro","AdditionalInformations","roc","otrc","App","HeaderTitle","BackToSite","ButtonSave","onSubmit","preventDefault","action","method","autoComplete","disabled","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnHover","pauseOnVisibilityChange","pauseOnFocusLoss","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e2da5818.chunk.js","sourcesContent":["// const proxy = \"http://localhost:2525/\"\r\nconst proxy = \"https://proxy-cors.vercel.app/\"\r\n\r\nconst config = {\r\n    _urlCountries: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Country`,\r\n    _urlStates: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/State/GetByCountryId/`,\r\n    _urlCities: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/City/GetByStateId/`,\r\n    _urlAdressType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/AddressType`,\r\n    _urlPhoneType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/PhoneType`,\r\n    _urlGenders: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Gender`,\r\n    _urlMaritalStatus: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/MaritalStatus`,\r\n    _urlMaritalAgreement: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/MaritalAgreement`,\r\n    _urlProfessionalOccupation: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/ProfessionalOccupation`,\r\n    _urlEducation: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Education`,\r\n    _urlEmailType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/EmailType`,\r\n    _urlIdentificationType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/IdentificationType`,\r\n    _urlWealthType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/WealthType`,\r\n    _urlRelationshipType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/RelationshipType`,\r\n    _urlBankAccountType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/BankAccountType`,\r\n    _urlBankGetByCode: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Bank/GetByCode/`,\r\n    _urlBankGetById: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Bank/GetById/`,\r\n    _urlBank: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Bank`,\r\n    _urlQuestions: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Suity/Questions`,\r\n    _urlAnswers: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Suity/Answers`,\r\n    _urlSaveClient: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/Save`,\r\n    _urlGetPluralAccount: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/GetPluralAccount/`\r\n}\r\n\r\n// const config = {\r\n//     _urlCountries: `http://bp-api-hml.brasilplural.com/onboarding/api/Country`,\r\n//     _urlStates: `http://bp-api-hml.brasilplural.com/onboarding/api/State/GetByCountryId/`,\r\n//     _urlCities: `http://bp-api-hml.brasilplural.com/onboarding/api/City/GetByStateId/`,\r\n//     _urlAdressType: `http://bp-api-hml.brasilplural.com/onboarding/api/AddressType`,\r\n//     _urlPhoneType: `http://bp-api-hml.brasilplural.com/onboarding/api/PhoneType`,\r\n//     _urlGenders: `http://bp-api-hml.brasilplural.com/onboarding/api/Gender`,\r\n//     _urlMaritalStatus: `http://bp-api-hml.brasilplural.com/onboarding/api/MaritalStatus`,\r\n//     _urlMaritalAgreement: `http://bp-api-hml.brasilplural.com/onboarding/api/MaritalAgreement`,\r\n//     _urlProfessionalOccupation: `http://bp-api-hml.brasilplural.com/onboarding/api/ProfessionalOccupation`,\r\n//     _urlEducation: `http://bp-api-hml.brasilplural.com/onboarding/api/Education`,\r\n//     _urlEmailType: `http://bp-api-hml.brasilplural.com/onboarding/api/EmailType`,\r\n//     _urlIdentificationType: `http://bp-api-hml.brasilplural.com/onboarding/api/IdentificationType`,\r\n//     _urlWealthType: `http://bp-api-hml.brasilplural.com/onboarding/api/WealthType`,\r\n//     _urlRelationshipType: `http://bp-api-hml.brasilplural.com/onboarding/api/RelationshipType`,\r\n//     _urlBankAccountType: `http://bp-api-hml.brasilplural.com/onboarding/api/BankAccountType`,\r\n//     _urlBankGetByCode: `http://bp-api-hml.brasilplural.com/onboarding/api/Bank/GetByCode/`,\r\n//     _urlBankGetById: `http://bp-api-hml.brasilplural.com/onboarding/api/Bank/GetById/`,\r\n//     _urlBank: `http://bp-api-hml.brasilplural.com/onboarding/api/Bank`,\r\n//     _urlQuestions: `http://bp-api-hml.brasilplural.com/onboarding/api/Suity/Questions`,\r\n//     _urlAnswers: `http://bp-api-hml.brasilplural.com/onboarding/api/Suity/Answers`,\r\n//     _urlSaveClient: `http://bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/Save`,\r\n//     _urlGetPluralAccount: `http://bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/GetPluralAccount/`\r\n// }\r\n\r\nexport default config","/* eslint-disable no-empty */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Toastify extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex df-jcspb\">\r\n                <div className=\"toastify-icon\">\r\n                    <i className={this.props.className} />\r\n                </div>\r\n                <span> {this.props.description}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport Toastify from \"./index\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction Success(id,text,autoClose=2500,draggable = true,icon = 'fas fa-check'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.success(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable  }\r\n          );\r\n    }\r\n}\r\nfunction Error(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-triangle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.error(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\nfunction Warn(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-circle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.warn(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\n\r\nexport { Success, Error, Warn }","import { useContext } from \"react\";\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport \"./index.css\";\r\n\r\nexport default function Modal() {\r\n  const { Redirect, agency, account, digit } = useContext(FormContext)\r\n\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className=\"modal\">\r\n\r\n        <div className=\"modal-header\">\r\n          <p>Conta cadastrada com sucesso!</p>\r\n        </div>\r\n\r\n        <div className=\"modal-body\">\r\n          <p><strong>Agência:</strong> {agency}</p>\r\n          <p><strong>Número da conta:</strong> {account}</p>\r\n          <p><strong>Digito:</strong> {digit}</p>\r\n        </div>\r\n\r\n        <div className=\"modal-footer\">\r\n          <button type=\"button\" onClick={Redirect}>\r\n            Voltar a página inicial\r\n        </button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { createContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\n\r\nimport { Error, Success, Warn } from '../components/Toastify/Toastify'\r\nimport Modal from \"../components/Modal\";\r\n\r\nconst InitialState = {\r\n  languagePT: true,\r\n  Clicked: false,\r\n  agency: '',\r\n  account: '',\r\n  digit: '',\r\n  SaveClientWarn: '',\r\n  _Json_ClientAddresses: (obj) => { },\r\n  _Json_ClientInfo: (obj) => { },\r\n  _Json_AttorneyInfo: (obj) => { },\r\n  _Json_PhoneInfo: (obj) => { },\r\n  _Json_EmailInfo: (obj) => { },\r\n  _Json_ClientIdentification: (obj) => { },\r\n  _Json_Spouse: (obj) => { },\r\n  _Json_Work: (obj) => { },\r\n  _Json_Wealths: (obj) => { },\r\n  _Json_FormSuity: (obj) => { },\r\n  _Json_BankAccounts: (obj) => { },\r\n  _Json_LegalRepresentative: (obj) => { },\r\n  _Json_PPERelateds: (obj) => { },\r\n  saveClient: () => { },\r\n  Redirect: () => { }\r\n}\r\n\r\nlet reqJSON = {\r\n  clientId: 0,\r\n  name: '',\r\n  shortName: '',\r\n  taxPayerRegistry: '',\r\n  birthDate: '',\r\n  fatherName: '',\r\n  genderId: 0,\r\n  maritalStatusId: 0,\r\n  maritalAgreementId: 0,\r\n  motherName: '',\r\n  nationality: '',\r\n  countryBirthId: 0,\r\n  stateBirthId: 0,\r\n  stateBirthName: '',\r\n  professionalOccupationId: 0,\r\n  residenceInOtherCountryId: 0,\r\n  otherTaxResidenceCountryId: 0,\r\n  educationLevelId: 0,\r\n  ppeOccupation: '',\r\n  usPerson: false,\r\n  isAssociatedPerson: false,\r\n  urlCallback: '',\r\n  isAcceptedOrderAttorney: false,\r\n  isAdministratorInAnotherAccount: false,\r\n  attorneys: [],\r\n  spouse: {},\r\n  document: {},\r\n  work: {},\r\n  phones: [],\r\n  emails: [],\r\n  bankAccounts: [],\r\n  wealths: [],\r\n  addresses: [],\r\n  ppeRelateds: [],\r\n  formSuity: [],\r\n  legalRepresentatives: [],\r\n  authentication: {\r\n    login: 'APITEST',\r\n    password: 'APITEST'\r\n  }\r\n}\r\n\r\nexport const FormContext = createContext(InitialState);\r\n\r\nexport const FormProvider = (props) => {\r\n  const [languagePT, setLanguagePT] = useState(true)\r\n  const [Clicked, setClicked] = useState(false)\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [SaveClientWarn, setSaveClientWarn] = useState(false);\r\n\r\n  const [agency, setagency] = useState('')\r\n  const [account, setaccount] = useState('')\r\n  const [digit, setdigit] = useState('')\r\n\r\n  useEffect(() => {\r\n    // const url = window.location.pathname.split(\"/\")\r\n    // const enUS = url.filter(i => i === 'en')\r\n    // if (enUS.length > 0) setLanguagePT(false)\r\n    // else setLanguagePT(true)\r\n    // setIsModalOpen(true)\r\n  }, [])\r\n\r\n  function closeLevelUpModal() {\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n  function _Json_ClientAddresses(obj) {\r\n    reqJSON.addresses = [obj]\r\n  }\r\n  function _Json_ClientInfo(obj) {\r\n    reqJSON = { ...reqJSON, ...obj }\r\n  }\r\n  function _Json_AttorneyInfo(obj) {\r\n    reqJSON.attorneys = obj\r\n  }\r\n  function _Json_PhoneInfo(obj) {\r\n    reqJSON.phones = [obj]\r\n  }\r\n  function _Json_EmailInfo(obj) {\r\n    reqJSON.emails = [obj]\r\n  }\r\n  function _Json_ClientIdentification(obj) {\r\n    reqJSON.document = obj\r\n  }\r\n  function _Json_Spouse(obj) {\r\n    reqJSON.spouse = obj\r\n  }\r\n  function _Json_Work(obj) {\r\n    reqJSON.work = obj\r\n  }\r\n  function _Json_Wealths(obj) {\r\n    reqJSON.wealths = obj\r\n  }\r\n  function _Json_FormSuity(obj) {\r\n    reqJSON.formSuity = obj\r\n  }\r\n  function _Json_PPERelateds(obj) {\r\n    reqJSON.ppeRelateds = obj\r\n  }\r\n  function _Json_BankAccounts(obj) {\r\n    reqJSON.bankAccounts = obj\r\n  }\r\n  function _Json_LegalRepresentative(obj) {\r\n    reqJSON.legalRepresentatives = obj\r\n  }\r\n  function saveClient() {\r\n    const required = reqJSON.professionalOccupationId === 8 || reqJSON.professionalOccupationId === 9 ? false : true\r\n    if (reqJSON.bankAccounts.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione uma conta bancaria' : 'Add a bank account'\r\n      Warn(\r\n        \"Addbankaccount\",\r\n        ErrorMessage,\r\n        10000,\r\n        false\r\n      );\r\n    }\r\n    else if (required && reqJSON.wealths.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione um bem/finança' : 'Add a wealth / finance'\r\n      Warn(\r\n        \"Addwealth/finance\",\r\n        ErrorMessage,\r\n        10000,\r\n        false\r\n      );\r\n    }\r\n    else {\r\n      setClicked(true)\r\n      setSaveClientWarn('')\r\n      console.log(JSON.stringify(reqJSON))\r\n      axios.post(config._urlSaveClient, reqJSON)\r\n        .then(res => {\r\n          if (res.data) {\r\n            CheckClient(res.data.code)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          setClicked(false)\r\n          if (err.response) {\r\n            let err_message\r\n            const { innerMessage, message } = err.response.data\r\n            if (innerMessage) {\r\n              if (innerMessage.includes(\"spouse has a same Taxpayer as client\")) err_message = \"Cônjuge tem o mesmo cpf que o cliente\"\r\n              else err_message = innerMessage\r\n              setSaveClientWarn(err_message)\r\n              // Error(\r\n              //   \"SaveClient\",\r\n              //   err_message,\r\n              //   20000,\r\n              //   false\r\n              // );\r\n            }\r\n            else {\r\n              console.log('Error', err.message);\r\n              const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n              setSaveClientWarn(ErrorMessage)\r\n              // Error(\r\n              //   \"ErrorOnCreateClient\",\r\n              //   ErrorMessage,\r\n              //   20000,\r\n              //   false\r\n              // );\r\n            }\r\n          }\r\n          else if (err.request || err.response) {\r\n            // The request was made but no response was received\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            // Error(\r\n            //   \"ErrorOnCreateClient\",\r\n            //   ErrorMessage,\r\n            //   20000,\r\n            //   false\r\n            // );\r\n            setSaveClientWarn(ErrorMessage)\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            // Error(\r\n            //   \"ErrorOnCreateClient\",\r\n            //   ErrorMessage,\r\n            //   10000,\r\n            //   false\r\n            // );\r\n            setSaveClientWarn(ErrorMessage)\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  function CheckClient(clientCode) {\r\n    setSaveClientWarn('')\r\n    const interval = setInterval(() => {\r\n      axios.get(`${config._urlGetPluralAccount}${clientCode}`)\r\n        .then(res => {\r\n          if (res.data.clientCode) {\r\n            const bankAccount = res.data.bankAccount\r\n            setagency(bankAccount.agency)\r\n            setaccount(bankAccount.account)\r\n            setdigit(bankAccount.digit)\r\n\r\n            console.log(bankAccount)\r\n\r\n            clearInterval(interval)\r\n            setIsModalOpen(true)\r\n\r\n\r\n            // const SuccessMessage = languagePT ? 'Cadastro Concluido com Sucesso' : 'Registration Completed Successfully'\r\n            setClicked(false)\r\n            // Success('ClientCreated', SuccessMessage, 5000, false)\r\n\r\n\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (err.response) {\r\n            // Request made and server responded\r\n            if (err.response.data.innerMessage) {\r\n              setClicked(true)\r\n              const WarnMessage = languagePT ? 'O cadastro está na fila de análise/aprovação interna' : 'The registration is in the internal review / approval queue'\r\n              setSaveClientWarn(WarnMessage)\r\n              // Warn(\r\n              //   \"RegistryInQueue\",\r\n              //   WarnMessage,\r\n              //   10000,\r\n              //   false\r\n              // );\r\n            }\r\n          }\r\n          else if (err.request) {\r\n            setClicked(false)\r\n            // The request was made but no response was received\r\n            console.log(err.request);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            setSaveClientWarn(ErrorMessage)\r\n            // Error(\r\n            //   \"ErrorOnCreateClient\",\r\n            //   ErrorMessage,\r\n            //   10000,\r\n            //   false\r\n            // );\r\n          } else {\r\n            setClicked(false)\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            setSaveClientWarn(ErrorMessage)\r\n            // Error(\r\n            //   \"ErrorOnCreateClient\",\r\n            //   ErrorMessage,\r\n            //   10000,\r\n            //   false\r\n            // );\r\n          }\r\n        })\r\n    }, 10000);\r\n\r\n  }\r\n\r\n  function Redirect() {\r\n    closeLevelUpModal()\r\n    // setTimeout(() => {\r\n    //   window.location.replace(\"https://flow2pay.com.br/\");\r\n    // }, 5000);\r\n  }\r\n\r\n  return (\r\n    <FormContext.Provider\r\n      value={{\r\n        agency,\r\n        account,\r\n        digit,\r\n        languagePT,\r\n        SaveClientWarn,\r\n        _Json_ClientAddresses,\r\n        _Json_ClientInfo,\r\n        _Json_AttorneyInfo,\r\n        _Json_PhoneInfo,\r\n        _Json_EmailInfo,\r\n        _Json_ClientIdentification,\r\n        _Json_Spouse,\r\n        _Json_Work,\r\n        _Json_Wealths,\r\n        _Json_LegalRepresentative,\r\n        _Json_BankAccounts,\r\n        _Json_FormSuity,\r\n        _Json_PPERelateds,\r\n        Clicked,\r\n        Redirect,\r\n        saveClient\r\n      }}\r\n    >\r\n      {props.children}\r\n      {isModalOpen && <Modal />}\r\n    </FormContext.Provider>\r\n  );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    name: String,\r\n    setname: () => { },\r\n    shortName: String,\r\n    setshortName: () => { },\r\n    taxPayerRegistry: String,\r\n    settaxPayerRegistry: () => { },\r\n    birthDate: String,\r\n    setbirthDate: () => { },\r\n    age: Number,\r\n    setAge: () => { },\r\n    fatherName: String,\r\n    setfatherName: () => { },\r\n    genderId: String,\r\n    setgenderId: () => { },\r\n    gendersIds: [],\r\n    maritalStatusId: String,\r\n    setmaritalStatusId: () => { },\r\n    maritalStatus: [],\r\n    maritalAgreementId: String,\r\n    maritalAgreements: [],\r\n    motherName: String,\r\n    setmotherName: () => { },\r\n    nationality: String,\r\n    countryBirthId: String,\r\n    getCountriesBirthId: () => { },\r\n    stateBirthId: String,\r\n    stateBirthName: String,\r\n    professionalOccupationId: String,\r\n    residenceInOtherCountryId: String,\r\n    otherTaxResidenceCountryId: String,\r\n    educationLevelId: String,\r\n    ppeOccupation: String,\r\n    setppeOccupation: () => { },\r\n    usPerson: String,\r\n    setusPerson: () => { },\r\n    isAssociatedPerson: String,\r\n    setisAssociatedPerson: () => { },\r\n    urlCallback: String,\r\n    isAcceptedOrderAttorney: String,\r\n    isAdministratorInAnotherAccount: String,\r\n    setisAdministratorInAnotherAccount: () => { }\r\n}\r\nexport const ClientInfoContext = createContext(InitialState);\r\n\r\nexport const ClientInfoProvider = (props) => {\r\n    const {_Json_ClientInfo, _Json_Spouse} = useContext(FormContext)\r\n\r\n    //#region States\r\n\r\n    const [clientId, setclientId] = useState(0)\r\n    const [name, setname] = useState('')\r\n    const [shortName, setshortName] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [age, setAge] = useState(-1)\r\n    const [fatherName, setfatherName] = useState('')\r\n    const [motherName, setmotherName] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    //! Gender variables\r\n    const [genderId, setgenderId] = useState('')\r\n    const [gendersIds, setgendersIds] = useState([])\r\n    //! Marital variables\r\n    const [maritalStatusId, setmaritalStatusId] = useState('')\r\n    const [maritalStatus, setMaritalStatus] = useState([])\r\n    const [maritalAgreementId, setmaritalAgreementId] = useState('')\r\n    const [maritalAgreements, setmaritalAgreements] = useState([])\r\n    //! Country and state birth variables\r\n    const [countryBirthId, setcountryBirthId] = useState('')\r\n    const [countriesBirthId, setcountriesBirthId] = useState([])\r\n    const [stateBirthId, setstateBirthId] = useState('')\r\n    const [stateBirthName, setstateBirthName] = useState('')\r\n    const [statesBirth, setstatesBirth] = useState([])\r\n    //! Professional ocupation variables\r\n    const [professionalOccupationId, setprofessionalOccupationId] = useState('')\r\n    const [professionalOccupationsId, setprofessionalOccupationsId] = useState([])\r\n    //! Residence in other country variables\r\n    const [residenceInOtherCountryId, setresidenceInOtherCountryId] = useState('')\r\n    const [residencesInOtherCountryId, setresidencesInOtherCountryId] = useState([])\r\n    //! Other tax residence in other country variables\r\n    const [otherTaxResidenceCountryId, setotherTaxResidenceCountryId] = useState('')\r\n    const [otherTaxResidencesCountryId, setotherTaxResidencesCountryId] = useState([])\r\n    //! Education level variables\r\n    const [educationLevelId, seteducationLevelId] = useState('')\r\n    const [educationsLevelId, seteducationsLevelId] = useState([])\r\n    const [ppeOccupation, setppeOccupation] = useState('')\r\n    const [usPerson, setusPerson] = useState(false)\r\n    const [isAssociatedPerson, setisAssociatedPerson] = useState(false)\r\n    const [isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount] = useState(false)\r\n\r\n    //#endregion\r\n\r\n    const reqJSON = {\r\n        clientId: clientId,\r\n        name: name,\r\n        shortName: shortName,\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        birthDate: `${birthDate}T00:00:00`,\r\n        fatherName: fatherName,\r\n        genderId: parseInt(genderId),\r\n        maritalStatusId: parseInt(maritalStatusId),\r\n        maritalAgreementId: maritalAgreementId ? parseInt(maritalAgreementId) : 0,\r\n        motherName: motherName,\r\n        nationality: nationality,\r\n        countryBirthId: parseInt(countryBirthId),\r\n        stateBirthId: parseInt(stateBirthId),\r\n        stateBirthName: stateBirthName,\r\n        professionalOccupationId: parseInt(professionalOccupationId),\r\n        residenceInOtherCountryId: parseInt(residenceInOtherCountryId),\r\n        otherTaxResidenceCountryId: parseInt(otherTaxResidenceCountryId),\r\n        educationLevelId: parseInt(educationLevelId),\r\n        ppeOccupation: ppeOccupation,\r\n        usPerson: usPerson,\r\n        isAssociatedPerson: isAssociatedPerson,\r\n        isAdministratorInAnotherAccount: isAdministratorInAnotherAccount,\r\n    }\r\n    useEffect(() => {\r\n        if(maritalStatusId !== \"2\") _Json_Spouse({})\r\n    }, [maritalStatusId])\r\n\r\n    // Campos não obrigatórios\r\n    useEffect(() => {\r\n        _Json_ClientInfo(reqJSON)\r\n    }, [usPerson, isAssociatedPerson,ppeOccupation, maritalAgreementId, otherTaxResidenceCountryId,residenceInOtherCountryId,isAdministratorInAnotherAccount])\r\n\r\n    // Campos obrigatórios\r\n    useEffect(() => {\r\n        if (name && shortName && birthDate && fatherName && motherName && taxPayerRegistry && genderId && maritalStatusId && nationality && countryBirthId &&\r\n            stateBirthId && stateBirthName && professionalOccupationId  && educationLevelId) {\r\n            _Json_ClientInfo(reqJSON)\r\n        }\r\n    }, [name, shortName, birthDate, fatherName, motherName, taxPayerRegistry, genderId, maritalStatusId, nationality, countryBirthId,\r\n        stateBirthId, stateBirthName, professionalOccupationId, educationLevelId])\r\n\r\n\r\n    useEffect(() => {\r\n            getGendersIds()\r\n            getMaritalStatus()\r\n            getMaritalAgreements()\r\n            getCountries()\r\n            getProfessionalOccupations()\r\n            getEducation()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(countryBirthId === '') setstatesBirth([])\r\n        else getStatesBirth() \r\n    }, [countryBirthId])\r\n\r\n\r\n    function getGendersIds() {\r\n        axios.get(config._urlGenders)\r\n            .then(res => setgendersIds(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalStatus() {\r\n        axios.get(config._urlMaritalStatus)\r\n            .then(res => setMaritalStatus(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalAgreements() {\r\n        axios.get(config._urlMaritalAgreement)\r\n            .then(res => setmaritalAgreements(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => {\r\n                setcountriesBirthId(res.data)\r\n                setresidencesInOtherCountryId(res.data)\r\n                setotherTaxResidencesCountryId(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getStatesBirth() {\r\n        axios.get(`${config._urlStates}${countryBirthId}`)\r\n            .then(res => setstatesBirth(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getProfessionalOccupations() {\r\n        axios.get(config._urlProfessionalOccupation)\r\n            .then(res => setprofessionalOccupationsId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getEducation() {\r\n        axios.get(config._urlEducation)\r\n            .then(res => seteducationsLevelId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <ClientInfoContext.Provider\r\n            value={{\r\n                name, setname,\r\n                shortName, setshortName,\r\n                taxPayerRegistry, settaxPayerRegistry,\r\n                birthDate, setbirthDate, age, setAge,\r\n                fatherName, setfatherName,\r\n                motherName, setmotherName,\r\n                genderId, setgenderId, gendersIds,\r\n                maritalStatusId, setmaritalStatusId, maritalStatus,\r\n                maritalAgreements, setmaritalAgreementId,\r\n                nationality, setnationality,\r\n                setcountryBirthId, countriesBirthId,\r\n                setstateBirthId, setstateBirthName, statesBirth,\r\n                setprofessionalOccupationId, professionalOccupationsId,professionalOccupationId,\r\n                residencesInOtherCountryId, setresidenceInOtherCountryId,\r\n                otherTaxResidencesCountryId, setotherTaxResidenceCountryId,\r\n                seteducationLevelId, educationsLevelId,\r\n                ppeOccupation,setppeOccupation,\r\n                usPerson, setusPerson,\r\n                isAssociatedPerson, setisAssociatedPerson,\r\n                isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ClientInfoContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from '../contexts/FormContexts'\r\nimport { ClientInfoContext } from \"./ClientInfoContexts\"\r\n\r\nconst InitialState = {\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n}\r\n\r\nexport const IdentificationTypeContext = createContext(InitialState);\r\n\r\nexport const IdentificationTypeProvider = (props) => {\r\n\r\n    const { _Json_ClientIdentification } = useContext(FormContext)\r\n    const { taxPayerRegistry } = useContext(ClientInfoContext)\r\n\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    let reqJSON = {\r\n        identificationTypeId: parseInt(identificationTypeId),\r\n        number: number,\r\n        emissionInssuer: emissionInssuer,\r\n        emission: `${emission}T00:00:00`,\r\n        stateId: parseInt(stateId),\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (identificationTypeId && emissionInssuer && emission && stateId) {\r\n            if (identificationTypeId === \"40\") {\r\n                const cpf = taxPayerRegistry.replace(/[^\\d]+/g, '')\r\n                setnumber(cpf)\r\n                _Json_ClientIdentification(reqJSON)\r\n            }\r\n            else if (number) _Json_ClientIdentification(reqJSON)\r\n        }\r\n    }, [identificationTypeId, number, emissionInssuer, emission, stateId,taxPayerRegistry])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <IdentificationTypeContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                setnumber,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states\r\n            }}\r\n        >\r\n            {props.children}\r\n        </IdentificationTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    isAcceptedOrderAttorney: false,\r\n    name: '',\r\n    setname: () => { },\r\n    taxpayerRegistry: '',\r\n    settaxpayerRegistry: () => { },\r\n    birthDate: '',\r\n    setbirthDate: () => { },\r\n    isPEP: false,\r\n    setisPEP: () => { },\r\n    actionDescription: '',\r\n    setactionDescription: () => { },\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setneighborhood: () => { },\r\n    description: '',\r\n    setdescription: () => { },\r\n    zipCode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setnumber: () => { },\r\n    complement: '',\r\n    setcomplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { },\r\n}\r\nexport const AttorneyContext = createContext(InitialState);\r\n\r\nexport const AttorneyProvider = (props) => {\r\n    const [isAcceptedOrderAttorney, setisAcceptedOrderAttorney] = useState(false)\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [isPEP, setisPEP] = useState(false)\r\n    const [actionDescription, setactionDescription] = useState('')\r\n    const [countryId, setCountryId] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setneighborhood] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const [zipCode, setZipCode] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [complement, setcomplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_AttorneyInfo } = useContext(FormContext)\r\n\r\n    const attorneys = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry.replace(/[^\\d]+/g, ''),\r\n        birthDate: birthDate,\r\n        isPEP: isPEP,\r\n        actionDescription: actionDescription,\r\n        address: {\r\n            countryId: countryId,\r\n            stateId: stateId,\r\n            stateName: stateName,\r\n            cityId: cityId,\r\n            cityName: cityName,\r\n            neighborhood: neighborhood,\r\n            description: description,\r\n            zipCode: zipCode,\r\n            number: number,\r\n            complement: complement,\r\n            typeAddressId: typeAddressId\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(!isAcceptedOrderAttorney) _Json_AttorneyInfo([])\r\n        else if (isAcceptedOrderAttorney && name && taxpayerRegistry && birthDate && actionDescription && countryId && stateId && stateName && cityId && cityName &&\r\n            neighborhood && description && zipCode && number && complement && typeAddressId) {\r\n            _Json_AttorneyInfo([attorneys])\r\n        }\r\n    }, [isAcceptedOrderAttorney, name, taxpayerRegistry, birthDate, isPEP, actionDescription, countryId, stateId, stateName, cityId, cityName,\r\n        neighborhood, description, zipCode, number, complement, typeAddressId])\r\n\r\n    return (\r\n        <AttorneyContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, birthDate, isPEP, actionDescription,\r\n                countryId, isAcceptedOrderAttorney, stateId,\r\n                setisAcceptedOrderAttorney, setname, settaxpayerRegistry,\r\n                setbirthDate, setisPEP, setactionDescription,\r\n                setCountryId, setStateId, setStateName, setCityId, setneighborhood,\r\n                setCityName, setTypeAddressId, setZipCode, setdescription, setnumber, setcomplement\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AttorneyContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setNeighborhood: () => { },\r\n    description: '',\r\n    setDescription: () => { },\r\n    zipcode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setNumber: () => { },\r\n    complement: '',\r\n    setComplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { }\r\n}\r\nexport const AdressesContext = createContext(InitialState);\r\n\r\nexport const AdressesProvider = (props) => {\r\n    const [countryId, setCountryId] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [zipcode, setZipCode] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setNeighborhood] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [complement, setComplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_ClientAddresses } = useContext(FormContext)\r\n\r\n    const AdressJson = {\r\n        \"countryId\": countryId,\r\n        \"stateId\": stateId,\r\n        \"stateName\": stateName,\r\n        \"cityId\": cityId,\r\n        \"cityName\": cityName,\r\n        \"neighborhood\": neighborhood,\r\n        \"description\": description,\r\n        \"zipCode\": zipcode,\r\n        \"number\": number,\r\n        \"complement\": complement,\r\n        \"typeAddressId\": typeAddressId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cityId && cityName && complement && countryId && description && neighborhood && number && stateId && stateName && typeAddressId && zipcode) {\r\n            _Json_ClientAddresses(AdressJson)\r\n        }\r\n    }, [cityId, cityName, complement, countryId, description, neighborhood, number, stateId, stateName, typeAddressId, zipcode])\r\n\r\n    return (\r\n        <AdressesContext.Provider\r\n            value={{\r\n                countryId,\r\n                setCountryId,\r\n                stateId,\r\n                setStateId,\r\n                setStateName,\r\n                cityId,\r\n                setCityId,\r\n                setCityName,\r\n                zipcode,\r\n                setZipCode,\r\n                stateName,\r\n                cityName,\r\n                neighborhood,\r\n                setNeighborhood,\r\n                description,\r\n                setDescription,\r\n                number,\r\n                setNumber,\r\n                complement,\r\n                setComplement,\r\n                typeAddressId,\r\n                setTypeAddressId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AdressesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    bankId: '',\r\n    agency: '',\r\n    account: '',\r\n    digit: '',\r\n    typeAccountId: '',\r\n    bankAccountTypes: [],\r\n    banks: [],\r\n    setbankId: () => { },\r\n    setagency: () => { },\r\n    setaccount: () => { },\r\n    setdigit: () => { },\r\n    settypeAccountId: () => { }\r\n}\r\n\r\nexport const BankAccountsContext = createContext(InitialState);\r\n\r\nexport const BankAccountsProvider = (props) => {\r\n    const [bankId, setbankId] = useState('')\r\n    const [agency, setagency] = useState('')\r\n    const [account, setaccount] = useState('')\r\n    const [digit, setdigit] = useState('')\r\n    const [typeAccountId, settypeAccountId] = useState('')\r\n\r\n\r\n    const [bankAccountTypes, setBankAccountTypes] = useState([])\r\n    const [banks, setBanks] = useState([])\r\n\r\n    useEffect(() => {\r\n        GetAccountTypes()\r\n        GetBanks()\r\n    }, [])\r\n\r\n    function GetAccountTypes() {\r\n        axios.get(config._urlBankAccountType)\r\n            .then(res => { if (res.data) setBankAccountTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function GetBanks() {\r\n        const newBanks = []\r\n        axios.get(config._urlBank)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    res.data.map(i => {\r\n                        const bank = { name: `${i.code} ${i.name}`, value: `${i.bankId}` }\r\n                        newBanks.push(bank)\r\n                    })\r\n                }\r\n            })\r\n            .then(res => {\r\n                setBanks(newBanks)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <BankAccountsContext.Provider\r\n            value={{\r\n                bankAccountTypes, banks,\r\n                bankId, setbankId,\r\n                agency, setagency,\r\n                account, setaccount,\r\n                digit, setdigit,\r\n                typeAccountId, settypeAccountId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </BankAccountsContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    phoneTypes: [],\r\n    phoneTypeId: '',\r\n    countryCode: '',\r\n    stateCode: '',\r\n    number: '',\r\n    setPhoneTypeId: () => { },\r\n    setCountryCode: () => { },\r\n    setStateCode: () => { },\r\n    setNumber: () => { },\r\n}\r\n\r\n\r\n\r\nexport const PhonesContext = createContext(InitialState);\r\n\r\nexport const PhonesProvider = (props) => {\r\n    const { _Json_PhoneInfo } = useContext(FormContext)\r\n    const [phoneTypeId, setPhoneTypeId] = useState('')\r\n    const [countryCode, setCountryCode] = useState('')\r\n    const [stateCode, setStateCode] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [phoneTypes, setPhoneTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        countryCode: countryCode,\r\n        stateCode: stateCode,\r\n        number: number,\r\n        type: parseInt(phoneTypeId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (countryCode && stateCode && number && phoneTypeId) _Json_PhoneInfo(reqJSON)\r\n    }, [countryCode, stateCode, number, phoneTypeId])\r\n\r\n    useEffect(() => {\r\n            getPhoneTypes()\r\n    }, [])\r\n\r\n\r\n    function getPhoneTypes() {\r\n        axios.get(config._urlPhoneType)\r\n            .then(res => {\r\n                if (res.data) setPhoneTypes(res.data)\r\n            })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    return (\r\n        <PhonesContext.Provider\r\n            value={{\r\n                phoneTypes, setPhoneTypeId, phoneTypeId,\r\n                countryCode, setCountryCode,\r\n                stateCode, setStateCode,\r\n                number, setNumber\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PhonesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    mail: '',\r\n    type: '',\r\n    isCorrespondency: true,\r\n    emailTypes: [],\r\n    setMail: () => { },\r\n    setType: () => { },\r\n    setIsCorrespondency: () => { },\r\n}\r\n\r\nexport const EmailContext = createContext(InitialState);\r\n\r\nexport const EmailProvider = (props) => {\r\n    const { _Json_EmailInfo } = useContext(FormContext)\r\n    const [mail, setMail] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [isCorrespondency, setIsCorrespondency] = useState(true)\r\n    const [emailTypes, setEmailTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        mail: mail,\r\n        type: parseInt(type),\r\n        isCorrespondency: true\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (mail && type) _Json_EmailInfo(reqJSON)\r\n    }, [mail, type])\r\n\r\n    useEffect(() => {\r\n            getEmailTypes()\r\n    }, [])\r\n\r\n\r\n    function getEmailTypes() {\r\n        axios.get(config._urlEmailType)\r\n            .then(res => {\r\n                if (res.data) setEmailTypes(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <EmailContext.Provider\r\n            value={{\r\n                emailTypes,\r\n                setIsCorrespondency, isCorrespondency,\r\n                setType, setMail\r\n            }}\r\n        >\r\n            {props.children}\r\n        </EmailContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport { FormContext } from './FormContexts'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    typeWealthId: '',\r\n    value: '',\r\n    description: '',\r\n    typesWealthId: [],\r\n    settypeWealthId: () => { },\r\n    setvalue: () => { },\r\n    setdescription: () => { },\r\n}\r\n\r\nexport const WealthsTypeContext = createContext(InitialState);\r\n\r\nexport const WealthsTypeProvider = (props) => {\r\n\r\n    const [typeWealthId, settypeWealthId] = useState('')\r\n    const [value, setvalue] = useState('')\r\n    const [description, setdescription] = useState('')\r\n\r\n    const [typesWealthId, settypesWealthId] = useState([])\r\n\r\n    useEffect(() => {\r\n            GetWealthTypes()\r\n    }, [])\r\n\r\n    function GetWealthTypes() {\r\n        axios.get(config._urlWealthType)\r\n            .then(res => { if (res.data) settypesWealthId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <WealthsTypeContext.Provider\r\n            value={{\r\n                typeWealthId, value, description,\r\n                settypeWealthId, setvalue, setdescription,\r\n                typesWealthId,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WealthsTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    institutionName: '',\r\n    occupation: '',\r\n    profession: '',\r\n    corporateTaxpayerRegistry: '',\r\n    setinstitutionName: () => { },\r\n    setoccupation: () => { },\r\n    setprofession: () => { },\r\n    setcorporateTaxpayerRegistry: () => { },\r\n    setIsRequired: () => { }\r\n}\r\n\r\nexport const WorkContext = createContext(InitialState);\r\n\r\nexport const WorkProvider = (props) => {\r\n\r\n    const { _Json_Work } = useContext(FormContext)\r\n\r\n    const [institutionName, setinstitutionName] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n    const [profession, setprofession] = useState('')\r\n    const [corporateTaxpayerRegistry, setcorporateTaxpayerRegistry] = useState('')\r\n    \r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    let reqJSON = {\r\n        institutionName: institutionName,\r\n        occupation: occupation,\r\n        profession: profession,\r\n        corporateTaxpayerRegistry: corporateTaxpayerRegistry.replace(/[^\\d]+/g, '')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_Work({})\r\n        else if (institutionName && occupation && profession && corporateTaxpayerRegistry){\r\n            _Json_Work(reqJSON)\r\n        }\r\n    }, [isRequired,institutionName, occupation, profession, corporateTaxpayerRegistry])\r\n\r\n\r\n    return (\r\n        <WorkContext.Provider\r\n            value={{\r\n                institutionName, setinstitutionName,\r\n                occupation, setoccupation,\r\n                profession, setprofession,\r\n                corporateTaxpayerRegistry, setcorporateTaxpayerRegistry,\r\n                setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WorkContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { IdentificationTypeContext } from '../../contexts/IdentificationTypeContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function IdentificationType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, \r\n        setstateId,setemissionInssuer, setnumber, setemission, emission } = useContext(IdentificationTypeContext)\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Identificação' : 'Identification',\r\n        Select: languagePT ? 'Selecionar tipo de identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Document UF',\r\n        emission: languagePT ? 'Data de emissão' : 'Issue date',\r\n        emissionInssuer: languagePT ? 'Orgão emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    function OnChangeField(e) {\r\n        const {value, id} = e.target \r\n        switch (id) {\r\n            case 'identificationType':\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'IdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'identificationTypeemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'identificationTypedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'identificationTypeemission':\r\n                setemission(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divIdentificationTypeSelect\">\r\n\r\n            <div className=\"componentTitle\">\r\n                <span>{Labels.componentTitle}</span>\r\n                <hr />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.Select}</p>\r\n                </div>\r\n                <select required\r\n                    name=\"identificationType\" id=\"identificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex-input d-flexdc\"}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.documentNumber}</p>\r\n                </div>\r\n                <input required={identificationTypeId !== \"40\"} type=\"text\" name=\"identificationTypedocument\" id=\"identificationTypedocument\" onChange={e => OnChangeField(e)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.States}</p>\r\n                </div>\r\n                <select required name=\"IdtypeStateId\" id=\"IdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderStates()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.emission}</p>\r\n                </div>\r\n                <input value={emission} required type=\"date\" name=\"identificationTypeemission\" id=\"identificationTypeemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max}/>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.emissionInssuer}</p>\r\n                </div>\r\n                <input required type=\"text\" name=\"identificationTypeemissionInssuer\" id=\"identificationTypeemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                />\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nexport default function Countries(props) {\r\n    const [countries, setCountries] = useState([])\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar País' : 'Select Country'\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n        getCountries()\r\n    }, [])\r\n\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => { if (res.data) setCountries(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function RenderCountries() {\r\n        return (\r\n            countries.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"countries\" id=\"countries\" onChange={props.onSelectCountry}>\r\n            <option defaultValue value=\"\"></option>\r\n            {RenderCountries()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { AdressesContext } from \"../../contexts/AdressesContexts\";\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const Atctx = useContext(AttorneyContext)\r\n    const Adctx = useContext(AdressesContext)\r\n\r\n    const [states, setStates] = useState([])\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Estado' : 'Select State',\r\n        SelectError: languagePT ? 'Erro ao consultar estados' : 'Error querying states'\r\n    }\r\n\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if(Atctx.isAcceptedOrderAttorney) required = true\r\n        else if(!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n\r\n    useEffect(() => {\r\n        if(props.ClientAdress) {\r\n            if (Adctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n        else if (props.Attorney){\r\n            if (Atctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n    }, [Atctx.countryId, Adctx.countryId])\r\n\r\n    function getStates() {\r\n        const _countryId = props.ClientAdress ? Adctx.countryId : Atctx.countryId\r\n        axios.get(`${config._urlStates}${_countryId}`)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    setStates(res.data)\r\n                }\r\n                else {\r\n                    console.log(Labels.SelectError)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(Labels.SelectError)\r\n            })\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"states\" id=\"states\" onChange={props.onSelectState}>\r\n            <option defaultValue value=\"\"></option>\r\n            {RenderStates()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function Cities(props) {\r\n    const Adctx = useContext(AdressesContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const [cities, setCities] = useState([])\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Cidade' : 'Select City',\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n        if (props.ClientAdress) {\r\n            if (Adctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n        else if (props.Attorney) {\r\n            if (Atctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n    }, [Atctx.stateId, Adctx.stateId])\r\n\r\n    function getCities() {\r\n        const _stateId = props.ClientAdress ? Adctx.stateId : Atctx.stateId\r\n        axios.get(`${config._urlCities}${_stateId}`)\r\n            .then(res => { if (res.data) { setCities(res.data) } })\r\n            .catch(err => { console.log(err) })\r\n    }\r\n    function RenderCities() {\r\n        return (\r\n            cities.map(c => {\r\n                return (\r\n                    <option key={c.cityId} value={c.cityId} cityname={c.name}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divCitiesSelect\">\r\n            <select required={required} name=\"cities\" id=\"cities\" onChange={props.onSelectCity}>\r\n                <option defaultValue value=\"\"></option>\r\n                {RenderCities()}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport config from \"../../config\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nexport default function AdressType(props) {\r\n    const [adressType, setAdressType] = useState([])\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Tipo de Endereço' : 'Select Address Type',\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n            getAdressType()\r\n    }, [])\r\n\r\n    function getAdressType() {\r\n        axios.get(config._urlAdressType)\r\n            .then(res => {if (res.data) setAdressType(res.data)})\r\n            .catch(err => console.log(err))\r\n    }\r\n    function RenderAdressType() {\r\n        return (\r\n            adressType.map(adt => {\r\n                return (\r\n                    <option key={adt.addressTypeId} value={adt.addressTypeId}>{adt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n            <select required={required} name=\"addressType\" id=\"addressType\" onChange={props.onSelectTypeAddress}>\r\n                <option defaultValue value=\"\"></option>\r\n                {RenderAdressType()}\r\n            </select>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function CEP(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const [error, setError] = useState(false)\r\n    const Labels = {\r\n        CollectCep: languagePT ? 'Digite seu cep' : 'Type your ZIP Code',\r\n        Error: languagePT ? 'CEP Invalido' : 'Invalid ZIP Code'\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    function ValidateCEP(e) {\r\n        const Cep = e.target.value\r\n        if (Cep.length === 0) {\r\n            setError(false)\r\n            props.onCollectCep('')\r\n        }\r\n        const validacep = /^[0-9]{5,8}$/;\r\n        if (validacep.test(Cep)) {\r\n            setError(false)\r\n            props.onCollectCep(Cep)\r\n        }\r\n        else {\r\n            props.onCollectCep('')\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"divCollectCep\">\r\n            <input required={required} type=\"text\" name=\"cep\" id=\"cep\"\r\n                maxLength=\"8\" onChange={e => ValidateCEP(e)} />\r\n            <p className={error ? \"cepError\" : \"d-none\"}>{Labels.Error}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts';\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function AdressUtils(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setComplement, setDescription, setNeighborhood, setNumber } = useContext(AdressesContext)\r\n    const { setcomplement, setdescription, setneighborhood, setnumber, isAcceptedOrderAttorney } = useContext(AttorneyContext)\r\n    const Labels = {\r\n        neighborhood: languagePT ? 'Bairro' : 'Neighborhood',\r\n        description: languagePT ? 'Rua' : 'Street',\r\n        number: languagePT ? 'Número' : 'Number',\r\n        complement: languagePT ? 'Complemento' : 'Complement',\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if(isAcceptedOrderAttorney) required = true\r\n        else if(!isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n    \r\n\r\n    function setInput(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'AduNeighborhood':\r\n                if (props.Attorney) setneighborhood(value)\r\n                else if (props.ClientAdress) setNeighborhood(value)\r\n                break;\r\n            case 'AduDescription':\r\n                if (props.Attorney) setdescription(value)\r\n                else if (props.ClientAdress) setDescription(value)\r\n                break;\r\n            case 'AduNumber':\r\n                if (props.Attorney) setnumber(value)\r\n                else if (props.ClientAdress) setNumber(value)\r\n                break;\r\n            case 'AduComplement':\r\n                if (props.Attorney) setcomplement(value)\r\n                else if (props.ClientAdress) setComplement(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        // <div className=\"divCollectUtilsAdress\">\r\n            <>\r\n            {props.children}\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.neighborhood}</p>\r\n                </div>\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"neighborhood\" id=\"AduNeighborhood\"/>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.description}</p>\r\n                </div>\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"description\" id=\"AduDescription\"/>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.number}</p>\r\n                </div>\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" maxLength=\"20\" name=\"number\" id=\"AduNumber\"/>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.complement}</p>\r\n                </div>\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"complement\" id=\"AduComplement\"/>\r\n            </div>\r\n        </>\r\n        /* </div> */\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nexport default function Adresses(props) {\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode } = useContext(AdressesContext)\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Endereço' : 'Address',\r\n    }\r\n\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientAdress\">\r\n            <div className=\"componentTitle\">\r\n                <span>Contato e endereço</span>\r\n                <hr />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">País</p>\r\n                </div>\r\n                <Countries onSelectCountry={onSelectCountry} ClientAdress={true} Attorney={false} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">Estado</p>\r\n                </div>\r\n                <States onSelectState={onSelectState} ClientAdress={true} Attorney={false} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">Cidade</p>\r\n                </div>\r\n                <Cities onSelectCity={onSelectCity} ClientAdress={true} Attorney={false} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">Selecione o tipo do endereço</p>\r\n                </div>\r\n                <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={true} Attorney={false} />\r\n            </div>\r\n\r\n\r\n            <AdressUtils ClientAdress={true} Attorney={false}>\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">CEP</p>\r\n                    </div>\r\n                    <CEP onCollectCep={onCollectCep} ClientAdress={true} Attorney={false} />\r\n                </div>\r\n            </AdressUtils>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport Fuse from 'fuse.js';\r\n\r\nimport SelectSearch from 'react-select-search'\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { BankAccountsContext } from '../../contexts/BankContexts';\r\n\r\nimport './index.css'\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function BankAccounts(props) {\r\n    const [error, setError] = useState(false)\r\n    const { languagePT, _Json_BankAccounts } = useContext(FormContext)\r\n    const { bankAccountTypes, banks,\r\n        bankId, setbankId,\r\n        agency, setagency,\r\n        account, setaccount,\r\n        digit, setdigit,\r\n        typeAccountId, settypeAccountId } = useContext(BankAccountsContext)\r\n    const [clientBankAccounts, setclientBankAccounts] = useState([])\r\n    const Labels = {\r\n        selectItems: languagePT ? 'Selecione um item de cada lista e preencha os campos' : 'Select an item from the list and fill the fields',\r\n        SelecttypeAccountId: languagePT ? 'Tipo de conta bancária' : 'Bank account type',\r\n        SelectbankId: languagePT ? 'Selecione o seu banco' : 'Select your bank',\r\n        account: languagePT ? 'Número da conta bancária' : 'Bank account number',\r\n        digit: languagePT ? 'Digito' : 'Digit',\r\n        agency: languagePT ? 'Agência' : 'Agency',\r\n        description: languagePT ? 'Contas bancarias' : 'Bank accounts',\r\n        addAccount: languagePT ? 'Adicionar conta bancária' : 'CLICK TO ADD BANK ACCOUNT'\r\n    }\r\n\r\n    function RenderBankAccountTypes() {\r\n        return (\r\n            bankAccountTypes.map(bat => {\r\n                return (\r\n                    <option key={bat.bankAccountTypeId} value={bat.bankAccountTypeId}>{bat.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderBanks() {\r\n        return (\r\n            banks.map(bank => {\r\n                return (\r\n                    <option key={bank.bankId} value={bank.bankId} code={bank.code}>{bank.code} | {bank.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderclientBankAccounts() {\r\n        return (\r\n            clientBankAccounts.map((bat, index) => {\r\n                return (\r\n                    <div className=\"account\" key={index}>\r\n                        <div className=\"account-spans\">\r\n                            <span>{banks.find(b => b.value === bat.bankId.toString()).name}</span>\r\n                            <span>Agencia: {bat.agency}</span>\r\n                            <span>Conta: {bat.account}-{bat.digit}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeBankAccount(index)}>\r\n                            Apagar conta\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addBankAccount() {\r\n        if (!account || !agency || !bankId || !digit || !typeAccountId) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            let bank = {\r\n                bankId: parseInt(bankId),\r\n                agency: parseInt(agency),\r\n                account: parseInt(account),\r\n                digit: parseInt(digit),\r\n                typeAccountId: parseInt(typeAccountId)\r\n            }\r\n            setclientBankAccounts([...clientBankAccounts, bank])\r\n            setaccount('')\r\n            setdigit('')\r\n            setagency('')\r\n        }\r\n    }\r\n    function removeBankAccount(i) {\r\n        setclientBankAccounts(clientBankAccounts.filter((c, index) => index !== i))\r\n    }\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'typeAccountId':\r\n                settypeAccountId(value)\r\n                break;\r\n            case 'account':\r\n                setaccount(value)\r\n                break;\r\n            case 'digit':\r\n                setdigit(value)\r\n                break;\r\n            case 'agency':\r\n                setagency(value)\r\n                break;\r\n            case 'bankId':\r\n                console.log(value)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        _Json_BankAccounts(clientBankAccounts)\r\n    }, [clientBankAccounts])\r\n\r\n\r\n    function fuzzySearch(options) {\r\n        const fuse = new Fuse(options, {\r\n            keys: ['name'],\r\n            threshold: 0.3,\r\n        });\r\n\r\n        return (value) => {\r\n            if (!value.length) {\r\n                return options;\r\n            }\r\n            let array = fuse.search(value)\r\n            array = array.map(i => i.item)\r\n            return array;\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className=\"divBankAccounts\">\r\n            <div className=\"componentTitle\">\r\n                <span>{Labels.description}</span>\r\n                <hr />\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.SelecttypeAccountId}</p>\r\n                </div>\r\n                <select required={clientBankAccounts.length === 0} name=\"typeAccountId\" id=\"typeAccountId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderBankAccountTypes()}\r\n                </select>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.SelectbankId}</p>\r\n                </div>\r\n                <SelectSearch options={banks} search={true} filterOptions={fuzzySearch} name=\"name\"\r\n                    emptyMessage=\"Não encontrado\" id=\"bankId\"\r\n                    printOptions=\"auto\" closeOnSelect={true} onChange={id => setbankId(id)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.account}</p>\r\n                </div>\r\n                <input required={clientBankAccounts.length === 0} value={account} type=\"text\" name=\"account\" id=\"account\"\r\n                    onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.digit}</p>\r\n                </div>\r\n                <input required={clientBankAccounts.length === 0} value={digit} type=\"text\" name=\"digit\" id=\"digit\"\r\n                    onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.agency}</p>\r\n                </div>\r\n                <input required={clientBankAccounts.length === 0} value={agency} type=\"text\" name=\"agency\" id=\"agency\"\r\n                    onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n\r\n            <div className=\"bankAccounts\">\r\n                {RenderclientBankAccounts()}\r\n            </div>\r\n\r\n\r\n            <div className=\"addAccount\">\r\n                <button onClick={() => addBankAccount()} type=\"button\">\r\n                    {Labels.addAccount}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>{Labels.selectItems}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    name: '',\r\n    nationality: '',\r\n    occupation: '',\r\n    settaxPayerRegistry: () => { },\r\n    setname: () => { },\r\n    setnationality: () => { },\r\n    setoccupation: () => { }\r\n}\r\n\r\nexport const PPERelatedsContext = createContext(InitialState);\r\n\r\nexport const PPERelatedsProvider = (props) => {\r\n    const { _Json_PPERelateds } = useContext(FormContext)\r\n\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [name, setname] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n\r\n    const reqJson = {\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        name: name,\r\n        nationality: nationality,\r\n        occupation: occupation\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(name && taxPayerRegistry && occupation && nationality) _Json_PPERelateds([reqJson])\r\n    }, [name,taxPayerRegistry,occupation,nationality])\r\n\r\n    return (\r\n        <PPERelatedsContext.Provider\r\n            value={{\r\n                taxPayerRegistry,\r\n                name,\r\n                nationality,\r\n                occupation,\r\n                settaxPayerRegistry,\r\n                setname,\r\n                setnationality,\r\n                setoccupation\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PPERelatedsContext.Provider>\r\n    );\r\n};\r\n","function ValidCPF(cpf) {\r\n    var Soma;\r\n    var Resto;\r\n    Soma = 0;\r\n    if (cpf === \"00000000000\") return false;\r\n    if (cpf === \"11111111111\") return false;\r\n    if (cpf === \"22222222222\") return false;\r\n    if (cpf === \"33333333333\") return false;\r\n    if (cpf === \"44444444444\") return false;\r\n    if (cpf === \"55555555555\") return false;\r\n    if (cpf === \"66666666666\") return false;\r\n    if (cpf === \"77777777777\") return false;\r\n    if (cpf === \"88888888888\") return false;\r\n\r\n    for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n    if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n    Soma = 0;\r\n    for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n    if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n    return true;\r\n}\r\n\r\nfunction validarCNPJ(cnpj) {\r\n    cnpj = cnpj.replace(/[^\\d]+/g,'');\r\n    if(cnpj == '') return false;\r\n    if (cnpj.length != 14)\r\n        return false;\r\n    // Elimina CNPJs invalidos conhecidos\r\n    if (cnpj == \"00000000000000\" || \r\n        cnpj == \"11111111111111\" || \r\n        cnpj == \"22222222222222\" || \r\n        cnpj == \"33333333333333\" || \r\n        cnpj == \"44444444444444\" || \r\n        cnpj == \"55555555555555\" || \r\n        cnpj == \"66666666666666\" || \r\n        cnpj == \"77777777777777\" || \r\n        cnpj == \"88888888888888\" || \r\n        cnpj == \"99999999999999\")\r\n        return false;\r\n    // Valida DVs\r\n    let tamanho = cnpj.length - 2\r\n    let numeros = cnpj.substring(0,tamanho);\r\n    let digitos = cnpj.substring(tamanho);\r\n    let soma = 0;\r\n    let pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(0))\r\n        return false;\r\n    tamanho = tamanho + 1;\r\n    numeros = cnpj.substring(0,tamanho);\r\n    soma = 0;\r\n    pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(1))\r\n          return false;\r\n           \r\n    return true;\r\n}\r\n\r\nexport {\r\n    ValidCPF, validarCNPJ\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { PPERelatedsContext } from '../../contexts/PPERelatedsContext';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport InputMask from \"react-input-mask\";\r\nimport Switch from \"react-switch\";\r\n\r\nimport { ValidCPF } from '../../utils'\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function PPERelateds(props) {\r\n    const { languagePT, _Json_PPERelateds } = useContext(FormContext)\r\n    const { name, nationality, occupation, setname, setnationality,\r\n        setoccupation, settaxPayerRegistry, taxPayerRegistry } = useContext(PPERelatedsContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n\r\n    const [PPERelated, setPPERelated] = useState(false)\r\n\r\n    const Labels = {\r\n        PPERelated: languagePT ? 'Cliente têm relacionamento com uma Pessoa Politicamente Exposta ?' : 'Customer has a relationship with a Politically Exposed Person ?',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        name: languagePT ? 'Nome da Pessoa Politicamente Exposta' : 'Politically Exposed Person\\'s Name',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'TaxPayerRegistry',\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!PPERelated) _Json_PPERelateds([])\r\n    }, [PPERelated])\r\n\r\n    function OnChangeField(e) {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"RelPPERelated\">\r\n                <Switch\r\n                    onColor=\"#071223\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#071223\"\r\n                    offHandleColor=\"#F49925\"\r\n                    checked={PPERelated}\r\n                    onChange={cheked => setPPERelated(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={35}\r\n                    width={70}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n                <p className=\"inputDescription\">{Labels.PPERelated}</p>\r\n            </div>\r\n\r\n\r\n            <div className={PPERelated ? \"d-flex-input d-flexdc\" : \"d-none\"}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.name}</p>\r\n                </div>\r\n                <input value={name} required={PPERelated} type=\"text\" name=\"name\" id=\"name\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex-input d-flexdc\" : \"d-none\"}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.nationality}</p>\r\n                </div>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} value={nationality} required={PPERelated} type=\"text\"\r\n                    name=\"nationality\" id=\"nationality\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex-input d-flexdc\" : \"d-none\"}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.taxPayerRegistry}</p>\r\n                </div>\r\n                <InputMask className={PPERelated ? \"\" : \"d-none\"} value={taxPayerRegistry} required={PPERelated}\r\n                    type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\"\r\n                    mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\"\r\n                    title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n\r\n            <div className={PPERelated ? \"d-flex-input d-flexdc\" : \"d-none\"}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.occupation}</p>\r\n                </div>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} required={PPERelated} value={occupation}\r\n                    type=\"text\" name=\"occupation\" id=\"occupation\"\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setname: () => { },\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n    setHide: () => { }\r\n}\r\n\r\nexport const SpouseContext = createContext(InitialState);\r\n\r\nexport const SpouseProvider = (props) => {\r\n\r\n    const { _Json_Spouse } = useContext(FormContext)\r\n\r\n    const [spouseId, setspouseId] = useState(0)\r\n    const [name, setname] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    \r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    const [hide, setHide] = useState(false)\r\n\r\n    let reqJSON = {\r\n        spouseId: parseInt(spouseId),\r\n        name: name,\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        document: {\r\n            identificationTypeId: parseInt(identificationTypeId),\r\n            number: number,\r\n            emissionInssuer: emissionInssuer,\r\n            emission: emission,\r\n            stateId: parseInt(stateId)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (identificationTypeId === \"40\") {\r\n            if (name && taxPayerRegistry && identificationTypeId && emissionInssuer && emission && stateId) {\r\n                const cpf = taxPayerRegistry.replace(/[^\\d]+/g, '')\r\n                reqJSON.document.number = identificationTypeId === \"40\" ? cpf : number\r\n                reqJSON.taxPayerRegistry = cpf\r\n                _Json_Spouse(reqJSON)\r\n            }\r\n        }\r\n        else if (name && taxPayerRegistry && identificationTypeId && number && emissionInssuer && emission && stateId) {\r\n            const cpf = taxPayerRegistry.replace(/[^\\d]+/g, '')\r\n            reqJSON.taxPayerRegistry = cpf\r\n            _Json_Spouse(reqJSON)\r\n        }\r\n\r\n    }, [hide, name, taxPayerRegistry, identificationTypeId, number, emissionInssuer, emission, stateId])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <SpouseContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                settaxPayerRegistry, taxPayerRegistry,\r\n                setnumber, setname, name,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states,\r\n                setHide\r\n            }}\r\n        >\r\n            {props.children}\r\n        </SpouseContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { SpouseContext } from '../../contexts/Spouse';\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport { ValidCPF } from '../../utils'\r\nimport './index.css'\r\n\r\nexport default function Spouse(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, setHide,\r\n        setstateId, setemissionInssuer, setnumber, setemission, number, taxPayerRegistry, settaxPayerRegistry, setname, name } = useContext(SpouseContext)\r\n    const Labels = {\r\n        name: languagePT ? 'Nome Completo' : 'Name',\r\n        Select: languagePT ? 'Selecionar Tipo de Identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Document UF',\r\n        emission: languagePT ? 'Data de emissão' : 'Issue date',\r\n        emissionInssuer: languagePT ? 'Orgão Emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'spousename':\r\n                setname(value)\r\n                break;\r\n            case 'spouseidentificationType':\r\n                setnumber('')\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'spouseIdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'spouseemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'spousedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'spouseemission':\r\n                const emissionDoc = `${value}T00:00:00`\r\n                setemission(emissionDoc)\r\n                break;\r\n            case 'spousedocumentcpf':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className={props.hide ? \"d-none\" : \"divSpouse\"}>\r\n            <div className=\"componentTitle\">\r\n                <span>Informações da cônjuge</span>\r\n                <hr />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.name}</p>\r\n                </div>\r\n                <input value={name} required={props.required} type=\"text\" name=\"spousename\" id=\"spousename\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.Select}</p>\r\n                </div>\r\n                <select required={props.required}\r\n                    name=\"spouseidentificationType\" id=\"spouseidentificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex-input d-flexdc\"}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.documentNumber}</p>\r\n                </div>\r\n                <input value={number} required={identificationTypeId !== \"40\" && props.required} type=\"text\" name=\"spousedocument\" id=\"spousedocument\" onChange={e => OnChangeField(e)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.taxPayerRegistry}</p>\r\n                </div>\r\n                <InputMask value={taxPayerRegistry} required={props.required} type=\"text\" name=\"spousedocumentcpf\" id=\"spousedocumentcpf\"\r\n                    mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\"\r\n                    title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.States}</p>\r\n                </div>\r\n                <select required={props.required} name=\"spouseIdtypeStateId\" id=\"spouseIdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderStates()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.emission}</p>\r\n                </div>\r\n                <input required={props.required} type=\"date\" name=\"spouseemission\" id=\"spouseemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.emissionInssuer}</p>\r\n                </div>\r\n                <input required={props.required} type=\"text\" name=\"spouseemissionInssuer\" id=\"spouseemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                />\r\n            </div>\r\n\r\n\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WorkContext } from '../../contexts/Work';\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport { validarCNPJ } from '../../utils'\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport './index.css'\r\n\r\nexport default function Work(props) {\r\n    const [errorCNPJ, setErrorCNPJ] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setinstitutionName, setprofession, setoccupation, setcorporateTaxpayerRegistry,\r\n        institutionName, profession, occupation, corporateTaxpayerRegistry, setIsRequired } = useContext(WorkContext)\r\n    const { professionalOccupationId } = useContext(ClientInfoContext)\r\n\r\n    const required = professionalOccupationId === \"3\" || professionalOccupationId === \"6\" ||\r\n        professionalOccupationId === \"8\" || professionalOccupationId === \"9\" || professionalOccupationId === \"\" ? false : true\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [required])\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações Instituição de Trabalho' : 'Work Institution Information',\r\n        institutionName: languagePT ? 'Nome da instituição' : 'Institution Name',\r\n        onlyLettersAndNumbersTitle: languagePT ? 'Somente letras e numeros' : 'Only letters and numbers',\r\n        profession: languagePT ? 'Profissão' : 'Profession',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        corporateTaxpayerRegistry: languagePT ? 'CNPJ da instituição de trabalho' : 'CNPJ of the work institution',\r\n        cnpjTitle: languagePT ? 'Digite um cnpj valido' : 'Enter a valid cnpj',\r\n    }\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'institutionName':\r\n                setinstitutionName(value)\r\n                break;\r\n            case 'profession':\r\n                setprofession(value)\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'corporateTaxpayerRegistry':\r\n                setcorporateTaxpayerRegistry(value)\r\n                const cnpj = value.replace(/[^\\d]+/g, '');\r\n\r\n                if (cnpj.length < 14) setErrorCNPJ(false)\r\n                else if (cnpj.length === 14) {\r\n                    if (validarCNPJ(cnpj)) {\r\n                        setErrorCNPJ(false)\r\n                        setcorporateTaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        setcorporateTaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCNPJ(true)\r\n                    }\r\n                }\r\n                else if (cnpj.length > 14) {\r\n                    setErrorCNPJ(true)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={required ? \"divWork\" : \"d-none\"}>\r\n            <div className=\"componentTitle\">\r\n                <span>{Labels.componentTitle}</span>\r\n                <hr />\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.institutionName}</p>\r\n                </div>\r\n                <input required={required} value={institutionName} type=\"text\" name=\"institutionName\" id=\"institutionName\"\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.profession}</p>\r\n                </div>\r\n                <input required={required} value={profession} type=\"text\" name=\"profession\" id=\"profession\"\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.occupation}</p>\r\n                </div>\r\n                <input required={required} value={occupation} type=\"text\" name=\"occupation\" id=\"occupation\"\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.corporateTaxpayerRegistry}</p>\r\n                </div>\r\n                <InputMask required={required} value={corporateTaxpayerRegistry} type=\"text\" name=\"corporateTaxpayerRegistry\" id=\"corporateTaxpayerRegistry\"\r\n                    pattern=\"^\\d{2}\\.?\\d{3}\\.?\\d{3}\\/?\\d{4}-?\\d{2}$\" mask=\"99.999.999/9999-99\" title={Labels.cnpjTitle}\r\n                    onChange={e => OnChangeField(e)} />\r\n                <p className={errorCNPJ ? 'errorCNPJ' : 'd-none'}>{Labels.cnpjTitle}</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nimport config from \"../config\";\r\n\r\nconst InitialState = {\r\n    name: '',\r\n    taxpayerRegistry: '',\r\n    relationshipTypeId: '',\r\n    relationshipTypesId: [],\r\n    setname: () => { },\r\n    settaxpayerRegistry: () => { },\r\n    setRelationshipTypeId: () => { },\r\n    setIsRequired: () => { }\r\n}\r\nexport const LegalRepresentativeContext = createContext(InitialState);\r\n\r\nexport const LegalRepresentativeProvider = (props) => {\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [relationshipTypeId, setRelationshipTypeId] = useState('')\r\n\r\n    const [relationshipTypesId, setRelationshipTypesId] = useState([])\r\n\r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    const { _Json_LegalRepresentative, errorOnApi } = useContext(FormContext)\r\n\r\n    const legalRepresentatives = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry,\r\n        relationshipTypeId: relationshipTypeId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_LegalRepresentative([])\r\n        else if (name && taxpayerRegistry && relationshipTypeId) _Json_LegalRepresentative([legalRepresentatives])\r\n    }, [isRequired, name, taxpayerRegistry, relationshipTypeId])\r\n\r\n    useEffect(() => {\r\n            GetRelationsShipType()\r\n    }, [])\r\n\r\n    function GetRelationsShipType() {\r\n        axios.get(config._urlRelationshipType)\r\n            .then(res => { if (res.data) setRelationshipTypesId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <LegalRepresentativeContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, relationshipTypeId,\r\n                setname, settaxpayerRegistry, setRelationshipTypeId,\r\n                relationshipTypesId, setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </LegalRepresentativeContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\nimport { LegalRepresentativeContext } from '../../contexts/LegalRepresentativeContexts';\r\n\r\nimport './index.css'\r\nimport { ValidCPF } from '../../utils'\r\n\r\nimport InputMask from 'react-input-mask'\r\n\r\nexport default function Work(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { age } = useContext(ClientInfoContext)\r\n    const { name, taxpayerRegistry, relationshipTypesId,\r\n        setname, settaxpayerRegistry, setRelationshipTypeId, setIsRequired } = useContext(LegalRepresentativeContext)\r\n\r\n    let required = age >= 0 && age < 18 ? true : false\r\n\r\n    const Labels = {\r\n        legalRepresentativeName: languagePT ? 'Nome ao representante legal do cliente' : '',\r\n        legalRepresentativeTaxpayerRegistry: languagePT ? 'CPF ao representante legal do cliente' : '',\r\n        relationshipTypeId: languagePT ? 'Tipo do relacionamento ao representante legal' : '',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : '',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    \r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'legalRepresentativeName':\r\n                setname(value)\r\n                break;\r\n            case 'relationshipTypeId':\r\n                setRelationshipTypeId(value)\r\n                break;\r\n            case 'legalRepresentativeTaxpayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxpayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderRelationshipTypes() {\r\n        return (\r\n            relationshipTypesId.map(reltid => {\r\n                return (\r\n                    <option key={reltid.relationshipTypeId} value={reltid.relationshipTypeId}>{reltid.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [])\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n        if (required) {\r\n            setname('')\r\n            setRelationshipTypeId('')\r\n            settaxpayerRegistry('')\r\n        }\r\n    }, [age])\r\n\r\n    return (\r\n        <div className={required ? \"divLegalRepresentative\" : \"d-none\"}>\r\n            <div className=\"componentTitle\">\r\n                <span>Representates legais</span>\r\n                <hr />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.legalRepresentativeName}</p>\r\n                </div>\r\n                <input required={required} value={name} type=\"text\" name=\"legalRepresentativeName\" id=\"legalRepresentativeName\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.legalRepresentativeTaxpayerRegistry}</p>\r\n                </div>\r\n                <InputMask value={taxpayerRegistry} required={required} type=\"text\" name=\"legalRepresentativeTaxpayerRegistry\" id=\"legalRepresentativeTaxpayerRegistry\"\r\n                    mask=\"999.999.999-99\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.relationshipTypeId}</p>\r\n                </div>\r\n                <select required={required}\r\n                    name=\"relationshipTypeId\" id=\"relationshipTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderRelationshipTypes()}\r\n                </select>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\n\r\n\r\nimport Spouse from '../Spouse'\r\nimport Work from '../Work'\r\nimport LegalRepresentative from '../LegalRepresentative'\r\n\r\nimport { LegalRepresentativeProvider } from '../../contexts/LegalRepresentativeContexts';\r\nimport { SpouseProvider } from '../../contexts/Spouse';\r\nimport { WorkProvider } from '../../contexts/Work';\r\n\r\n\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nimport { ValidCPF } from '../../utils'\r\n\r\nimport Switch from \"react-switch\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport './index.css'\r\n\r\nexport default function ClientInfo() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const {\r\n        // States\r\n        name, shortName, birthDate, fatherName, motherName, taxPayerRegistry, genderId, gendersIds, maritalStatusId, nationality,\r\n        countriesBirthId, stateBirthId, statesBirth, professionalOccupationId, professionalOccupationsId,\r\n        residenceInOtherCountryId, residencesInOtherCountryId, otherTaxResidencesCountryId, otherTaxResidenceCountryId,\r\n        educationLevelId, educationsLevelId, ppeOccupation, usPerson, isAssociatedPerson, isAdministratorInAnotherAccount,\r\n        maritalStatus, maritalAgreements, maritalAgreementId,\r\n        // Sets\r\n        setname, setshortName, setbirthDate, setAge, setfatherName, setmotherName, settaxPayerRegistry, setgenderId, setmaritalStatusId, setmaritalAgreementId,\r\n        setnationality, setcountryBirthId, setstateBirthId, setstateBirthName, setprofessionalOccupationId, setresidenceInOtherCountryId,\r\n        setotherTaxResidenceCountryId, seteducationLevelId, setppeOccupation, setusPerson, setisAssociatedPerson, setisAdministratorInAnotherAccount\r\n    } = useContext(ClientInfoContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações do cliente' : 'Customer information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        dateInvalid: languagePT ? 'Selecione uma data valida' : 'Select a valid date',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        name: languagePT ? 'Nome Completo' : 'Name',\r\n        shortName: languagePT ? 'Apelido' : 'ShortName',\r\n        birthDate: languagePT ? 'Data de Nascimento' : 'BirthDate',\r\n        fatherName: languagePT ? 'Nome do Pai' : 'Father Name',\r\n        motherName: languagePT ? 'Nome da Mãe' : 'Mother Name',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        genderId: languagePT ? 'Genero' : 'Gender',\r\n        maritalStatusId: languagePT ? 'Estado civil' : 'Marital Status',\r\n        maritalAgreementId: languagePT ? 'Regime do estado civil' : 'Marital Agreement',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        countryBirthId: languagePT ? 'País de nascimento' : 'Country Birth',\r\n        stateBirthId: languagePT ? 'UF de nascimento do cliente' : 'State Birth',\r\n        stateBirthName: languagePT ? 'Nome UF de nascimento' : 'State Birth Name',\r\n        professionalOccupationId: languagePT ? 'Natureza da ocupação' : 'Professional Occupation',\r\n        residenceInOtherCountryId: languagePT ? 'País ao cliente que possui residencia em outros países' : 'Residence in Other Country',\r\n        otherTaxResidenceCountryId: languagePT ? 'País ao cliente que possui domicílio fiscal além do declarado' : 'Other Tax Residence Country',\r\n        residenceInOtherCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        otherTaxResidenceCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        educationLevelId: languagePT ? 'Escolaridade' : 'Education Level',\r\n        ppeOccupation: languagePT ? 'Cargo PPE do cliente, se o mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n        usPerson: languagePT ? 'Cliente considerado como USPerson' : 'Considered as USPerson',\r\n        isAssociatedPerson: languagePT ? 'Pessoa Vinculada' : 'Associated Person',\r\n        isAdministratorInAnotherAccount: languagePT ? 'Cliente realiza operações por conta de terceiros' : 'Customer performs operations on behalf of third parties',\r\n        urlCallback: languagePT ? '' : '',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador' : 'Authorizes the transmission of orders by proxy',\r\n    }\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value, selectedIndex, options } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'shortName':\r\n                setshortName(value)\r\n                break;\r\n            case 'birthDate':\r\n                setAge('')\r\n\r\n                const d = new Date()\r\n                const ano_atual = d.getFullYear()\r\n                const mes_atual = d.getMonth() + 1\r\n                const dia_atual = d.getDate()\r\n\r\n                const ano_aniversario = parseInt(value.split(\"-\")[0])\r\n                const mes_aniversario = parseInt(value.split(\"-\")[1])\r\n                const dia_aniversario = parseInt(value.split(\"-\")[2])\r\n\r\n                if (ano_aniversario >= parseInt(Min.split(\"-\")[0])) {\r\n                    let Qtd_Anos = ano_atual - ano_aniversario\r\n                    if (mes_atual < mes_aniversario || mes_atual === mes_aniversario && dia_atual < dia_aniversario) {\r\n                        Qtd_Anos--\r\n                    }\r\n                    setAge(Qtd_Anos)\r\n                }\r\n                setbirthDate(value)\r\n                break;\r\n            case 'fatherName':\r\n                setfatherName(value)\r\n                break;\r\n            case 'motherName':\r\n                setmotherName(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'gender':\r\n                setgenderId(value)\r\n                break;\r\n            case 'maritalStatusId':\r\n                setmaritalStatusId(value)\r\n                if (value !== '2') setmaritalAgreementId('')\r\n                break;\r\n            case 'maritalAgreementId':\r\n                setmaritalAgreementId(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            case 'countryBirthId':\r\n                setcountryBirthId(value)\r\n                break;\r\n            case 'statesBirth':\r\n                const stateNameBirth = options[selectedIndex].getAttribute('statename')\r\n                // console.log(stateNameBirth)\r\n                setstateBirthId(value)\r\n                setstateBirthName(stateNameBirth)\r\n                break;\r\n            case 'professionalOccupationId':\r\n                setprofessionalOccupationId(value)\r\n                break;\r\n            case 'residenceInOtherCountryId':\r\n                setresidenceInOtherCountryId(value)\r\n                break;\r\n            case 'otherTaxResidenceCountryId':\r\n                setotherTaxResidenceCountryId(value)\r\n                break;\r\n            case 'educationLevel':\r\n                seteducationLevelId(value)\r\n                break;\r\n            case 'ppeOccupation':\r\n                setppeOccupation(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderGenders() {\r\n        return (\r\n            gendersIds.map(g => {\r\n                return (\r\n                    <option key={g.genderId} value={g.genderId}>{g.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalStatus() {\r\n        return (\r\n            maritalStatus.map(m => {\r\n                return (\r\n                    <option key={m.maritalStatusId} value={m.maritalStatusId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalAgreementId() {\r\n        return (\r\n            maritalAgreements.map(m => {\r\n                return (\r\n                    <option key={m.maritalAgreementId} value={m.maritalAgreementId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderCountriesBirth() {\r\n        return (\r\n            countriesBirthId.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            statesBirth.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderProfessionalOccupations() {\r\n        return (\r\n            professionalOccupationsId.map(pot => {\r\n                return (\r\n                    <option key={pot.professionalOccupationId} value={pot.professionalOccupationId}>{pot.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderEducationLevel() {\r\n        return (\r\n            educationsLevelId.map(ed => {\r\n                return (\r\n                    <option key={ed.educationLevelId} value={ed.educationLevelId}>{ed.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientInfo\">\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.name}</p>\r\n                </div>\r\n                <input value={name} required type=\"text\" name=\"name\" id=\"name\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.shortName}</p>\r\n                </div>\r\n                <input value={shortName} required type=\"text\" name=\"shortName\" id=\"shortName\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.birthDate}</p>\r\n                </div>\r\n                <input value={birthDate} required type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                    min={Min} max={Max} title={Labels.onlyLettersTitle} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.fatherName}</p>\r\n                </div>\r\n                <input value={fatherName} required type=\"text\" name=\"fatherName\" id=\"fatherName\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.motherName}</p>\r\n                </div>\r\n                <input value={motherName} required type=\"text\" name=\"motherName\" id=\"motherName\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.taxPayerRegistry}</p>\r\n                </div>\r\n                <InputMask value={taxPayerRegistry} required type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\"\r\n                    mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.genderId}</p>\r\n                </div>\r\n                <select value={genderId} required className=\"clSelect\" name=\"gender\" id=\"gender\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderGenders()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.maritalStatusId}</p>\r\n                </div>\r\n                <select value={maritalStatusId} required className=\"clSelect\" name=\"maritalStatusId\" id=\"maritalStatusId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderMaritalStatus()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.nationality}</p>\r\n                </div>\r\n                <input value={nationality} required type=\"text\" name=\"nationality\" id=\"nationality\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.countryBirthId}</p>\r\n                </div>\r\n                <select required className=\"clSelect\" name=\"countryBirthId\" id=\"countryBirthId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderCountriesBirth()}\r\n                </select>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.stateBirthName}</p>\r\n                </div>\r\n                <select value={stateBirthId} required className=\"clSelect\" name=\"statesBirth\" id=\"statesBirth\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderStates()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.professionalOccupationId}</p>\r\n                </div>\r\n                <select value={professionalOccupationId} required className=\"clSelect\" name=\"professionalOccupationId\" id=\"professionalOccupationId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderProfessionalOccupations()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.educationLevelId}</p>\r\n                </div>\r\n                <select value={educationLevelId} required className=\"clSelect\" name=\"educationLevel\" id=\"educationLevel\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderEducationLevel()}\r\n                </select>\r\n            </div>\r\n\r\n            <LegalRepresentativeProvider>\r\n                <LegalRepresentative />\r\n            </LegalRepresentativeProvider>\r\n\r\n            <SpouseProvider>\r\n                <Spouse hide={maritalStatusId === '2' ? false : true} required={maritalStatusId === '2' ? true : false}>\r\n                    <div className={maritalStatusId === '2' ? \"d-flex-input d-flexdc\" : \"d-none\"}>\r\n                        <div className=\"d-flex\">\r\n                            <p className=\"required\">*</p>\r\n                            <p className=\"inputDescription\">{Labels.maritalAgreementId}</p>\r\n                        </div>\r\n                        <select value={maritalAgreementId} required={maritalStatusId === '2'} className=\"clSelect\" name=\"maritalAgreementId\" id=\"maritalAgreementId\" onChange={e => OnChangeFields(e)}>\r\n                            <option defaultValue value=\"\"></option>\r\n                            {RenderMaritalAgreementId()}\r\n                        </select>\r\n                    </div>\r\n                </Spouse>\r\n            </SpouseProvider>\r\n\r\n            <WorkProvider>\r\n                <Work />\r\n            </WorkProvider>\r\n        </div>\r\n    )\r\n}\r\n","import { createContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    questions:[],\r\n    answers:[]\r\n}\r\n\r\nexport const FormSuityContext = createContext(InitialState);\r\n\r\nexport const FormSuityProvider = (props) => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState([])\r\n\r\n    useEffect(() => {\r\n        GetQuestions()\r\n        GetAnswers()\r\n    }, [])\r\n\r\n    function GetQuestions() {\r\n        axios.get(config._urlQuestions)\r\n            .then(res => { if (res.data) setQuestions(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function GetAnswers() {\r\n        axios.get(config._urlAnswers)\r\n            .then(res => { if (res.data) setAnswers(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <FormSuityContext.Provider\r\n            value={{\r\n                questions, answers\r\n            }}\r\n        >\r\n            {props.children}\r\n        </FormSuityContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { FormSuityContext } from \"../../contexts/FormSuity\";\r\n\r\nimport Select from \"../Select\"\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT, _Json_FormSuity } = useContext(FormContext)\r\n    const { answers, questions } = useContext(FormSuityContext)\r\n\r\n    const Labels = {\r\n        answers: languagePT ? 'Selecionar uma resposta para a pergunta' : '',\r\n        title: languagePT ? 'Questionário' : ''\r\n    }\r\n\r\n    let questionsAnswers = []\r\n\r\n    function OnChange(e) {\r\n        const value = e.target.value\r\n        const suityQuestionId = e.target.getAttribute(\"id\")\r\n        const req = {\r\n            questionId: parseInt(suityQuestionId),\r\n            answerId: parseInt(value)\r\n        }\r\n        questionsAnswers = questionsAnswers.filter(q => q.questionId !== parseInt(suityQuestionId))\r\n        questionsAnswers.push(req)\r\n        _Json_FormSuity(questionsAnswers)\r\n    }\r\n\r\n    function RenderAnswers(QuestionId) {\r\n        const answersFiltered = answers.filter(a => a.suityQuestionId === QuestionId)\r\n        return (\r\n            answersFiltered.map(a => {\r\n                return (\r\n                    <option key={a.suityAnswerId} value={a.suityAnswerId} >{a.answer}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    function RenderQuestions() {\r\n        return (\r\n            questions.map((q, index) => {\r\n                return (\r\n                    <div className=\"div-question-answer\" key={q.suityQuestionId} id={q.suityQuestionId}>\r\n                        <div className=\"d-flex\">\r\n                            <p className=\"required\">*</p>\r\n                            <p className=\"inputDescription\">{q.question}</p>\r\n                        </div>\r\n                        <select className=\"selectpicker\" required name={q.suityQuestionId} id={q.suityQuestionId}\r\n                            onChange={e => OnChange(e)}>\r\n                            <option defaultValue value=\"\">{Labels.answers}</option>\r\n                            {RenderAnswers(q.suityQuestionId)}\r\n                        </select>\r\n\r\n                        {/* <Select title={Labels.answers} required={true} id={index} props={{ suityQuestionId: q.suityQuestionId }}\r\n                            options={answers.filter(a => a.suityQuestionId === q.suityQuestionId).map(a => a)}\r\n                            value=\"suityAnswerId\" label=\"answer\" OnChange={OnChange} /> */}\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"componentTitle\">\r\n                <span>{Labels.title}</span>\r\n                <hr />\r\n            </div>\r\n            {RenderQuestions()}\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nimport Switch from \"react-switch\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport { ValidCPF } from '../../utils'\r\n\r\n\r\nexport default function Attorney() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Dados do procurador' : 'Attorney information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador ?' : 'Do you authorize the transmission of orders by a Attorney?',\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        Adress: languagePT ? 'Endereço' : 'Address',\r\n        birthDate: languagePT ? 'Nascimento' : 'BirthDate',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        actionDescription: languagePT ? 'Descrição dos poderes' : 'Description of powers',\r\n        isPEP: languagePT ? 'O mesmo consta como Pessoa Politicamente Exposta' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person',\r\n    }\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode,\r\n        isAcceptedOrderAttorney, setisAcceptedOrderAttorney, name, taxpayerRegistry,\r\n        isPEP, setisPEP, actionDescription, setactionDescription, setname, settaxpayerRegistry, setbirthDate } = useContext(AttorneyContext)\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'birthDate':\r\n                const birthDate = `${value}T00:00:00`\r\n                console.log(birthDate)\r\n                setbirthDate(birthDate)\r\n                break;\r\n            case 'taxpayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxpayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'actionDescription':\r\n                setactionDescription(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"Attorney-check\">\r\n                <Switch\r\n                    onColor=\"#071223\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#071223\"\r\n                    offHandleColor=\"#F49925\"\r\n                    checked={isAcceptedOrderAttorney}\r\n                    onChange={cheked => setisAcceptedOrderAttorney(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={35}\r\n                    width={70}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n                <p className=\"inputDescription\">{Labels.isAcceptedOrderAttorney}</p>\r\n            </div>\r\n\r\n            <div className={isAcceptedOrderAttorney ? \"attorney-info\" : \"d-none\"}>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">{Labels.name}</p>\r\n                    </div>\r\n                    <input value={name} required={isAcceptedOrderAttorney} type=\"text\" name=\"name\" id=\"name\"\r\n                        pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                </div>\r\n\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">{Labels.taxPayerRegistry}</p>\r\n                    </div>\r\n                    <InputMask value={taxpayerRegistry} required={isAcceptedOrderAttorney} type=\"text\" name=\"taxpayerRegistry\" id=\"taxpayerRegistry\"\r\n                        mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle}\r\n                        onChange={e => OnChangeFields(e)} />\r\n                    <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n                </div>\r\n\r\n                {/* <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">{Labels.taxPayerRegistry}</p>\r\n                    </div>\r\n                    <InputMask value={taxpayerRegistry} required={isAcceptedOrderAttorney} type=\"text\" name=\"taxpayerRegistry\" id=\"taxpayerRegistry\"\r\n                        mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle}\r\n                        onChange={e => OnChangeFields(e)} />\r\n                    <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n                </div> */}\r\n\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">Data de nascimento</p>\r\n                    </div>\r\n                    <input required={isAcceptedOrderAttorney} type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                        min={Min} max={Max} />\r\n                </div>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">{Labels.actionDescription}</p>\r\n                    </div>\r\n                    <input required={isAcceptedOrderAttorney} value={actionDescription} type=\"text\" name=\"actionDescription\" id=\"actionDescription\"\r\n                        pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                </div>\r\n\r\n                <div className=\"Attorney-check\">\r\n                    <Switch\r\n                        onColor=\"#071223\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#071223\"\r\n                        offHandleColor=\"#F49925\"\r\n                        checked={isPEP}\r\n                        onChange={cheked => setisPEP(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={35}\r\n                        width={70}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                    <p className=\"inputDescription\">{Labels.isPEP} ?</p>\r\n                </div>\r\n\r\n                \r\n\r\n\r\n                <div className=\"componentTitle\">\r\n                    <span>Endereço do procurador</span>\r\n                    <hr />\r\n                </div>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">País</p>\r\n                    </div>\r\n                    <Countries onSelectCountry={onSelectCountry} ClientAdress={false} Attorney={true} />\r\n                </div>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">Estado</p>\r\n                    </div>\r\n                    <States onSelectState={onSelectState} ClientAdress={false} Attorney={true} />\r\n                </div>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">Cidade</p>\r\n                    </div>\r\n                    <Cities onSelectCity={onSelectCity} ClientAdress={false} Attorney={true} />\r\n                </div>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">Selecione o tipo do endereço</p>\r\n                    </div>\r\n                    <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={false} Attorney={true} />\r\n                </div>\r\n\r\n\r\n                <AdressUtils ClientAdress={false} Attorney={true}>\r\n                    <div className=\"d-flex-input d-flexdc\">\r\n                        <div className=\"d-flex\">\r\n                            <p className=\"required\">*</p>\r\n                            <p className=\"inputDescription\">CEP</p>\r\n                        </div>\r\n                        <CEP onCollectCep={onCollectCep} ClientAdress={false} Attorney={true} />\r\n                    </div>\r\n                </AdressUtils>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { EmailContext } from '../../contexts/EmailContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function EmailType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { emailTypes, setType, setMail } = useContext(EmailContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar tipo de e-mail' : 'Select Email Type',\r\n        Email: languagePT ? 'Formato aceitado: example@domain.com' : 'Format accepted: example@domain.com'\r\n    }\r\n\r\n    function SelectTypeEmail(e) {\r\n        const { value } = e.target\r\n        setType(value)\r\n    }\r\n    function SetMail(e) {\r\n        const { value } = e.target\r\n        setMail(value)\r\n    }\r\n    function RenderEmailType() {\r\n        return (\r\n            emailTypes.map(em => {\r\n                return (\r\n                    <option key={em.emailTypeId} value={em.emailTypeId}>{em.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            {/* <div className=\"divEmailTypeSelect\"> */}\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">{Labels.Select}</p>\r\n                    </div>\r\n                    <select required\r\n                        name=\"emailType\" id=\"emailType\" onChange={e => SelectTypeEmail(e)}>\r\n                        <option defaultValue value=\"\"></option>\r\n                        {RenderEmailType()}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"required\">*</p>\r\n                        <p className=\"inputDescription\">E-mail</p>\r\n                    </div>\r\n                    <input required type=\"email\" placeholder=\"example@domain.com\"\r\n                        pattern=\"^[\\w._\\-]+@\\w+.com(.br)?\" title={Labels.Email} onChange={e => SetMail(e)} />\r\n                </div>\r\n            {/* </div> */}\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WealthsTypeContext } from '../../contexts/Wealths';\r\n\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nimport './index.css'\r\n\r\nexport default function Wealths(props) {\r\n    const { languagePT, _Json_Wealths } = useContext(FormContext)\r\n\r\n    const { typeWealthId, value, description, settypeWealthId, setvalue, setdescription, typesWealthId } = useContext(WealthsTypeContext)\r\n    const { professionalOccupationId } = useContext(ClientInfoContext)\r\n    const [error, setError] = useState(false)\r\n\r\n    const [clientWealths, setClientWealths] = useState([])\r\n\r\n    const Labels = {\r\n        SelectWealthTypeId: languagePT ? 'Selecione tipo de bens/finanças' : 'Select type of wealth/finances to register',\r\n        inputDescriptionTitle: languagePT ? 'Informações de bens/finanças' : 'Wealths/Finances information for registration',\r\n        description: languagePT ? 'Descrição do bem/finança' : 'Wealths/Finances Description',\r\n        value: languagePT ? 'Valor do bem/finança' : 'Wealths/Finances Value',\r\n        addButtonDescription: languagePT ? 'Adicionar bem ou finança' : 'CLICK TO ADD A WEALTH/FINANCE'\r\n    }\r\n\r\n    let required = professionalOccupationId === \"8\" || professionalOccupationId === \"9\" ||\r\n        professionalOccupationId === \"\" ? false : true\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'wealthTypeId':\r\n                settypeWealthId(value)\r\n                break;\r\n            case 'wealthDescription':\r\n                setdescription(value)\r\n                break;\r\n            case 'wealthValue':\r\n                let valor = value + '';\r\n                valor = parseInt(valor.replace(/[\\D]+/g, ''));\r\n                valor = valor + '';\r\n                valor = valor.replace(/([0-9]{2})$/g, \".$1\");\r\n                setvalue(valor)\r\n                if (valor == 'NaN') setvalue('') \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderWealthTypes() {\r\n        return (\r\n            typesWealthId.map(tw => {\r\n                return (\r\n                    <option key={tw.wealthTypeId} value={tw.wealthTypeId}>{tw.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderClientWealths() {\r\n        return (\r\n            clientWealths.map((cw, index) => {\r\n                return (\r\n                    <div className=\"wealth\" key={`${cw.description}${index}`}>\r\n                        <div className=\"wealth-spans\">\r\n                            <span>Descrição: {cw.description}</span>\r\n                            <span>Valor: {cw.value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\")}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeClientWealth(index)}>\r\n                            Apagar bem/finança\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addClientWealth() {\r\n        if (!typeWealthId || !description || !value) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            console.log(parseFloat(value))\r\n            console.log(typeof parseFloat(value))\r\n            let wealth = {\r\n                typeWealthId: parseInt(typeWealthId),\r\n                value: parseFloat(value),\r\n                description: description\r\n            }\r\n            setClientWealths([...clientWealths, wealth])\r\n            setdescription('')\r\n            setvalue('')\r\n        }\r\n    }\r\n    function removeClientWealth(i) {\r\n        setClientWealths(clientWealths.filter((c, index) => index !== i))\r\n    }\r\n\r\n    useEffect(() => {\r\n        required = professionalOccupationId === \"8\" || professionalOccupationId === \"9\" ||\r\n        professionalOccupationId === \"\" ? false : true\r\n        if(!required) _Json_Wealths([])\r\n    }, [professionalOccupationId])\r\n    useEffect(() => {\r\n        _Json_Wealths(clientWealths)\r\n    }, [clientWealths])\r\n\r\n    return (\r\n        <div className={required ? \"divWealthTypes\" : \"d-none\"}>\r\n            <div className=\"componentTitle\">\r\n                <span>{Labels.inputDescriptionTitle}</span>\r\n                <hr />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.SelectWealthTypeId}</p>\r\n                </div>\r\n                <select required={required && clientWealths.length === 0} name=\"wealthTypeId\" id=\"wealthTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderWealthTypes()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.description}</p>\r\n                </div>\r\n                <input required={required && clientWealths.length === 0} value={description} type=\"text\" \r\n                name=\"wealthDescription\" id=\"wealthDescription\"\r\n                    onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.value}</p>\r\n                </div>\r\n                <input type=\"text\" value={value} required={required && clientWealths.length === 0} name=\"wealthValue\" id=\"wealthValue\"\r\n                    placeholder=\"$0\" onChange={e => OnChangeField(e)} />\r\n            </div>\r\n\r\n\r\n            <div className=\"wealths\">\r\n                {RenderClientWealths()}\r\n            </div>\r\n\r\n            <div className=\"addButton\">\r\n                <button type=\"button\" onClick={() => addClientWealth()}>\r\n                    {Labels.addButtonDescription}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>Selecione um item de cada lista e preencha os campos</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { PhonesContext } from \"../../contexts/PhonesContexts\";\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\n\r\nimport { EmailProvider } from '../../contexts/EmailContexts';\r\nimport EmailType from '../Email'\r\n\r\nimport './index.css'\r\n\r\nexport default function PhoneType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { phoneTypes, setPhoneTypeId, phoneTypeId, setCountryCode, setNumber, setStateCode } = useContext(PhonesContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecione o tipo de telefone' : 'Select Phone Type',\r\n        SelectError: languagePT ? 'Erro ao consultar Tipos de Telefone' : 'Error querying Phone Type',\r\n        Celnumber: languagePT ? 'Formato exigido: +DDI (DDD) 9XXXX-XXXX' : '',\r\n        Resnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : '',\r\n        Comnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : ''\r\n    }\r\n\r\n    function SelectTypePhone(e) {\r\n        const { value } = e.target\r\n        setPhoneTypeId(value)\r\n    }\r\n\r\n    function SetPhoneNumber(e) {\r\n        const { value } = e.target\r\n        if (value.length >= 18) {\r\n            const CountryCode = value.split(\" \")[0].replace(\"+\", \"\")\r\n            const StateCode = value.split(\" \")[1].replace(\"(\", \"\").replace(\")\", \"\")\r\n            const _Number = value.split(\" \")[2].replace(\"-\", \"\")\r\n            setCountryCode(CountryCode)\r\n            setStateCode(StateCode)\r\n            setNumber(_Number)\r\n        }\r\n    }\r\n\r\n    function RenderPhoneType() {\r\n        return (\r\n            phoneTypes.map(ph => {\r\n                return (\r\n                    <option key={ph.phoneTypeId} value={ph.phoneTypeId}>{ph.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divPhoneTypeSelect\">\r\n\r\n            <div className=\"d-flex-input d-flexdc\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">{Labels.Select}</p>\r\n                </div>\r\n                <select required\r\n                    name=\"phoneType\" id=\"phoneType\" onChange={e => SelectTypePhone(e)}>\r\n                    <option defaultValue value=\"\"></option>\r\n                    {RenderPhoneType()}\r\n                </select>\r\n            </div>\r\n\r\n            <div className={phoneTypeId === '1' ? 'd-flex-input d-flexdc' : 'd-none'}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">Telefone</p>\r\n                </div>\r\n                <InputMask name=\"ResidencialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '1'} maskChar=\"\" title={Labels.Resnumber}\r\n                    mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\" />\r\n            </div>\r\n\r\n            <div className={phoneTypeId === '2' ? 'd-flex-input d-flexdc' : 'd-none'}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">Telefone</p>\r\n                </div>\r\n                <InputMask name=\"ComercialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '2'} maskChar=\"\" title={Labels.Comnumber}\r\n                    className={phoneTypeId === '2' ? '' : 'd-none'} mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\" />\r\n            </div>\r\n\r\n            <div className={phoneTypeId === '3' ? 'd-flex-input d-flexdc' : 'd-none'}>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"required\">*</p>\r\n                    <p className=\"inputDescription\">Telefone</p>\r\n                </div>\r\n                <InputMask name=\"CelNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '3'} maskChar=\"\" title={Labels.Celnumber}\r\n                    className={phoneTypeId === '3' ? '' : 'd-none'} mask=\"+99 (99) 99999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{5}[-]\\d{4}\" />\r\n            </div>\r\n\r\n\r\n            <EmailProvider>\r\n                <EmailType />\r\n            </EmailProvider>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/header.6afa50c1.png\";","import React from 'react';\r\nimport imgHeader from '../../assets/header.png'\r\n\r\nimport './index.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <div className=\"header-image\">\r\n                <a href=\"https://flow2pay.com.br/\">\r\n                    <img src={imgHeader} alt=\"FLOW2PAY-Logo-Padrao.png\" loading=\"lazy\" />\r\n                </a>\r\n            </div>\r\n\r\n            <div className=\"div-empty\">\r\n                <ul>\r\n                    <li>\r\n                        <a href=\"https://flow2pay.com.br/#quemsomos\">\r\n                            <span>Quem somos</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"https://flow2pay.com.br/#servico1\">\r\n                            <span>Serviços</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"\">\r\n                            <span>Cadastre-se</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"https://flow2pay.com.br/en\">\r\n                            <span>EN-US</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/footer.4c88b87b.png\";","import React from 'react';\r\nimport imgFooter from '../../assets/footer.png'\r\n\r\nimport './index.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer\">\r\n                <div className=\"footer-img\">\r\n                    <div className=\"div-footer-img\">\r\n                        <img src={imgFooter} alt=\"footer.png\" />\r\n                        <span>contato@flow2pay.com.br</span>\r\n                        <span>Av. Brigadeiro Faria Lima, 1811 – Conj. 918 a 922 – Jardins São Paulo – SP, 01452-001</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"footer-vantagens\">\r\n                    <div className=\"div-vantagens\">\r\n                        <a className=\"footer-title\" href=\"https://flow2pay.com.br/#Vantagens\">Vantagens</a>\r\n                        <span>Atendimento</span>\r\n                        <span>Taxa</span>\r\n                        <span>Liquidações</span>\r\n                        <span>Cadastramento</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"footer-servicos\">\r\n                    <div className=\"div-servicos\">\r\n                        <a className=\"footer-title\" href=\"https://flow2pay.com.br/#servico1\">Serviços</a>\r\n                        <span>Remessas internacionais</span>\r\n                        <span>Pagamentos internacionais (+ de 180 países)</span>\r\n                        <span>Importação e Exportação</span>\r\n                        <span>Investimentos e compra de imóveis no exterior</span>\r\n                        <span>Assessoria para abertura de Empresa e conta corrente nos EUA</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"footer-links\">\r\n                    <div className=\"div-links\">\r\n                        <h3 className=\"footer-title\">Links</h3>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"https://flow2pay.com.br/#quemsomos\">\r\n                                    <span>Quem somos</span>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://flow2pay.com.br/#servico1\">\r\n                                    <span>Serviços</span>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://flow2pay.com.br/en\">\r\n                                    <span>EN-US</span>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://flow2pay.com.br/politica-de-privacidade/\">\r\n                                    <span>Política de privacidade</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer-end\">Flow2pay® 2021 - Todos os direitos reservados</div>\r\n        </footer>\r\n\r\n    );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/cadastro.a995af3c.jpeg\";","import React from 'react';\r\nimport imgCadastro from '../../assets/cadastro.jpeg'\r\n\r\nimport './index.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <>\r\n            <div className=\"div-body\">\r\n\r\n                <div className=\"div-body-txt\">\r\n                    <h1>Cadastro online.</h1>\r\n                    <span>\r\n                        Cadastramento de pessoa física 100% online, com\r\n                        abertura de conta corrente junto a nossos bancos\r\n                        parceiros em até 24h.\r\n                </span>\r\n                </div>\r\n\r\n                <div className=\"div-body-img\">\r\n                    <img src={imgCadastro} alt=\"cadastro.jpeg\" />\r\n                </div>\r\n            </div>\r\n            <span className=\"div-body-info-title\">Precisamos de algumas informações</span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useContext } from 'react';\r\nimport Switch from 'react-switch';\r\n\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\nimport { FormContext } from '../../contexts/FormContexts';\r\n\r\nimport './index.css'\r\n\r\n\r\nfunction AdditionalInformations() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const {\r\n        // States\r\n        residenceInOtherCountryId, otherTaxResidenceCountryId, ppeOccupation,\r\n        usPerson, isAssociatedPerson, isAdministratorInAnotherAccount, residencesInOtherCountryId, otherTaxResidencesCountryId,\r\n        // Sets\r\n        setusPerson, setisAssociatedPerson, setisAdministratorInAnotherAccount, setresidenceInOtherCountryId,\r\n        setotherTaxResidenceCountryId, setppeOccupation\r\n    } = useContext(ClientInfoContext)\r\n\r\n    const Labels = {\r\n        residenceInOtherCountryId: languagePT ? 'Possui residência em outro país?' : 'Residence in Other Country',\r\n        otherTaxResidenceCountryId: languagePT ? 'País se possui domicílio fiscal além do declarado' : 'Other Tax Residence Country',\r\n        residenceInOtherCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        otherTaxResidenceCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        educationLevelId: languagePT ? 'Escolaridade' : 'Education Level',\r\n        ppeOccupation: languagePT ? 'Cargo PPE do cliente, se o mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n        usPerson: languagePT ? 'Cliente considerado como USPerson ?' : 'Considered as USPerson',\r\n        isAssociatedPerson: languagePT ? 'Pessoa Vinculada' : 'Associated Person',\r\n        isAdministratorInAnotherAccount: languagePT ? 'Cliente realiza operações por conta de terceiros' : 'Customer performs operations on behalf of third parties',\r\n        urlCallback: languagePT ? '' : '',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador' : 'Authorizes the transmission of orders by proxy',\r\n    }\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'residenceInOtherCountryId':\r\n                setresidenceInOtherCountryId(value)\r\n                break;\r\n            case 'otherTaxResidenceCountryId':\r\n                setotherTaxResidenceCountryId(value)\r\n                break;\r\n            case 'ppeOccupation':\r\n                setppeOccupation(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    function RenderResidencesInOtherCountry() {\r\n        return (\r\n            residencesInOtherCountryId.map(roc => {\r\n                return (\r\n                    <option key={roc.countryId} value={roc.countryId}>{roc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderOtherTaxResidencesCountry() {\r\n        return (\r\n            otherTaxResidencesCountryId.map(otrc => {\r\n                return (\r\n                    <option key={otrc.countryId} value={otrc.countryId}>{otrc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"componentTitle\">\r\n                <span>Informações adicionais</span>\r\n                <hr />\r\n            </div>\r\n\r\n            <div className=\"AdditionalInformations-info\">\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"inputDescription\">{Labels.residenceInOtherCountryId}</p>\r\n                    </div>\r\n                    <select value={residenceInOtherCountryId} className=\"clSelect\" name=\"residenceInOtherCountryId\" id=\"residenceInOtherCountryId\" onChange={e => OnChangeFields(e)}>\r\n                        <option defaultValue value=\"\">{Labels.residenceInOtherCountryIdSelect}</option>\r\n                        {RenderResidencesInOtherCountry()}\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"inputDescription\">{Labels.otherTaxResidenceCountryId}</p>\r\n                    </div>\r\n                    <select value={otherTaxResidenceCountryId} className=\"clSelect\" name=\"otherTaxResidenceCountryId\" id=\"otherTaxResidenceCountryId\" onChange={e => OnChangeFields(e)}>\r\n                        <option defaultValue value=\"\">{Labels.otherTaxResidenceCountryIdSelect}</option>\r\n                        {RenderOtherTaxResidencesCountry()}\r\n                    </select>\r\n                </div>\r\n\r\n\r\n                <div className=\"d-flex-input d-flexdc\">\r\n                    <div className=\"d-flex\">\r\n                        <p className=\"inputDescription\">{Labels.ppeOccupation}</p>\r\n                    </div>\r\n                    <input value={ppeOccupation} type=\"text\" name=\"ppeOccupation\" id=\"ppeOccupation\"\r\n                        pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"AdditionalInformations\">\r\n                <Switch\r\n                    onColor=\"#071223\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#071223\"\r\n                    offHandleColor=\"#F49925\"\r\n                    checked={usPerson}\r\n                    onChange={cheked => setusPerson(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={35}\r\n                    width={70}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n                <p className=\"inputDescription\">{Labels.usPerson}</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"AdditionalInformations\">\r\n                <Switch\r\n                    onColor=\"#071223\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#071223\"\r\n                    offHandleColor=\"#F49925\"\r\n                    checked={isAssociatedPerson}\r\n                    onChange={cheked => setisAssociatedPerson(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={35}\r\n                    width={70}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n                <p className=\"inputDescription\">{Labels.isAssociatedPerson} ?</p>\r\n            </div>\r\n\r\n            <div className=\"AdditionalInformations\">\r\n                <Switch\r\n                    onColor=\"#071223\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#071223\"\r\n                    offHandleColor=\"#F49925\"\r\n                    checked={isAdministratorInAnotherAccount}\r\n                    onChange={cheked => setisAdministratorInAnotherAccount(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={35}\r\n                    width={70}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n                <p className=\"inputDescription\">{Labels.isAdministratorInAnotherAccount} ?</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AdditionalInformations","import { useContext, useEffect } from 'react';\r\n\r\nimport { IdentificationTypeProvider } from './contexts/IdentificationTypeContexts';\r\nimport { FormContext } from './contexts/FormContexts';\r\nimport { AttorneyProvider } from './contexts/AttorneyContexts';\r\nimport { AdressesProvider } from './contexts/AdressesContexts'\r\nimport { BankAccountsProvider } from './contexts/BankContexts'\r\nimport { PhonesProvider } from './contexts/PhonesContexts';\r\nimport { EmailProvider } from './contexts/EmailContexts';\r\nimport { WealthsTypeProvider } from './contexts/Wealths';\r\nimport { WorkProvider } from './contexts/Work';\r\n\r\n\r\n\r\nimport IdentificationType from './components/IdentificationType';\r\nimport ClientAdress from './components/ClientAdress'\r\nimport BankAccounts from './components/BankAccounts';\r\nimport PPERelateds from './components/PPE Related';\r\nimport ClientInfo from './components/ClientInfo';\r\nimport FormSuity from './components/FormSuity';\r\nimport Attorney from './components/Attorney';\r\nimport EmailType from './components/Email';\r\nimport Wealths from './components/Wealths';\r\nimport Phones from './components/Phones';\r\nimport Work from './components/Work';\r\n\r\nimport './Global.css';\r\nimport { FormSuityProvider } from './contexts/FormSuity';\r\nimport { PPERelatedsProvider } from './contexts/PPERelatedsContext';\r\n\r\n\r\nimport Header from './template/header'\r\nimport Footer from './template/footer'\r\nimport Body from './template/body'\r\nimport AdditionalInformations from './components/AdditionalInformations';\r\n\r\nfunction App() {\r\n    const { saveClient, languagePT, Clicked, SaveClientWarn } = useContext(FormContext)\r\n    const Labels = {\r\n        HeaderTitle: languagePT ? \"Cadastro de Cliente\" : \"Customer registration\",\r\n        BackToSite: languagePT ? \"Voltar ao Site\" : \"Back to site\",\r\n        ButtonSave: languagePT ? \"Solicitar Cadastro\" : \"Save\"\r\n    }\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault()\r\n        saveClient()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Body />\r\n\r\n            <form onSubmit={e => onSubmit(e)} action=\"\" method=\"\" autoComplete=\"off\" id=\"form\">\r\n                <div className=\"div-infos\">\r\n\r\n                    <div className=\"div-client-info\">\r\n                        <ClientInfo />\r\n                    </div>\r\n\r\n                    <div className=\"div-identification-type\">\r\n                        <IdentificationTypeProvider>\r\n                            <IdentificationType />\r\n                        </IdentificationTypeProvider>\r\n                    </div>\r\n\r\n                    <div className=\"div-contact-adress\">\r\n                        <AdressesProvider>\r\n                            <ClientAdress />\r\n                        </AdressesProvider>\r\n\r\n                        <PhonesProvider>\r\n                            <Phones />\r\n                        </PhonesProvider>\r\n                    </div>\r\n\r\n                    <div className=\"div-bank-accounts\">\r\n                        <BankAccountsProvider>\r\n                            <BankAccounts />\r\n                        </BankAccountsProvider>\r\n                    </div>\r\n\r\n                    <div className=\"div-wealths-types\">\r\n                        <WealthsTypeProvider>\r\n                            <Wealths />\r\n                        </WealthsTypeProvider>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"div-formsuity\">\r\n                        <FormSuityProvider>\r\n                            <FormSuity />\r\n                        </FormSuityProvider>\r\n                    </div>\r\n\r\n                    <div className=\"div-additional-information\">\r\n                        <AdditionalInformations/>\r\n\r\n                        <PPERelatedsProvider>\r\n                            <PPERelateds />\r\n                        </PPERelatedsProvider>\r\n\r\n                        <AttorneyProvider>\r\n                            <Attorney />\r\n                        </AttorneyProvider>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"div-footer\">\r\n                    <button type=\"submit\" disabled={Clicked} className={Clicked ? \"buttonDisable\" : \"\"}>\r\n                        <i className={Clicked ? \"fa fa-spinner fa-spin\" : \"d-none\"} /> {Clicked ? \"Aguarde\" : Labels.ButtonSave}\r\n                    </button>\r\n                    <span className={Clicked ? \"\" : \"d-none\"}>{SaveClientWarn}<br/>Não saia da pagina!</span>\r\n                </div>\r\n            </form>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { FormProvider } from './contexts/FormContexts';\nimport { ClientInfoProvider } from './contexts/ClientInfoContexts';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Form from './form'\n\nimport './Global.css';\n\nfunction App() {\n  return (\n    <FormProvider>\n      <ClientInfoProvider>\n        <ToastContainer\n          position=\"top-right\" autoClose={2500}\n          hideProgressBar={false} newestOnTop={false}\n          closeOnClick rtl={false} pauseOnHover={false}\n          pauseOnVisibilityChange draggable\n          pauseOnFocusLoss={false}\n        />\n        <Form />\n      </ClientInfoProvider>\n    </FormProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}