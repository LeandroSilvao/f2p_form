{"version":3,"sources":["config.js","components/Toastify/index.jsx","components/Toastify/Toastify.js","contexts/FormContexts.jsx","contexts/ClientInfoContexts.jsx","contexts/IdentificationTypeContexts.jsx","contexts/AttorneyContexts.jsx","contexts/AdressesContexts.jsx","contexts/BankContexts.jsx","contexts/PhonesContexts.jsx","contexts/EmailContexts.jsx","contexts/Wealths.jsx","contexts/Work.jsx","components/IdentificationType/index.jsx","components/Countries/index.jsx","components/State/index.jsx","components/City/index.jsx","components/AdressType/index.jsx","components/Cep/index.jsx","components/AdressUtils/index.jsx","components/ClientAdress/index.jsx","components/BankAccounts/index.jsx","contexts/PPERelatedsContext.jsx","utils.js","components/PPE Related/index.jsx","contexts/Spouse.jsx","components/Spouse/index.jsx","contexts/LegalRepresentativeContexts.jsx","components/LegalRepresentative/index.jsx","components/ClientInfo/index.jsx","contexts/FormSuity.jsx","components/Select/index.jsx","components/FormSuity/index.jsx","components/Attorney/index.jsx","components/Email/index.jsx","components/Wealths/index.jsx","components/Phones/index.jsx","components/Work/index.jsx","assets/header.png","template/header/index.jsx","form.js","App.js","index.js"],"names":["proxy","config","_urlCountries","_urlStates","_urlCities","_urlAdressType","_urlPhoneType","_urlGenders","_urlMaritalStatus","_urlMaritalAgreement","_urlProfessionalOccupation","_urlEducation","_urlEmailType","_urlIdentificationType","_urlWealthType","_urlRelationshipType","_urlBankAccountType","_urlBankGetByCode","_urlBankGetById","_urlBank","_urlQuestions","_urlAnswers","_urlSaveClient","_urlGetPluralAccount","Toastify","className","this","props","description","Component","Error","id","text","autoClose","draggable","icon","toast","isActive","error","toastId","Warn","warn","InitialState","languagePT","Clicked","_Json_ClientAddresses","obj","_Json_ClientInfo","_Json_AttorneyInfo","_Json_PhoneInfo","_Json_EmailInfo","_Json_ClientIdentification","_Json_Spouse","_Json_Work","_Json_Wealths","_Json_FormSuity","_Json_BankAccounts","_Json_LegalRepresentative","_Json_PPERelateds","saveClient","reqJSON","clientId","name","shortName","taxPayerRegistry","birthDate","fatherName","genderId","maritalStatusId","maritalAgreementId","motherName","nationality","countryBirthId","stateBirthId","stateBirthName","professionalOccupationId","residenceInOtherCountryId","otherTaxResidenceCountryId","educationLevelId","ppeOccupation","usPerson","isAssociatedPerson","urlCallback","isAcceptedOrderAttorney","isAdministratorInAnotherAccount","attorneys","spouse","document","work","phones","emails","bankAccounts","wealths","addresses","ppeRelateds","formSuity","legalRepresentatives","authentication","login","password","FormContext","createContext","FormProvider","useState","setLanguagePT","setClicked","useEffect","window","location","pathname","split","filter","i","length","Provider","value","required","console","log","JSON","stringify","axios","post","then","res","data","clientCode","interval","setInterval","get","clearInterval","SuccessMessage","success","Success","catch","err","response","innerMessage","request","message","CheckClient","code","includes","children","String","setname","setshortName","settaxPayerRegistry","setbirthDate","age","Number","setAge","setfatherName","setgenderId","gendersIds","setmaritalStatusId","maritalStatus","maritalAgreements","setmotherName","getCountriesBirthId","setppeOccupation","setusPerson","setisAssociatedPerson","setisAdministratorInAnotherAccount","ClientInfoContext","ClientInfoProvider","useContext","setnationality","setgendersIds","setMaritalStatus","setmaritalAgreementId","setmaritalAgreements","setcountryBirthId","countriesBirthId","setcountriesBirthId","setstateBirthId","setstateBirthName","statesBirth","setstatesBirth","setprofessionalOccupationId","professionalOccupationsId","setprofessionalOccupationsId","setresidenceInOtherCountryId","residencesInOtherCountryId","setresidencesInOtherCountryId","setotherTaxResidenceCountryId","otherTaxResidencesCountryId","setotherTaxResidencesCountryId","seteducationLevelId","educationsLevelId","seteducationsLevelId","replace","parseInt","identificationTypeId","number","emissionInssuer","emission","stateId","identificationTypes","setidentificationTypeId","setnumber","setemissionInssuer","setemission","setstateId","IdentificationTypeContext","IdentificationTypeProvider","setIdentificationTypes","states","setStates","cpf","taxpayerRegistry","settaxpayerRegistry","isPEP","setisPEP","actionDescription","setactionDescription","countryId","setCountryId","setStateId","stateName","setStateName","cityId","setCityId","cityName","setCityName","neighborhood","setneighborhood","setdescription","zipCode","setZipCode","complement","setcomplement","typeAddressId","setTypeAddressId","AttorneyContext","AttorneyProvider","setisAcceptedOrderAttorney","address","setNeighborhood","setDescription","zipcode","setNumber","setComplement","AdressesContext","AdressesProvider","AdressJson","bankId","agency","account","digit","typeAccountId","bankAccountTypes","banks","setbankId","setagency","setaccount","setdigit","settypeAccountId","BankAccountsContext","BankAccountsProvider","setBankAccountTypes","setBanks","newBanks","map","bank","push","GetBanks","phoneTypes","phoneTypeId","countryCode","stateCode","setPhoneTypeId","setCountryCode","setStateCode","PhonesContext","PhonesProvider","setPhoneTypes","type","mail","isCorrespondency","emailTypes","setMail","setType","setIsCorrespondency","EmailContext","EmailProvider","setEmailTypes","typeWealthId","typesWealthId","settypeWealthId","setvalue","WealthsTypeContext","WealthsTypeProvider","settypesWealthId","institutionName","occupation","profession","corporateTaxpayerRegistry","setinstitutionName","setoccupation","setprofession","setcorporateTaxpayerRegistry","setIsRequired","WorkContext","WorkProvider","isRequired","IdentificationType","Labels","componentTitle","Select","States","documentNumber","Max","Date","toISOString","Min","OnChangeField","e","target","onChange","defaultValue","idt","identifycationTypeId","placeholder","s","statename","min","max","Countries","countries","setCountries","Atctx","Attorney","ClientAdress","onSelectCountry","c","Adctx","SelectError","getStates","_countryId","onSelectState","Cities","cities","setCities","getCities","_stateId","onSelectCity","cityname","AdressType","adressType","setAdressType","onSelectTypeAddress","adt","addressTypeId","CEP","setError","CollectCep","maxLength","Cep","onCollectCep","test","ValidateCEP","AdressUtils","setInput","Adresses","selectedIndex","options","getAttribute","cep","BankAccounts","clientBankAccounts","setclientBankAccounts","selectItems","SelecttypeAccountId","SelectbankId","addAccount","bat","bankAccountTypeId","SelectSearch","search","filterOptions","fuse","Fuse","keys","threshold","array","item","emptyMessage","printOptions","closeOnSelect","index","find","b","toString","onClick","addBankAccount","PPERelatedsContext","PPERelatedsProvider","reqJson","ValidCPF","Soma","Resto","substring","PPERelateds","errorCpf","setErrorCpf","PPERelated","setPPERelated","cpfTitle","onlyLettersTitle","onColor","onHandleColor","offColor","offHandleColor","checked","cheked","handleDiameter","boxShadow","activeBoxShadow","height","width","pattern","title","mask","onlyLettersAndNumbersTitle","setHide","SpouseContext","SpouseProvider","spouseId","hide","Spouse","emissionDoc","relationshipTypeId","relationshipTypesId","setRelationshipTypeId","LegalRepresentativeContext","LegalRepresentativeProvider","setRelationshipTypesId","errorOnApi","Work","legalRepresentativeName","legalRepresentativeTaxpayerRegistry","reltid","ClientInfo","dateInvalid","residenceInOtherCountryIdSelect","otherTaxResidenceCountryIdSelect","OnChangeFields","d","ano_atual","getFullYear","mes_atual","getMonth","dia_atual","getDate","ano_aniversario","mes_aniversario","dia_aniversario","Qtd_Anos","stateNameBirth","g","m","pot","ed","roc","otrc","questions","answers","FormSuityContext","FormSuityProvider","setQuestions","setAnswers","optionsToggle","setOptionsToggle","setOptions","selectValueLabel","setSelectValueLabel","onBlur","relatedTarget","Blur","tabIndex","kind","opt","label","OnChange","setValue","questionsAnswers","req","questionId","suityQuestionId","answerId","q","question","a","EmailType","Email","SelectTypeEmail","em","emailTypeId","SetMail","Wealths","clientWealths","setClientWealths","SelectWealthTypeId","inputDescriptionTitle","addButtonDescription","valor","tw","wealthTypeId","cw","parseFloat","wealth","addClientWealth","PhoneType","Celnumber","Resnumber","Comnumber","SetPhoneNumber","CountryCode","StateCode","_Number","SelectTypePhone","ph","maskChar","errorCNPJ","setErrorCNPJ","cnpjTitle","cnpj","tamanho","numeros","digitos","soma","pos","charAt","resultado","validarCNPJ","Header","href","src","imgHeader","alt","loading","App","HeaderTitle","BackToSite","ButtonSave","onSubmit","preventDefault","action","method","autoComplete","disabled","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnHover","pauseOnVisibilityChange","pauseOnFocusLoss","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.21958c96.chunk.js","sourcesContent":["// const proxy = \"http://localhost:2525/\"\r\nconst proxy = \"https://proxy-cors.vercel.app/\"\r\n\r\nconst config = {\r\n    _urlCountries: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Country`,\r\n    _urlStates: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/State/GetByCountryId/`,\r\n    _urlCities: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/City/GetByStateId/`,\r\n    _urlAdressType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/AddressType`,\r\n    _urlPhoneType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/PhoneType`,\r\n    _urlGenders: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Gender`,\r\n    _urlMaritalStatus: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/MaritalStatus`,\r\n    _urlMaritalAgreement: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/MaritalAgreement`,\r\n    _urlProfessionalOccupation: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/ProfessionalOccupation`,\r\n    _urlEducation: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Education`,\r\n    _urlEmailType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/EmailType`,\r\n    _urlIdentificationType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/IdentificationType`,\r\n    _urlWealthType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/WealthType`,\r\n    _urlRelationshipType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/RelationshipType`,\r\n    _urlBankAccountType: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/BankAccountType`,\r\n    _urlBankGetByCode: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Bank/GetByCode/`,\r\n    _urlBankGetById: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Bank/GetById/`,\r\n    _urlBank: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Bank`,\r\n    _urlQuestions: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Suity/Questions`,\r\n    _urlAnswers: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/Suity/Answers`,\r\n    _urlSaveClient: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/Save`,\r\n    _urlGetPluralAccount: `${proxy}bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/GetPluralAccount/`\r\n}\r\n\r\nexport default config","/* eslint-disable no-empty */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Toastify extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex df-jcspb\">\r\n                <div className=\"toastify-icon\">\r\n                    <i className={this.props.className} />\r\n                </div>\r\n                <span> {this.props.description}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport Toastify from \"./index\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction Success(id,text,autoClose=2500,draggable = true,icon = 'fas fa-check'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.success(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable  }\r\n          );\r\n    }\r\n}\r\nfunction Error(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-triangle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.error(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\nfunction Warn(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-circle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.warn(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\n\r\nexport { Success, Error, Warn }","import { createContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\n\r\nimport { Error, Success, Warn } from '../components/Toastify/Toastify'\r\n\r\nconst InitialState = {\r\n  languagePT: true,\r\n  Clicked: false,\r\n  _Json_ClientAddresses: (obj) => { },\r\n  _Json_ClientInfo: (obj) => { },\r\n  _Json_AttorneyInfo: (obj) => { },\r\n  _Json_PhoneInfo: (obj) => { },\r\n  _Json_EmailInfo: (obj) => { },\r\n  _Json_ClientIdentification: (obj) => { },\r\n  _Json_Spouse: (obj) => { },\r\n  _Json_Work: (obj) => { },\r\n  _Json_Wealths: (obj) => { },\r\n  _Json_FormSuity: (obj) => { },\r\n  _Json_BankAccounts: (obj) => { },\r\n  _Json_LegalRepresentative: (obj) => { },\r\n  _Json_PPERelateds: (obj) => { },\r\n  saveClient: () => { }\r\n}\r\n\r\nlet reqJSON = {\r\n  clientId: 0,\r\n  name: '',\r\n  shortName: '',\r\n  taxPayerRegistry: '',\r\n  birthDate: '',\r\n  fatherName: '',\r\n  genderId: 0,\r\n  maritalStatusId: 0,\r\n  maritalAgreementId: 0,\r\n  motherName: '',\r\n  nationality: '',\r\n  countryBirthId: 0,\r\n  stateBirthId: 0,\r\n  stateBirthName: '',\r\n  professionalOccupationId: 0,\r\n  residenceInOtherCountryId: 0,\r\n  otherTaxResidenceCountryId: 0,\r\n  educationLevelId: 0,\r\n  ppeOccupation: '',\r\n  usPerson: false,\r\n  isAssociatedPerson: false,\r\n  urlCallback: '',\r\n  isAcceptedOrderAttorney: false,\r\n  isAdministratorInAnotherAccount: false,\r\n  attorneys: [],\r\n  spouse: {},\r\n  document: {},\r\n  work: {},\r\n  phones: [],\r\n  emails: [],\r\n  bankAccounts: [],\r\n  wealths: [],\r\n  addresses: [],\r\n  ppeRelateds: [],\r\n  formSuity: [],\r\n  legalRepresentatives: [],\r\n  authentication: {\r\n    login: 'APITEST',\r\n    password: 'APITEST'\r\n  }\r\n}\r\n\r\nexport const FormContext = createContext(InitialState);\r\n\r\nexport const FormProvider = (props) => {\r\n  const [languagePT, setLanguagePT] = useState(true)\r\n  const [Clicked, setClicked] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const url = window.location.pathname.split(\"/\")\r\n    const enUS = url.filter(i => i === 'en')\r\n    if (enUS.length > 0) setLanguagePT(false)\r\n    else setLanguagePT(true)\r\n  }, [])\r\n\r\n  function _Json_ClientAddresses(obj) {\r\n    reqJSON.addresses = [obj]\r\n  }\r\n  function _Json_ClientInfo(obj) {\r\n    reqJSON = { ...reqJSON, ...obj }\r\n  }\r\n  function _Json_AttorneyInfo(obj) {\r\n    reqJSON.attorneys = obj\r\n  }\r\n  function _Json_PhoneInfo(obj) {\r\n    reqJSON.phones = [obj]\r\n  }\r\n  function _Json_EmailInfo(obj) {\r\n    reqJSON.emails = [obj]\r\n  }\r\n  function _Json_ClientIdentification(obj) {\r\n    reqJSON.document = obj\r\n  }\r\n  function _Json_Spouse(obj) {\r\n    reqJSON.spouse = obj\r\n  }\r\n  function _Json_Work(obj) {\r\n    reqJSON.work = obj\r\n  }\r\n  function _Json_Wealths(obj) {\r\n    reqJSON.wealths = obj\r\n  }\r\n  function _Json_FormSuity(obj) {\r\n    reqJSON.formSuity = obj\r\n  }\r\n  function _Json_PPERelateds(obj) {\r\n    reqJSON.ppeRelateds = obj\r\n  }\r\n  function _Json_BankAccounts(obj) {\r\n    reqJSON.bankAccounts = obj\r\n  }\r\n  function _Json_LegalRepresentative(obj) {\r\n    reqJSON.legalRepresentatives = obj\r\n  }\r\n  function saveClient() {\r\n    const required = reqJSON.professionalOccupationId === 8 || reqJSON.professionalOccupationId === 9 ? false : true\r\n    if (reqJSON.bankAccounts.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione uma conta bancaria' : 'Add a bank account'\r\n      Warn(\r\n        \"Addbankaccount\",\r\n        ErrorMessage,\r\n        10000,\r\n        false\r\n      );\r\n    }\r\n    else if (required && reqJSON.wealths.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione um bem/finança' : 'Add a wealth / finance'\r\n      Warn(\r\n        \"Addwealth/finance\",\r\n        ErrorMessage,\r\n        10000,\r\n        false\r\n      );\r\n    }\r\n    else {\r\n      setClicked(true)\r\n      console.log(JSON.stringify(reqJSON))\r\n      axios.post(config._urlSaveClient, reqJSON)\r\n        .then(res => {\r\n          if (res.data) {\r\n            CheckClient(res.data.code)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          setClicked(false)\r\n          if (err.response) {\r\n            // Request made and server responded\r\n            // equired in minor age. Client.BirthDate: 22/04/2021. Age: 0\r\n            let err_message\r\n            const { innerMessage, message } = err.response.data\r\n            if (innerMessage) {\r\n              if (innerMessage.includes(\"spouse has a same Taxpayer as client\")) err_message = \"Cônjuge tem o mesmo cpf que o cliente\"\r\n              else err_message = innerMessage\r\n                Error(\r\n                  \"SaveClient\",\r\n                  err_message,\r\n                  20000,\r\n                  false\r\n                );\r\n            }\r\n            else {\r\n              console.log('Error', err.message);\r\n              const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n              Error(\r\n                \"ErrorOnCreateClient\",\r\n                ErrorMessage,\r\n                20000,\r\n                false\r\n              );\r\n            }\r\n          }\r\n          else if (err.request || err.response) {\r\n            // The request was made but no response was received\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              20000,\r\n              false\r\n            );\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              10000,\r\n              false\r\n            );\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  function CheckClient(clientCode) {\r\n    const interval = setInterval(() => {\r\n      axios.get(`${config._urlGetPluralAccount}${clientCode}`)\r\n        .then(res => {\r\n          if (res.data.clientCode) {\r\n            // Cliente cadastrado com sucesso\r\n            clearInterval(interval)\r\n            const SuccessMessage = languagePT ? 'Cadastro Concluido com Sucesso' : 'Registration Completed Successfully'\r\n            setClicked(false)\r\n            Success('ClientCreated', SuccessMessage, 5000, false)\r\n            // setTimeout(() => {\r\n            //   window.location.replace(\"https://flow2pay.com.br/\");\r\n            // }, 5000);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (err.response) {\r\n            // Request made and server responded\r\n            if (err.response.data.innerMessage) {\r\n              setClicked(true)\r\n              const WarnMessage = languagePT ? 'O cadastro está na fila de análise/aprovação interna' : 'The registration is in the internal review / approval queue'\r\n              Warn(\r\n                \"RegistryInQueue\",\r\n                WarnMessage,\r\n                10000,\r\n                false\r\n              );\r\n            }\r\n          }\r\n          else if (err.request) {\r\n            setClicked(false)\r\n            // The request was made but no response was received\r\n            console.log(err.request);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              10000,\r\n              false\r\n            );\r\n          } else {\r\n            setClicked(false)\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              10000,\r\n              false\r\n            );\r\n          }\r\n        })\r\n    }, 10000);\r\n\r\n  }\r\n\r\n  return (\r\n    <FormContext.Provider\r\n      value={{\r\n        languagePT,\r\n        _Json_ClientAddresses,\r\n        _Json_ClientInfo,\r\n        _Json_AttorneyInfo,\r\n        _Json_PhoneInfo,\r\n        _Json_EmailInfo,\r\n        _Json_ClientIdentification,\r\n        _Json_Spouse,\r\n        _Json_Work,\r\n        _Json_Wealths,\r\n        _Json_LegalRepresentative,\r\n        _Json_BankAccounts,\r\n        _Json_FormSuity,\r\n        _Json_PPERelateds,\r\n        Clicked,\r\n        saveClient\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FormContext.Provider>\r\n  );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    name: String,\r\n    setname: () => { },\r\n    shortName: String,\r\n    setshortName: () => { },\r\n    taxPayerRegistry: String,\r\n    settaxPayerRegistry: () => { },\r\n    birthDate: String,\r\n    setbirthDate: () => { },\r\n    age: Number,\r\n    setAge: () => { },\r\n    fatherName: String,\r\n    setfatherName: () => { },\r\n    genderId: String,\r\n    setgenderId: () => { },\r\n    gendersIds: [],\r\n    maritalStatusId: String,\r\n    setmaritalStatusId: () => { },\r\n    maritalStatus: [],\r\n    maritalAgreementId: String,\r\n    maritalAgreements: [],\r\n    motherName: String,\r\n    setmotherName: () => { },\r\n    nationality: String,\r\n    countryBirthId: String,\r\n    getCountriesBirthId: () => { },\r\n    stateBirthId: String,\r\n    stateBirthName: String,\r\n    professionalOccupationId: String,\r\n    residenceInOtherCountryId: String,\r\n    otherTaxResidenceCountryId: String,\r\n    educationLevelId: String,\r\n    ppeOccupation: String,\r\n    setppeOccupation: () => { },\r\n    usPerson: String,\r\n    setusPerson: () => { },\r\n    isAssociatedPerson: String,\r\n    setisAssociatedPerson: () => { },\r\n    urlCallback: String,\r\n    isAcceptedOrderAttorney: String,\r\n    isAdministratorInAnotherAccount: String,\r\n    setisAdministratorInAnotherAccount: () => { }\r\n}\r\nexport const ClientInfoContext = createContext(InitialState);\r\n\r\nexport const ClientInfoProvider = (props) => {\r\n    const {_Json_ClientInfo, _Json_Spouse} = useContext(FormContext)\r\n\r\n    //#region States\r\n\r\n    const [clientId, setclientId] = useState(0)\r\n    const [name, setname] = useState('')\r\n    const [shortName, setshortName] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [age, setAge] = useState(-1)\r\n    const [fatherName, setfatherName] = useState('')\r\n    const [motherName, setmotherName] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    //! Gender variables\r\n    const [genderId, setgenderId] = useState('')\r\n    const [gendersIds, setgendersIds] = useState([])\r\n    //! Marital variables\r\n    const [maritalStatusId, setmaritalStatusId] = useState('')\r\n    const [maritalStatus, setMaritalStatus] = useState([])\r\n    const [maritalAgreementId, setmaritalAgreementId] = useState('')\r\n    const [maritalAgreements, setmaritalAgreements] = useState([])\r\n    //! Country and state birth variables\r\n    const [countryBirthId, setcountryBirthId] = useState('')\r\n    const [countriesBirthId, setcountriesBirthId] = useState([])\r\n    const [stateBirthId, setstateBirthId] = useState('')\r\n    const [stateBirthName, setstateBirthName] = useState('')\r\n    const [statesBirth, setstatesBirth] = useState([])\r\n    //! Professional ocupation variables\r\n    const [professionalOccupationId, setprofessionalOccupationId] = useState('')\r\n    const [professionalOccupationsId, setprofessionalOccupationsId] = useState([])\r\n    //! Residence in other country variables\r\n    const [residenceInOtherCountryId, setresidenceInOtherCountryId] = useState('')\r\n    const [residencesInOtherCountryId, setresidencesInOtherCountryId] = useState([])\r\n    //! Other tax residence in other country variables\r\n    const [otherTaxResidenceCountryId, setotherTaxResidenceCountryId] = useState('')\r\n    const [otherTaxResidencesCountryId, setotherTaxResidencesCountryId] = useState([])\r\n    //! Education level variables\r\n    const [educationLevelId, seteducationLevelId] = useState('')\r\n    const [educationsLevelId, seteducationsLevelId] = useState([])\r\n    const [ppeOccupation, setppeOccupation] = useState('')\r\n    const [usPerson, setusPerson] = useState(false)\r\n    const [isAssociatedPerson, setisAssociatedPerson] = useState(false)\r\n    const [isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount] = useState(false)\r\n\r\n    //#endregion\r\n\r\n    const reqJSON = {\r\n        clientId: clientId,\r\n        name: name,\r\n        shortName: shortName,\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        birthDate: `${birthDate}T00:00:00`,\r\n        fatherName: fatherName,\r\n        genderId: parseInt(genderId),\r\n        maritalStatusId: parseInt(maritalStatusId),\r\n        maritalAgreementId: maritalAgreementId ? parseInt(maritalAgreementId) : 0,\r\n        motherName: motherName,\r\n        nationality: nationality,\r\n        countryBirthId: parseInt(countryBirthId),\r\n        stateBirthId: parseInt(stateBirthId),\r\n        stateBirthName: stateBirthName,\r\n        professionalOccupationId: parseInt(professionalOccupationId),\r\n        residenceInOtherCountryId: parseInt(residenceInOtherCountryId),\r\n        otherTaxResidenceCountryId: parseInt(otherTaxResidenceCountryId),\r\n        educationLevelId: parseInt(educationLevelId),\r\n        ppeOccupation: ppeOccupation,\r\n        usPerson: usPerson,\r\n        isAssociatedPerson: isAssociatedPerson,\r\n        isAdministratorInAnotherAccount: isAdministratorInAnotherAccount,\r\n    }\r\n    useEffect(() => {\r\n        if(maritalStatusId !== \"2\") _Json_Spouse({})\r\n    }, [maritalStatusId])\r\n\r\n    // Campos não obrigatórios\r\n    useEffect(() => {\r\n        _Json_ClientInfo(reqJSON)\r\n    }, [usPerson, isAssociatedPerson,ppeOccupation, maritalAgreementId, otherTaxResidenceCountryId,residenceInOtherCountryId,isAdministratorInAnotherAccount])\r\n\r\n    // Campos obrigatórios\r\n    useEffect(() => {\r\n        if (name && shortName && birthDate && fatherName && motherName && taxPayerRegistry && genderId && maritalStatusId && nationality && countryBirthId &&\r\n            stateBirthId && stateBirthName && professionalOccupationId  && educationLevelId) {\r\n            _Json_ClientInfo(reqJSON)\r\n        }\r\n    }, [name, shortName, birthDate, fatherName, motherName, taxPayerRegistry, genderId, maritalStatusId, nationality, countryBirthId,\r\n        stateBirthId, stateBirthName, professionalOccupationId, educationLevelId])\r\n\r\n\r\n    useEffect(() => {\r\n            getGendersIds()\r\n            getMaritalStatus()\r\n            getMaritalAgreements()\r\n            getCountries()\r\n            getProfessionalOccupations()\r\n            getEducation()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(countryBirthId === '') setstatesBirth([])\r\n        else getStatesBirth() \r\n    }, [countryBirthId])\r\n\r\n\r\n    function getGendersIds() {\r\n        axios.get(config._urlGenders)\r\n            .then(res => setgendersIds(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalStatus() {\r\n        axios.get(config._urlMaritalStatus)\r\n            .then(res => setMaritalStatus(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalAgreements() {\r\n        axios.get(config._urlMaritalAgreement)\r\n            .then(res => setmaritalAgreements(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => {\r\n                setcountriesBirthId(res.data)\r\n                setresidencesInOtherCountryId(res.data)\r\n                setotherTaxResidencesCountryId(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getStatesBirth() {\r\n        axios.get(`${config._urlStates}${countryBirthId}`)\r\n            .then(res => setstatesBirth(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getProfessionalOccupations() {\r\n        axios.get(config._urlProfessionalOccupation)\r\n            .then(res => setprofessionalOccupationsId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getEducation() {\r\n        axios.get(config._urlEducation)\r\n            .then(res => seteducationsLevelId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <ClientInfoContext.Provider\r\n            value={{\r\n                name, setname,\r\n                shortName, setshortName,\r\n                taxPayerRegistry, settaxPayerRegistry,\r\n                birthDate, setbirthDate, age, setAge,\r\n                fatherName, setfatherName,\r\n                motherName, setmotherName,\r\n                genderId, setgenderId, gendersIds,\r\n                maritalStatusId, setmaritalStatusId, maritalStatus,\r\n                maritalAgreements, setmaritalAgreementId,\r\n                nationality, setnationality,\r\n                setcountryBirthId, countriesBirthId,\r\n                setstateBirthId, setstateBirthName, statesBirth,\r\n                setprofessionalOccupationId, professionalOccupationsId,professionalOccupationId,\r\n                residencesInOtherCountryId, setresidenceInOtherCountryId,\r\n                otherTaxResidencesCountryId, setotherTaxResidenceCountryId,\r\n                seteducationLevelId, educationsLevelId,\r\n                ppeOccupation,setppeOccupation,\r\n                usPerson, setusPerson,\r\n                isAssociatedPerson, setisAssociatedPerson,\r\n                isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ClientInfoContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from '../contexts/FormContexts'\r\nimport { ClientInfoContext } from \"./ClientInfoContexts\"\r\n\r\nconst InitialState = {\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n}\r\n\r\nexport const IdentificationTypeContext = createContext(InitialState);\r\n\r\nexport const IdentificationTypeProvider = (props) => {\r\n\r\n    const { _Json_ClientIdentification } = useContext(FormContext)\r\n    const { taxPayerRegistry } = useContext(ClientInfoContext)\r\n\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    let reqJSON = {\r\n        identificationTypeId: parseInt(identificationTypeId),\r\n        number: number,\r\n        emissionInssuer: emissionInssuer,\r\n        emission: `${emission}T00:00:00`,\r\n        stateId: parseInt(stateId),\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (identificationTypeId && emissionInssuer && emission && stateId) {\r\n            if (identificationTypeId === \"40\") {\r\n                const cpf = taxPayerRegistry.replace(/[^\\d]+/g, '')\r\n                setnumber(cpf)\r\n                _Json_ClientIdentification(reqJSON)\r\n            }\r\n            else if (number) _Json_ClientIdentification(reqJSON)\r\n        }\r\n    }, [identificationTypeId, number, emissionInssuer, emission, stateId,taxPayerRegistry])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <IdentificationTypeContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                setnumber,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states\r\n            }}\r\n        >\r\n            {props.children}\r\n        </IdentificationTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    isAcceptedOrderAttorney: false,\r\n    name: '',\r\n    setname: () => { },\r\n    taxpayerRegistry: '',\r\n    settaxpayerRegistry: () => { },\r\n    birthDate: '',\r\n    setbirthDate: () => { },\r\n    isPEP: false,\r\n    setisPEP: () => { },\r\n    actionDescription: '',\r\n    setactionDescription: () => { },\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setneighborhood: () => { },\r\n    description: '',\r\n    setdescription: () => { },\r\n    zipCode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setnumber: () => { },\r\n    complement: '',\r\n    setcomplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { },\r\n}\r\nexport const AttorneyContext = createContext(InitialState);\r\n\r\nexport const AttorneyProvider = (props) => {\r\n    const [isAcceptedOrderAttorney, setisAcceptedOrderAttorney] = useState(false)\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [isPEP, setisPEP] = useState(false)\r\n    const [actionDescription, setactionDescription] = useState('')\r\n    const [countryId, setCountryId] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setneighborhood] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const [zipCode, setZipCode] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [complement, setcomplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_AttorneyInfo } = useContext(FormContext)\r\n\r\n    const attorneys = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry.replace(/[^\\d]+/g, ''),\r\n        birthDate: birthDate,\r\n        isPEP: isPEP,\r\n        actionDescription: actionDescription,\r\n        address: {\r\n            countryId: countryId,\r\n            stateId: stateId,\r\n            stateName: stateName,\r\n            cityId: cityId,\r\n            cityName: cityName,\r\n            neighborhood: neighborhood,\r\n            description: description,\r\n            zipCode: zipCode,\r\n            number: number,\r\n            complement: complement,\r\n            typeAddressId: typeAddressId\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(!isAcceptedOrderAttorney) _Json_AttorneyInfo([])\r\n        else if (isAcceptedOrderAttorney && name && taxpayerRegistry && birthDate && actionDescription && countryId && stateId && stateName && cityId && cityName &&\r\n            neighborhood && description && zipCode && number && complement && typeAddressId) {\r\n            _Json_AttorneyInfo([attorneys])\r\n        }\r\n    }, [isAcceptedOrderAttorney, name, taxpayerRegistry, birthDate, isPEP, actionDescription, countryId, stateId, stateName, cityId, cityName,\r\n        neighborhood, description, zipCode, number, complement, typeAddressId])\r\n\r\n    return (\r\n        <AttorneyContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, birthDate, isPEP, actionDescription,\r\n                countryId, isAcceptedOrderAttorney, stateId,\r\n                setisAcceptedOrderAttorney, setname, settaxpayerRegistry,\r\n                setbirthDate, setisPEP, setactionDescription,\r\n                setCountryId, setStateId, setStateName, setCityId, setneighborhood,\r\n                setCityName, setTypeAddressId, setZipCode, setdescription, setnumber, setcomplement\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AttorneyContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setNeighborhood: () => { },\r\n    description: '',\r\n    setDescription: () => { },\r\n    zipcode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setNumber: () => { },\r\n    complement: '',\r\n    setComplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { }\r\n}\r\nexport const AdressesContext = createContext(InitialState);\r\n\r\nexport const AdressesProvider = (props) => {\r\n    const [countryId, setCountryId] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [zipcode, setZipCode] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setNeighborhood] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [complement, setComplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_ClientAddresses } = useContext(FormContext)\r\n\r\n    const AdressJson = {\r\n        \"countryId\": countryId,\r\n        \"stateId\": stateId,\r\n        \"stateName\": stateName,\r\n        \"cityId\": cityId,\r\n        \"cityName\": cityName,\r\n        \"neighborhood\": neighborhood,\r\n        \"description\": description,\r\n        \"zipCode\": zipcode,\r\n        \"number\": number,\r\n        \"complement\": complement,\r\n        \"typeAddressId\": typeAddressId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cityId && cityName && complement && countryId && description && neighborhood && number && stateId && stateName && typeAddressId && zipcode) {\r\n            _Json_ClientAddresses(AdressJson)\r\n        }\r\n    }, [cityId, cityName, complement, countryId, description, neighborhood, number, stateId, stateName, typeAddressId, zipcode])\r\n\r\n    return (\r\n        <AdressesContext.Provider\r\n            value={{\r\n                countryId,\r\n                setCountryId,\r\n                stateId,\r\n                setStateId,\r\n                setStateName,\r\n                cityId,\r\n                setCityId,\r\n                setCityName,\r\n                zipcode,\r\n                setZipCode,\r\n                stateName,\r\n                cityName,\r\n                neighborhood,\r\n                setNeighborhood,\r\n                description,\r\n                setDescription,\r\n                number,\r\n                setNumber,\r\n                complement,\r\n                setComplement,\r\n                typeAddressId,\r\n                setTypeAddressId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AdressesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    bankId: '',\r\n    agency: '',\r\n    account: '',\r\n    digit: '',\r\n    typeAccountId: '',\r\n    bankAccountTypes: [],\r\n    banks: [],\r\n    setbankId: () => { },\r\n    setagency: () => { },\r\n    setaccount: () => { },\r\n    setdigit: () => { },\r\n    settypeAccountId: () => { }\r\n}\r\n\r\nexport const BankAccountsContext = createContext(InitialState);\r\n\r\nexport const BankAccountsProvider = (props) => {\r\n    const [bankId, setbankId] = useState('')\r\n    const [agency, setagency] = useState('')\r\n    const [account, setaccount] = useState('')\r\n    const [digit, setdigit] = useState('')\r\n    const [typeAccountId, settypeAccountId] = useState('')\r\n\r\n\r\n    const [bankAccountTypes, setBankAccountTypes] = useState([])\r\n    const [banks, setBanks] = useState([])\r\n\r\n    useEffect(() => {\r\n        GetAccountTypes()\r\n        GetBanks()\r\n    }, [])\r\n\r\n    function GetAccountTypes() {\r\n        axios.get(config._urlBankAccountType)\r\n            .then(res => { if (res.data) setBankAccountTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function GetBanks() {\r\n        const newBanks = []\r\n        axios.get(config._urlBank)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    res.data.map(i => {\r\n                        const bank = { name: `${i.code} ${i.name}`, value: `${i.bankId}` }\r\n                        newBanks.push(bank)\r\n                    })\r\n                }\r\n            })\r\n            .then(res => {\r\n                setBanks(newBanks)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <BankAccountsContext.Provider\r\n            value={{\r\n                bankAccountTypes, banks,\r\n                bankId, setbankId,\r\n                agency, setagency,\r\n                account, setaccount,\r\n                digit, setdigit,\r\n                typeAccountId, settypeAccountId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </BankAccountsContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    phoneTypes: [],\r\n    phoneTypeId: '',\r\n    countryCode: '',\r\n    stateCode: '',\r\n    number: '',\r\n    setPhoneTypeId: () => { },\r\n    setCountryCode: () => { },\r\n    setStateCode: () => { },\r\n    setNumber: () => { },\r\n}\r\n\r\n\r\n\r\nexport const PhonesContext = createContext(InitialState);\r\n\r\nexport const PhonesProvider = (props) => {\r\n    const { _Json_PhoneInfo } = useContext(FormContext)\r\n    const [phoneTypeId, setPhoneTypeId] = useState('')\r\n    const [countryCode, setCountryCode] = useState('')\r\n    const [stateCode, setStateCode] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [phoneTypes, setPhoneTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        countryCode: countryCode,\r\n        stateCode: stateCode,\r\n        number: number,\r\n        type: parseInt(phoneTypeId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (countryCode && stateCode && number && phoneTypeId) _Json_PhoneInfo(reqJSON)\r\n    }, [countryCode, stateCode, number, phoneTypeId])\r\n\r\n    useEffect(() => {\r\n            getPhoneTypes()\r\n    }, [])\r\n\r\n\r\n    function getPhoneTypes() {\r\n        axios.get(config._urlPhoneType)\r\n            .then(res => {\r\n                if (res.data) setPhoneTypes(res.data)\r\n            })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    return (\r\n        <PhonesContext.Provider\r\n            value={{\r\n                phoneTypes, setPhoneTypeId, phoneTypeId,\r\n                countryCode, setCountryCode,\r\n                stateCode, setStateCode,\r\n                number, setNumber\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PhonesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    mail: '',\r\n    type: '',\r\n    isCorrespondency: true,\r\n    emailTypes: [],\r\n    setMail: () => { },\r\n    setType: () => { },\r\n    setIsCorrespondency: () => { },\r\n}\r\n\r\nexport const EmailContext = createContext(InitialState);\r\n\r\nexport const EmailProvider = (props) => {\r\n    const { _Json_EmailInfo } = useContext(FormContext)\r\n    const [mail, setMail] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [isCorrespondency, setIsCorrespondency] = useState(true)\r\n    const [emailTypes, setEmailTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        mail: mail,\r\n        type: parseInt(type),\r\n        isCorrespondency: true\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (mail && type) _Json_EmailInfo(reqJSON)\r\n    }, [mail, type])\r\n\r\n    useEffect(() => {\r\n            getEmailTypes()\r\n    }, [])\r\n\r\n\r\n    function getEmailTypes() {\r\n        axios.get(config._urlEmailType)\r\n            .then(res => {\r\n                if (res.data) setEmailTypes(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <EmailContext.Provider\r\n            value={{\r\n                emailTypes,\r\n                setIsCorrespondency, isCorrespondency,\r\n                setType, setMail\r\n            }}\r\n        >\r\n            {props.children}\r\n        </EmailContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport { FormContext } from './FormContexts'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    typeWealthId: '',\r\n    value: '',\r\n    description: '',\r\n    typesWealthId: [],\r\n    settypeWealthId: () => { },\r\n    setvalue: () => { },\r\n    setdescription: () => { },\r\n}\r\n\r\nexport const WealthsTypeContext = createContext(InitialState);\r\n\r\nexport const WealthsTypeProvider = (props) => {\r\n\r\n    const [typeWealthId, settypeWealthId] = useState('')\r\n    const [value, setvalue] = useState('')\r\n    const [description, setdescription] = useState('')\r\n\r\n    const [typesWealthId, settypesWealthId] = useState([])\r\n\r\n    useEffect(() => {\r\n            GetWealthTypes()\r\n    }, [])\r\n\r\n    function GetWealthTypes() {\r\n        axios.get(config._urlWealthType)\r\n            .then(res => { if (res.data) settypesWealthId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <WealthsTypeContext.Provider\r\n            value={{\r\n                typeWealthId, value, description,\r\n                settypeWealthId, setvalue, setdescription,\r\n                typesWealthId,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WealthsTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    institutionName: '',\r\n    occupation: '',\r\n    profession: '',\r\n    corporateTaxpayerRegistry: '',\r\n    setinstitutionName: () => { },\r\n    setoccupation: () => { },\r\n    setprofession: () => { },\r\n    setcorporateTaxpayerRegistry: () => { },\r\n    setIsRequired: () => { }\r\n}\r\n\r\nexport const WorkContext = createContext(InitialState);\r\n\r\nexport const WorkProvider = (props) => {\r\n\r\n    const { _Json_Work } = useContext(FormContext)\r\n\r\n    const [institutionName, setinstitutionName] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n    const [profession, setprofession] = useState('')\r\n    const [corporateTaxpayerRegistry, setcorporateTaxpayerRegistry] = useState('')\r\n    \r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    let reqJSON = {\r\n        institutionName: institutionName,\r\n        occupation: occupation,\r\n        profession: profession,\r\n        corporateTaxpayerRegistry: corporateTaxpayerRegistry.replace(/[^\\d]+/g, '')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_Work({})\r\n        else if (institutionName && occupation && profession && corporateTaxpayerRegistry){\r\n            _Json_Work(reqJSON)\r\n        }\r\n    }, [isRequired,institutionName, occupation, profession, corporateTaxpayerRegistry])\r\n\r\n\r\n    return (\r\n        <WorkContext.Provider\r\n            value={{\r\n                institutionName, setinstitutionName,\r\n                occupation, setoccupation,\r\n                profession, setprofession,\r\n                corporateTaxpayerRegistry, setcorporateTaxpayerRegistry,\r\n                setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WorkContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { IdentificationTypeContext } from '../../contexts/IdentificationTypeContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function IdentificationType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, \r\n        setstateId,setemissionInssuer, setnumber, setemission, emission } = useContext(IdentificationTypeContext)\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Identificação' : 'Identification',\r\n        Select: languagePT ? 'Selecionar Tipo de Identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Document UF',\r\n        emission: languagePT ? 'Data de emissão' : 'Issue date',\r\n        emissionInssuer: languagePT ? 'Orgão Emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    function OnChangeField(e) {\r\n        const {value, id} = e.target \r\n        switch (id) {\r\n            case 'identificationType':\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'IdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'identificationTypeemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'identificationTypedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'identificationTypeemission':\r\n                setemission(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divIdentificationTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"identificationType\" id=\"identificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex\"}>\r\n                <input required={identificationTypeId !== \"40\"} type=\"text\" name=\"identificationTypedocument\" id=\"identificationTypedocument\" onChange={e => OnChangeField(e)}\r\n                placeholder={Labels.documentNumber}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required name=\"IdtypeStateId\" id=\"IdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.States}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescriptionTitle\">{Labels.emission}</p>\r\n            <div className=\"d-flex\">\r\n                <input value={emission} required type=\"date\" name=\"identificationTypeemission\" id=\"identificationTypeemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required type=\"text\" name=\"identificationTypeemissionInssuer\" id=\"identificationTypeemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                placeholder={Labels.emissionInssuer}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nexport default function Countries(props) {\r\n    const [countries, setCountries] = useState([])\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar País' : 'Select Country'\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n        getCountries()\r\n    }, [])\r\n\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => { if (res.data) setCountries(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function RenderCountries() {\r\n        return (\r\n            countries.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"countries\" id=\"countries\" onChange={props.onSelectCountry}>\r\n            <option defaultValue value=\"\">{Labels.Select}</option>\r\n            {RenderCountries()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { AdressesContext } from \"../../contexts/AdressesContexts\";\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const Atctx = useContext(AttorneyContext)\r\n    const Adctx = useContext(AdressesContext)\r\n\r\n    const [states, setStates] = useState([])\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Estado' : 'Select State',\r\n        SelectError: languagePT ? 'Erro ao consultar estados' : 'Error querying states'\r\n    }\r\n\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if(Atctx.isAcceptedOrderAttorney) required = true\r\n        else if(!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n\r\n    useEffect(() => {\r\n        if(props.ClientAdress) {\r\n            if (Adctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n        else if (props.Attorney){\r\n            if (Atctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n    }, [Atctx.countryId, Adctx.countryId])\r\n\r\n    function getStates() {\r\n        const _countryId = props.ClientAdress ? Adctx.countryId : Atctx.countryId\r\n        axios.get(`${config._urlStates}${_countryId}`)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    setStates(res.data)\r\n                }\r\n                else {\r\n                    console.log(Labels.SelectError)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(Labels.SelectError)\r\n            })\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"states\" id=\"states\" onChange={props.onSelectState}>\r\n            <option defaultValue value=\"\">{Labels.Select}</option>\r\n            {RenderStates()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function Cities(props) {\r\n    const Adctx = useContext(AdressesContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const [cities, setCities] = useState([])\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Cidade' : 'Select City',\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n        if (props.ClientAdress) {\r\n            if (Adctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n        else if (props.Attorney) {\r\n            if (Atctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n    }, [Atctx.stateId, Adctx.stateId])\r\n\r\n    function getCities() {\r\n        const _stateId = props.ClientAdress ? Adctx.stateId : Atctx.stateId\r\n        axios.get(`${config._urlCities}${_stateId}`)\r\n            .then(res => { if (res.data) { setCities(res.data) } })\r\n            .catch(err => { console.log(err) })\r\n    }\r\n    function RenderCities() {\r\n        return (\r\n            cities.map(c => {\r\n                return (\r\n                    <option key={c.cityId} value={c.cityId} cityname={c.name}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divCitiesSelect\">\r\n            <select required={required} name=\"cities\" id=\"cities\" onChange={props.onSelectCity}>\r\n                <option defaultValue value=\"\">{Labels.Select}</option>\r\n                {RenderCities()}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport config from \"../../config\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nexport default function AdressType(props) {\r\n    const [adressType, setAdressType] = useState([])\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Tipo de Endereço' : 'Select Address Type',\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n            getAdressType()\r\n    }, [])\r\n\r\n    function getAdressType() {\r\n        axios.get(config._urlAdressType)\r\n            .then(res => {if (res.data) setAdressType(res.data)})\r\n            .catch(err => console.log(err))\r\n    }\r\n    function RenderAdressType() {\r\n        return (\r\n            adressType.map(adt => {\r\n                return (\r\n                    <option key={adt.addressTypeId} value={adt.addressTypeId}>{adt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n            <select required={required} name=\"addressType\" id=\"addressType\" onChange={props.onSelectTypeAddress}>\r\n                <option defaultValue value=\"\">{Labels.Select}</option>\r\n                {RenderAdressType()}\r\n            </select>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function CEP(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const [error, setError] = useState(false)\r\n    const Labels = {\r\n        CollectCep: languagePT ? 'Digite seu cep' : 'Type your ZIP Code',\r\n        Error: languagePT ? 'CEP Invalido' : 'Invalid ZIP Code'\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    function ValidateCEP(e) {\r\n        const Cep = e.target.value\r\n        if (Cep.length === 0) {\r\n            setError(false)\r\n            props.onCollectCep('')\r\n        }\r\n        const validacep = /^[0-9]{5,8}$/;\r\n        if (validacep.test(Cep)) {\r\n            setError(false)\r\n            props.onCollectCep(Cep)\r\n        }\r\n        else {\r\n            props.onCollectCep('')\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"divCollectCep\">\r\n            <input required={required} className={error ? \"error\" : \"\"} placeholder={Labels.CollectCep} type=\"text\" name=\"cep\" id=\"cep\"\r\n                maxLength=\"8\" onChange={e => ValidateCEP(e)} />\r\n            <p className={error ? \"msgError\" : \"d-none\"}>{Labels.Error}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts';\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function AdressUtils(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setComplement, setDescription, setNeighborhood, setNumber } = useContext(AdressesContext)\r\n    const { setcomplement, setdescription, setneighborhood, setnumber, isAcceptedOrderAttorney } = useContext(AttorneyContext)\r\n    const Labels = {\r\n        neighborhood: languagePT ? 'Bairro' : 'Neighborhood',\r\n        description: languagePT ? 'Rua' : 'Street',\r\n        number: languagePT ? 'Número' : 'Number',\r\n        complement: languagePT ? 'Complemento' : 'Complement',\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if(isAcceptedOrderAttorney) required = true\r\n        else if(!isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n    \r\n\r\n    function setInput(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'neighborhood':\r\n                if (props.Attorney) setneighborhood(value)\r\n                else if (props.ClientAdress) setNeighborhood(value)\r\n                break;\r\n            case 'description':\r\n                if (props.Attorney) setdescription(value)\r\n                else if (props.ClientAdress) setDescription(value)\r\n                break;\r\n            case 'number':\r\n                if (props.Attorney) setnumber(value)\r\n                else if (props.ClientAdress) setNumber(value)\r\n                break;\r\n            case 'complement':\r\n                if (props.Attorney) setcomplement(value)\r\n                else if (props.ClientAdress) setComplement(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"divCollectUtilsAdress\">\r\n            {props.children}\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"neighborhood\" id=\"neighborhood\" placeholder={Labels.neighborhood} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"description\" id=\"description\" placeholder={Labels.description} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" maxLength=\"20\" name=\"number\" id=\"number\" placeholder={Labels.number} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"complement\" id=\"complement\" placeholder={Labels.complement} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nexport default function Adresses(props) {\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode } = useContext(AdressesContext)\r\n    const {languagePT} = useContext(FormContext)\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Endereço' : 'Address',\r\n    }\r\n\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientAdress\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <Countries onSelectCountry={onSelectCountry} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <States onSelectState={onSelectState} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <Cities onSelectCity={onSelectCity} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <AdressUtils ClientAdress={true} Attorney={false}>\r\n                <div className=\"d-flex\">\r\n                    <CEP onCollectCep={onCollectCep} ClientAdress={true} Attorney={false}/>\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n            </AdressUtils>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport Fuse from 'fuse.js';\r\n\r\nimport SelectSearch from 'react-select-search'\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { BankAccountsContext } from '../../contexts/BankContexts';\r\n\r\nimport './index.css'\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function BankAccounts(props) {\r\n    const [error, setError] = useState(false)\r\n    const { languagePT, _Json_BankAccounts } = useContext(FormContext)\r\n    const { bankAccountTypes, banks,\r\n        bankId, setbankId,\r\n        agency, setagency,\r\n        account, setaccount,\r\n        digit, setdigit,\r\n        typeAccountId, settypeAccountId } = useContext(BankAccountsContext)\r\n    const [clientBankAccounts, setclientBankAccounts] = useState([])\r\n    const Labels = {\r\n        selectItems: languagePT ? 'Selecione um item da lista e Preencha os campos' : 'Select an item from the list and fill the fields',\r\n        SelecttypeAccountId: languagePT ? 'Tipo de conta bancária' : 'Bank account type',\r\n        SelectbankId: languagePT ? 'Selecione o seu banco' : 'Select your bank',\r\n        account: languagePT ? 'Número da conta bancária' : 'Bank account number',\r\n        digit: languagePT ? 'Digito' : 'Digit',\r\n        agency: languagePT ? 'Agência' : 'Agency',\r\n        description: languagePT ? 'Contas bancarias' : 'Bank accounts',\r\n        addAccount: languagePT ? 'CLIQUE PARA ADICIONAR CONTA BANCARIA' : 'CLICK TO ADD BANK ACCOUNT'\r\n    }\r\n\r\n    function RenderBankAccountTypes() {\r\n        return (\r\n            bankAccountTypes.map(bat => {\r\n                return (\r\n                    <option key={bat.bankAccountTypeId} value={bat.bankAccountTypeId}>{bat.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderBanks() {\r\n        return (\r\n            banks.map(bank => {\r\n                return (\r\n                    <option key={bank.bankId} value={bank.bankId} code={bank.code}>{bank.code} | {bank.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderclientBankAccounts() {\r\n        return (\r\n            clientBankAccounts.map((bat, index) => {\r\n                return (\r\n                    <div className=\"account\" key={index}>\r\n                        <div className=\"d-flex d-flexdc\">\r\n                            <span className=\"inputDescription\">{banks.find(b => b.value === bat.bankId.toString()).name}</span>\r\n                            <span className=\"inputDescription\">Agencia: {bat.agency}</span>\r\n                            <span className=\"inputDescription\">Conta: {bat.account}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeBankAccount(index)}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addBankAccount() {\r\n        if (!account || !agency || !bankId || !digit || !typeAccountId) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            let bank = {\r\n                bankId: parseInt(bankId),\r\n                agency: parseInt(agency),\r\n                account: parseInt(account),\r\n                digit: parseInt(digit),\r\n                typeAccountId: parseInt(typeAccountId)\r\n            }\r\n            setclientBankAccounts([...clientBankAccounts, bank])\r\n            setaccount('')\r\n            setdigit('')\r\n            setagency('')\r\n        }\r\n    }\r\n    function removeBankAccount(i) {\r\n        setclientBankAccounts(clientBankAccounts.filter((c, index) => index !== i))\r\n    }\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'typeAccountId':\r\n                settypeAccountId(value)\r\n                break;\r\n            case 'account':\r\n                setaccount(value)\r\n                break;\r\n            case 'digit':\r\n                setdigit(value)\r\n                break;\r\n            case 'agency':\r\n                setagency(value)\r\n                break;\r\n            case 'bankId':\r\n                console.log(value)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        _Json_BankAccounts(clientBankAccounts)\r\n    }, [clientBankAccounts])\r\n\r\n\r\n    function fuzzySearch(options) {\r\n        const fuse = new Fuse(options, {\r\n            keys: ['name'],\r\n            threshold: 0.3,\r\n        });\r\n\r\n        return (value) => {\r\n            if (!value.length) {\r\n                return options;\r\n            }\r\n            let array = fuse.search(value)\r\n            array = array.map(i => i.item)\r\n            return array;\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className=\"divBankAccounts\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.description}</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={clientBankAccounts.length === 0} name=\"typeAccountId\" id=\"typeAccountId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.SelecttypeAccountId}</option>\r\n                    {RenderBankAccountTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n\r\n                <SelectSearch options={banks} search={true} filterOptions={fuzzySearch} name=\"name\"\r\n                    emptyMessage=\"Not found\" placeholder={Labels.SelectbankId} id=\"bankId\"\r\n                    printOptions=\"auto\" closeOnSelect={true} onChange={id => setbankId(id)}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={account} type=\"text\" name=\"account\" id=\"account\"\r\n                    placeholder={Labels.account} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={digit} type=\"text\" name=\"digit\" id=\"digit\"\r\n                    placeholder={Labels.digit} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={agency} type=\"text\" name=\"agency\" id=\"agency\"\r\n                    placeholder={Labels.agency} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"bankAccounts\">\r\n                {RenderclientBankAccounts()}\r\n            </div>\r\n            <div className=\"addAccount\">\r\n                <button onClick={() => addBankAccount()} type=\"button\">\r\n                    {Labels.addAccount}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>{Labels.selectItems}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    name: '',\r\n    nationality: '',\r\n    occupation: '',\r\n    settaxPayerRegistry: () => { },\r\n    setname: () => { },\r\n    setnationality: () => { },\r\n    setoccupation: () => { }\r\n}\r\n\r\nexport const PPERelatedsContext = createContext(InitialState);\r\n\r\nexport const PPERelatedsProvider = (props) => {\r\n    const { _Json_PPERelateds } = useContext(FormContext)\r\n\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [name, setname] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n\r\n    const reqJson = {\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        name: name,\r\n        nationality: nationality,\r\n        occupation: occupation\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(name && taxPayerRegistry && occupation && nationality) _Json_PPERelateds([reqJson])\r\n    }, [name,taxPayerRegistry,occupation,nationality])\r\n\r\n    return (\r\n        <PPERelatedsContext.Provider\r\n            value={{\r\n                taxPayerRegistry,\r\n                name,\r\n                nationality,\r\n                occupation,\r\n                settaxPayerRegistry,\r\n                setname,\r\n                setnationality,\r\n                setoccupation\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PPERelatedsContext.Provider>\r\n    );\r\n};\r\n","function ValidCPF(cpf) {\r\n    var Soma;\r\n    var Resto;\r\n    Soma = 0;\r\n    if (cpf === \"00000000000\") return false;\r\n    if (cpf === \"11111111111\") return false;\r\n    if (cpf === \"22222222222\") return false;\r\n    if (cpf === \"33333333333\") return false;\r\n    if (cpf === \"44444444444\") return false;\r\n    if (cpf === \"55555555555\") return false;\r\n    if (cpf === \"66666666666\") return false;\r\n    if (cpf === \"77777777777\") return false;\r\n    if (cpf === \"88888888888\") return false;\r\n\r\n    for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n    if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n    Soma = 0;\r\n    for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n    if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n    return true;\r\n}\r\n\r\nfunction validarCNPJ(cnpj) {\r\n    cnpj = cnpj.replace(/[^\\d]+/g,'');\r\n    if(cnpj == '') return false;\r\n    if (cnpj.length != 14)\r\n        return false;\r\n    // Elimina CNPJs invalidos conhecidos\r\n    if (cnpj == \"00000000000000\" || \r\n        cnpj == \"11111111111111\" || \r\n        cnpj == \"22222222222222\" || \r\n        cnpj == \"33333333333333\" || \r\n        cnpj == \"44444444444444\" || \r\n        cnpj == \"55555555555555\" || \r\n        cnpj == \"66666666666666\" || \r\n        cnpj == \"77777777777777\" || \r\n        cnpj == \"88888888888888\" || \r\n        cnpj == \"99999999999999\")\r\n        return false;\r\n    // Valida DVs\r\n    let tamanho = cnpj.length - 2\r\n    let numeros = cnpj.substring(0,tamanho);\r\n    let digitos = cnpj.substring(tamanho);\r\n    let soma = 0;\r\n    let pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(0))\r\n        return false;\r\n    tamanho = tamanho + 1;\r\n    numeros = cnpj.substring(0,tamanho);\r\n    soma = 0;\r\n    pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(1))\r\n          return false;\r\n           \r\n    return true;\r\n}\r\n\r\nexport {\r\n    ValidCPF, validarCNPJ\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { PPERelatedsContext } from '../../contexts/PPERelatedsContext';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport InputMask from \"react-input-mask\";\r\nimport Switch from \"react-switch\";\r\n\r\nimport {ValidCPF} from '../../utils'\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function PPERelateds(props) {\r\n    const { languagePT, _Json_PPERelateds } = useContext(FormContext)\r\n    const { name, nationality, occupation, setname, setnationality,\r\n        setoccupation, settaxPayerRegistry, taxPayerRegistry } = useContext(PPERelatedsContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n\r\n    const [PPERelated, setPPERelated] = useState(false)\r\n\r\n    const Labels = {\r\n        PPERelated: languagePT ? 'Cliente têm relacionamento com uma Pessoa Politicamente Exposta ?' : 'Customer has a relationship with a Politically Exposed Person ?',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        name: languagePT ? 'Nome da Pessoa Politicamente Exposta' : 'Politically Exposed Person\\'s Name',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'TaxPayerRegistry',\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!PPERelated) _Json_PPERelateds([])\r\n    }, [PPERelated])\r\n\r\n    function OnChangeField(e) {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"d-flex d-flexdc df-alc\">\r\n                <p className=\"inputDescription\">{Labels.PPERelated}</p>\r\n                <Switch\r\n                    onColor=\"#fac580\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#474e5e\"\r\n                    offHandleColor=\"#000A1E\"\r\n                    checked={PPERelated}\r\n                    onChange={cheked => setPPERelated(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={20}\r\n                    width={50}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input value={name} required={PPERelated} type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} value={nationality} required={PPERelated} type=\"text\"\r\n                    name=\"nationality\" id=\"nationality\" placeholder={Labels.nationality}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"\" : \"d-none\"}>\r\n                <div className=\"d-flex\">\r\n                    <InputMask className={PPERelated ? \"\" : \"d-none\"} value={taxPayerRegistry} required={PPERelated}\r\n                        type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\" placeholder={Labels.taxPayerRegistry}\r\n                        mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" \r\n                        title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} required={PPERelated} value={occupation} type=\"text\" name=\"occupation\" id=\"occupation\" placeholder={Labels.occupation}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setname: () => { },\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n    setHide: () => { }\r\n}\r\n\r\nexport const SpouseContext = createContext(InitialState);\r\n\r\nexport const SpouseProvider = (props) => {\r\n\r\n    const { _Json_Spouse } = useContext(FormContext)\r\n\r\n    const [spouseId, setspouseId] = useState(0)\r\n    const [name, setname] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    \r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    const [hide, setHide] = useState(false)\r\n\r\n    let reqJSON = {\r\n        spouseId: parseInt(spouseId),\r\n        name: name,\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        document: {\r\n            identificationTypeId: parseInt(identificationTypeId),\r\n            number: number,\r\n            emissionInssuer: emissionInssuer,\r\n            emission: emission,\r\n            stateId: parseInt(stateId)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (identificationTypeId === \"40\") {\r\n            if (name && taxPayerRegistry && identificationTypeId && emissionInssuer && emission && stateId) {\r\n                const cpf = taxPayerRegistry.replace(/[^\\d]+/g, '')\r\n                reqJSON.document.number = identificationTypeId === \"40\" ? cpf : number\r\n                reqJSON.taxPayerRegistry = cpf\r\n                _Json_Spouse(reqJSON)\r\n            }\r\n        }\r\n        else if (name && taxPayerRegistry && identificationTypeId && number && emissionInssuer && emission && stateId) {\r\n            const cpf = taxPayerRegistry.replace(/[^\\d]+/g, '')\r\n            reqJSON.taxPayerRegistry = cpf\r\n            _Json_Spouse(reqJSON)\r\n        }\r\n\r\n    }, [hide, name, taxPayerRegistry, identificationTypeId, number, emissionInssuer, emission, stateId])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <SpouseContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                settaxPayerRegistry, taxPayerRegistry,\r\n                setnumber, setname, name,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states,\r\n                setHide\r\n            }}\r\n        >\r\n            {props.children}\r\n        </SpouseContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { SpouseContext } from '../../contexts/Spouse';\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport {ValidCPF} from '../../utils'\r\nimport './index.css'\r\n\r\nexport default function Spouse(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, setHide,\r\n        setstateId, setemissionInssuer, setnumber, setemission, number, taxPayerRegistry, settaxPayerRegistry, setname, name } = useContext(SpouseContext)\r\n    const Labels = {\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        Select: languagePT ? 'Selecionar Tipo de Identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Document UF',\r\n        emission: languagePT ? 'Data de emissão' : 'Issue date',\r\n        emissionInssuer: languagePT ? 'Orgão Emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'spousename':\r\n                setname(value)\r\n                break;\r\n            case 'spouseidentificationType':\r\n                setnumber('')\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'spouseIdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'spouseemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'spousedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'spouseemission':\r\n                const emissionDoc = `${value}T00:00:00`\r\n                setemission(emissionDoc)\r\n                break;\r\n            case 'spousedocumentcpf':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className={props.hide ? \"d-none\" : \"divSpouse\"}>\r\n            <span className=\"inputDescriptionTitle\">Informações Conjuge</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={name} required={props.required} type=\"text\" name=\"spousename\" id=\"spousename\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={props.required}\r\n                    name=\"spouseidentificationType\" id=\"spouseidentificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex\"}>\r\n                <input value={number} required={identificationTypeId !== \"40\" && props.required} type=\"text\" name=\"spousedocument\" id=\"spousedocument\" onChange={e => OnChangeField(e)}\r\n                    placeholder={Labels.documentNumber} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <InputMask value={taxPayerRegistry} required={props.required} type=\"text\" name=\"spousedocumentcpf\" id=\"spousedocumentcpf\"\r\n                        placeholder={Labels.taxPayerRegistry} mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={props.required} name=\"spouseIdtypeStateId\" id=\"spouseIdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.States}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.emission}</p>\r\n            <div className=\"d-flex\">\r\n                <input required={props.required} type=\"date\" name=\"spouseemission\" id=\"spouseemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={props.required} type=\"text\" name=\"spouseemissionInssuer\" id=\"spouseemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                    placeholder={Labels.emissionInssuer} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nimport config from \"../config\";\r\n\r\nconst InitialState = {\r\n    name: '',\r\n    taxpayerRegistry: '',\r\n    relationshipTypeId: '',\r\n    relationshipTypesId: [],\r\n    setname: () => { },\r\n    settaxpayerRegistry: () => { },\r\n    setRelationshipTypeId: () => { },\r\n    setIsRequired: () => { }\r\n}\r\nexport const LegalRepresentativeContext = createContext(InitialState);\r\n\r\nexport const LegalRepresentativeProvider = (props) => {\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [relationshipTypeId, setRelationshipTypeId] = useState('')\r\n\r\n    const [relationshipTypesId, setRelationshipTypesId] = useState([])\r\n\r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    const { _Json_LegalRepresentative, errorOnApi } = useContext(FormContext)\r\n\r\n    const legalRepresentatives = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry,\r\n        relationshipTypeId: relationshipTypeId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_LegalRepresentative([])\r\n        else if (name && taxpayerRegistry && relationshipTypeId) _Json_LegalRepresentative([legalRepresentatives])\r\n    }, [isRequired, name, taxpayerRegistry, relationshipTypeId])\r\n\r\n    useEffect(() => {\r\n            GetRelationsShipType()\r\n    }, [])\r\n\r\n    function GetRelationsShipType() {\r\n        axios.get(config._urlRelationshipType)\r\n            .then(res => { if (res.data) setRelationshipTypesId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <LegalRepresentativeContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, relationshipTypeId,\r\n                setname, settaxpayerRegistry, setRelationshipTypeId,\r\n                relationshipTypesId, setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </LegalRepresentativeContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\nimport { LegalRepresentativeContext } from '../../contexts/LegalRepresentativeContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function Work(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { age } = useContext(ClientInfoContext)\r\n    const { name, taxpayerRegistry, relationshipTypesId,\r\n        setname, settaxpayerRegistry, setRelationshipTypeId, setIsRequired } = useContext(LegalRepresentativeContext)\r\n\r\n    let required = age >= 0 && age < 18 ? true : false\r\n\r\n    const Labels = {\r\n        legalRepresentativeName: languagePT ? 'Nome ao representante legal do cliente' : '',\r\n        legalRepresentativeTaxpayerRegistry: languagePT ? 'CPF ao representante legal do cliente' : '',\r\n        relationshipTypeId: languagePT ? 'Tipo do relacionamento ao representante legal' : '',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : '',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    function ValidCPF(cpf) {\r\n        var Soma;\r\n        var Resto;\r\n        Soma = 0;\r\n        if (cpf === \"00000000000\") return false;\r\n        if (cpf === \"11111111111\") return false;\r\n        if (cpf === \"22222222222\") return false;\r\n        if (cpf === \"33333333333\") return false;\r\n        if (cpf === \"44444444444\") return false;\r\n        if (cpf === \"55555555555\") return false;\r\n        if (cpf === \"66666666666\") return false;\r\n        if (cpf === \"77777777777\") return false;\r\n        if (cpf === \"88888888888\") return false;\r\n\r\n        if (cpf.includes('.')) cpf = cpf.replace(/\\./g, '')\r\n        if (cpf.includes('-')) cpf = cpf.replace(/-/g, '')\r\n        // if (cpf.includes('-')) cpf = cpf.replace(/\\-/g, '')\r\n\r\n        for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n        Soma = 0;\r\n        for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n        return true;\r\n    }\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'legalRepresentativeName':\r\n                setname(value)\r\n                break;\r\n            case 'relationshipTypeId':\r\n                setRelationshipTypeId(value)\r\n                break;\r\n            case 'legalRepresentativeTaxpayerRegistry':\r\n                settaxpayerRegistry(value)\r\n                if (value.length < 11) setErrorCpf(false)\r\n                else if (value.length === 11) {\r\n                    if (ValidCPF(value)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (value.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderRelationshipTypes() {\r\n        return (\r\n            relationshipTypesId.map(reltid => {\r\n                return (\r\n                    <option key={reltid.relationshipTypeId} value={reltid.relationshipTypeId}>{reltid.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [])\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n        if (required) {\r\n            setname('')\r\n            setRelationshipTypeId('')\r\n            settaxpayerRegistry('')\r\n        }\r\n    }, [age])\r\n\r\n    return (\r\n        <div className={required ? \"divLegalRepresentative\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">Representates legais</span>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={name} type=\"text\" name=\"legalRepresentativeName\" id=\"legalRepresentativeName\" placeholder={Labels.legalRepresentativeName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <input value={taxpayerRegistry} required={required} type=\"text\" name=\"legalRepresentativeTaxpayerRegistry\" id=\"legalRepresentativeTaxpayerRegistry\" placeholder={Labels.legalRepresentativeTaxpayerRegistry}\r\n                        pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={required}\r\n                    name=\"relationshipTypeId\" id=\"relationshipTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.relationshipTypeId}</option>\r\n                    {RenderRelationshipTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\n\r\n\r\nimport Spouse from '../Spouse'\r\nimport LegalRepresentative from '../LegalRepresentative'\r\n\r\nimport { LegalRepresentativeProvider } from '../../contexts/LegalRepresentativeContexts';\r\nimport { SpouseProvider } from '../../contexts/Spouse';\r\n\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nimport { ValidCPF } from '../../utils'\r\n\r\nimport Switch from \"react-switch\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport './index.css'\r\n\r\nexport default function ClientInfo() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const {\r\n        // States\r\n        name, shortName, birthDate, fatherName, motherName, taxPayerRegistry, genderId, gendersIds, maritalStatusId, nationality,\r\n        countriesBirthId, stateBirthId, statesBirth, professionalOccupationId, professionalOccupationsId,\r\n        residenceInOtherCountryId, residencesInOtherCountryId, otherTaxResidencesCountryId, otherTaxResidenceCountryId,\r\n        educationLevelId, educationsLevelId, ppeOccupation, usPerson, isAssociatedPerson, isAdministratorInAnotherAccount,\r\n        maritalStatus, maritalAgreements, maritalAgreementId,\r\n        // Sets\r\n        setname, setshortName, setbirthDate, setAge, setfatherName, setmotherName, settaxPayerRegistry, setgenderId, setmaritalStatusId, setmaritalAgreementId,\r\n        setnationality, setcountryBirthId, setstateBirthId, setstateBirthName, setprofessionalOccupationId, setresidenceInOtherCountryId,\r\n        setotherTaxResidenceCountryId, seteducationLevelId, setppeOccupation, setusPerson, setisAssociatedPerson, setisAdministratorInAnotherAccount\r\n    } = useContext(ClientInfoContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações do cliente' : 'Customer information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        dateInvalid: languagePT ? 'Selecione uma data valida' : 'Select a valid date',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        shortName: languagePT ? 'Apelido' : 'ShortName',\r\n        birthDate: languagePT ? 'Data de Nascimento' : 'BirthDate',\r\n        fatherName: languagePT ? 'Nome do Pai' : 'Father Name',\r\n        motherName: languagePT ? 'Nome da Mãe' : 'Mother Name',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        genderId: languagePT ? 'Genero' : 'Gender',\r\n        maritalStatusId: languagePT ? 'Estado civil' : 'Marital Status',\r\n        maritalAgreementId: languagePT ? 'Regime do estado civil' : 'Marital Agreement',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        countryBirthId: languagePT ? 'País de nascimento' : 'Country Birth',\r\n        stateBirthId: languagePT ? 'UF de nascimento do cliente' : 'State Birth',\r\n        stateBirthName: languagePT ? 'Nome UF de nascimento' : 'State Birth Name',\r\n        professionalOccupationId: languagePT ? 'Natureza da ocupação' : 'Professional Occupation',\r\n        residenceInOtherCountryId: languagePT ? 'País ao cliente que possui residencia em outros países' : 'Residence in Other Country',\r\n        otherTaxResidenceCountryId: languagePT ? 'País ao cliente que possui domicílio fiscal além do declarado' : 'Other Tax Residence Country',\r\n        residenceInOtherCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        otherTaxResidenceCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        educationLevelId: languagePT ? 'Escolaridade' : 'Education Level',\r\n        ppeOccupation: languagePT ? 'Cargo PPE do cliente, se o mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n        usPerson: languagePT ? 'Cliente considerado como USPerson' : 'Considered as USPerson',\r\n        isAssociatedPerson: languagePT ? 'Pessoa Vinculada' : 'Associated Person',\r\n        isAdministratorInAnotherAccount: languagePT ? 'Cliente realiza operações por conta de terceiros' : 'Customer performs operations on behalf of third parties',\r\n        urlCallback: languagePT ? '' : '',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador' : 'Authorizes the transmission of orders by proxy',\r\n    }\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value, selectedIndex, options } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'shortName':\r\n                setshortName(value)\r\n                break;\r\n            case 'birthDate':\r\n                setAge('')\r\n\r\n                const d = new Date()\r\n                const ano_atual = d.getFullYear()\r\n                const mes_atual = d.getMonth() + 1\r\n                const dia_atual = d.getDate()\r\n\r\n                const ano_aniversario = parseInt(value.split(\"-\")[0])\r\n                const mes_aniversario = parseInt(value.split(\"-\")[1])\r\n                const dia_aniversario = parseInt(value.split(\"-\")[2])\r\n\r\n                if (ano_aniversario >= parseInt(Min.split(\"-\")[0])) {\r\n                    let Qtd_Anos = ano_atual - ano_aniversario\r\n                    if (mes_atual < mes_aniversario || mes_atual === mes_aniversario && dia_atual < dia_aniversario) {\r\n                        Qtd_Anos--\r\n                    }\r\n                    setAge(Qtd_Anos)\r\n                }\r\n                setbirthDate(value)\r\n                break;\r\n            case 'fatherName':\r\n                setfatherName(value)\r\n                break;\r\n            case 'motherName':\r\n                setmotherName(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'gender':\r\n                setgenderId(value)\r\n                break;\r\n            case 'maritalStatusId':\r\n                setmaritalStatusId(value)\r\n                if (value !== '2') setmaritalAgreementId('')\r\n                break;\r\n            case 'maritalAgreementId':\r\n                setmaritalAgreementId(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            case 'countryBirthId':\r\n                setcountryBirthId(value)\r\n                break;\r\n            case 'statesBirth':\r\n                const stateNameBirth = options[selectedIndex].getAttribute('statename')\r\n                // console.log(stateNameBirth)\r\n                setstateBirthId(value)\r\n                setstateBirthName(stateNameBirth)\r\n                break;\r\n            case 'professionalOccupationId':\r\n                setprofessionalOccupationId(value)\r\n                break;\r\n            case 'residenceInOtherCountryId':\r\n                setresidenceInOtherCountryId(value)\r\n                break;\r\n            case 'otherTaxResidenceCountryId':\r\n                setotherTaxResidenceCountryId(value)\r\n                break;\r\n            case 'educationLevel':\r\n                seteducationLevelId(value)\r\n                break;\r\n            case 'ppeOccupation':\r\n                setppeOccupation(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderGenders() {\r\n        return (\r\n            gendersIds.map(g => {\r\n                return (\r\n                    <option key={g.genderId} value={g.genderId}>{g.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalStatus() {\r\n        return (\r\n            maritalStatus.map(m => {\r\n                return (\r\n                    <option key={m.maritalStatusId} value={m.maritalStatusId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalAgreementId() {\r\n        return (\r\n            maritalAgreements.map(m => {\r\n                return (\r\n                    <option key={m.maritalAgreementId} value={m.maritalAgreementId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderCountriesBirth() {\r\n        return (\r\n            countriesBirthId.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            statesBirth.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderProfessionalOccupations() {\r\n        return (\r\n            professionalOccupationsId.map(pot => {\r\n                return (\r\n                    <option key={pot.professionalOccupationId} value={pot.professionalOccupationId}>{pot.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderResidencesInOtherCountry() {\r\n        return (\r\n            residencesInOtherCountryId.map(roc => {\r\n                return (\r\n                    <option key={roc.countryId} value={roc.countryId}>{roc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderOtherTaxResidencesCountry() {\r\n        return (\r\n            otherTaxResidencesCountryId.map(otrc => {\r\n                return (\r\n                    <option key={otrc.countryId} value={otrc.countryId}>{otrc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderEducationLevel() {\r\n        return (\r\n            educationsLevelId.map(ed => {\r\n                return (\r\n                    <option key={ed.educationLevelId} value={ed.educationLevelId}>{ed.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientInfo\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <input value={name} required type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={shortName} required type=\"text\" name=\"shortName\" id=\"shortName\" placeholder={Labels.shortName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.birthDate}</p>\r\n            <div className=\"d-flex\">\r\n                <input value={birthDate} required type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                    min={Min} max={Max} title={Labels.onlyLettersTitle} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <LegalRepresentativeProvider>\r\n                <LegalRepresentative />\r\n            </LegalRepresentativeProvider>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={fatherName} required type=\"text\" name=\"fatherName\" id=\"fatherName\" placeholder={Labels.fatherName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={motherName} required type=\"text\" name=\"motherName\" id=\"motherName\" placeholder={Labels.motherName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <InputMask value={taxPayerRegistry} required type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\" placeholder={Labels.taxPayerRegistry}\r\n                        mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeFields(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={genderId} required className=\"clSelect\" name=\"gender\" id=\"gender\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.genderId}</option>\r\n                    {RenderGenders()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={maritalStatusId} required className=\"clSelect\" name=\"maritalStatusId\" id=\"maritalStatusId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.maritalStatusId}</option>\r\n                    {RenderMaritalStatus()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <SpouseProvider>\r\n                <Spouse hide={maritalStatusId === '2' ? false : true} required={maritalStatusId === '2' ? true : false}>\r\n\r\n                    <div className={maritalStatusId === '2' ? \"d-flex\" : \"d-none\"}>\r\n                        <select value={maritalAgreementId} required={maritalStatusId === '2'} className=\"clSelect\" name=\"maritalAgreementId\" id=\"maritalAgreementId\" onChange={e => OnChangeFields(e)}>\r\n                            <option defaultValue value=\"\">{Labels.maritalAgreementId}</option>\r\n                            {RenderMaritalAgreementId()}\r\n                        </select>\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </Spouse>\r\n            </SpouseProvider>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={nationality} required type=\"text\" name=\"nationality\" id=\"nationality\" placeholder={Labels.nationality}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required className=\"clSelect\" name=\"countryBirthId\" id=\"countryBirthId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.countryBirthId}</option>\r\n                    {RenderCountriesBirth()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={stateBirthId} required className=\"clSelect\" name=\"statesBirth\" id=\"statesBirth\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.stateBirthName}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={professionalOccupationId} required className=\"clSelect\" name=\"professionalOccupationId\" id=\"professionalOccupationId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.professionalOccupationId}</option>\r\n                    {RenderProfessionalOccupations()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={educationLevelId} required className=\"clSelect\" name=\"educationLevel\" id=\"educationLevel\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.educationLevelId}</option>\r\n                    {RenderEducationLevel()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.residenceInOtherCountryId}</p>\r\n            <select value={residenceInOtherCountryId} className=\"clSelect\" name=\"residenceInOtherCountryId\" id=\"residenceInOtherCountryId\" onChange={e => OnChangeFields(e)}>\r\n                <option defaultValue value=\"\">{Labels.residenceInOtherCountryIdSelect}</option>\r\n                {RenderResidencesInOtherCountry()}\r\n            </select>\r\n\r\n            <p className=\"inputDescription\">{Labels.otherTaxResidenceCountryId}</p>\r\n            <select value={otherTaxResidenceCountryId} className=\"clSelect\" name=\"otherTaxResidenceCountryId\" id=\"otherTaxResidenceCountryId\" onChange={e => OnChangeFields(e)}>\r\n                <option defaultValue value=\"\">{Labels.otherTaxResidenceCountryIdSelect}</option>\r\n                {RenderOtherTaxResidencesCountry()}\r\n            </select>\r\n\r\n\r\n\r\n            <div>\r\n                <p className=\"inputDescription\">{Labels.ppeOccupation}</p>\r\n                <input value={ppeOccupation} type=\"text\" name=\"ppeOccupation\" id=\"ppeOccupation\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex df-jcspb d-flexdc\">\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.usPerson} ?</p>\r\n                    <Switch\r\n                        onColor=\"#fac580\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#474e5e\"\r\n                        offHandleColor=\"#000A1E\"\r\n                        checked={usPerson}\r\n                        onChange={cheked => setusPerson(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isAssociatedPerson} ?</p>\r\n                    <Switch\r\n                        onColor=\"#fac580\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#474e5e\"\r\n                        offHandleColor=\"#000A1E\"\r\n                        checked={isAssociatedPerson}\r\n                        onChange={cheked => setisAssociatedPerson(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isAdministratorInAnotherAccount} ?</p>\r\n                    <Switch\r\n                        onColor=\"#fac580\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#474e5e\"\r\n                        offHandleColor=\"#000A1E\"\r\n                        checked={isAdministratorInAnotherAccount}\r\n                        onChange={cheked => setisAdministratorInAnotherAccount(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { createContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    questions:[],\r\n    answers:[]\r\n}\r\n\r\nexport const FormSuityContext = createContext(InitialState);\r\n\r\nexport const FormSuityProvider = (props) => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState([])\r\n\r\n    useEffect(() => {\r\n        GetQuestions()\r\n        GetAnswers()\r\n    }, [])\r\n\r\n    function GetQuestions() {\r\n        axios.get(config._urlQuestions)\r\n            .then(res => { if (res.data) setQuestions(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function GetAnswers() {\r\n        axios.get(config._urlAnswers)\r\n            .then(res => { if (res.data) setAnswers(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <FormSuityContext.Provider\r\n            value={{\r\n                questions, answers\r\n            }}\r\n        >\r\n            {props.children}\r\n        </FormSuityContext.Provider>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport './index.css'\r\n\r\nimport { FaAngleDown } from \"react-icons/fa\";\r\n\r\nfunction Select(props) {\r\n    const [optionsToggle, setOptionsToggle] = useState(false)\r\n    const [options, setOptions] = useState([])\r\n    const [selectValueLabel, setSelectValueLabel] = useState('')\r\n\r\n    useEffect(() => {\r\n        setOptions(props.options)\r\n    }, [props.options])\r\n\r\n    function setValue(e) {\r\n        const value = e.target.getAttribute(\"value\")\r\n        const label = e.target.getAttribute(\"label\")\r\n        setOptionsToggle(!optionsToggle)\r\n        setSelectValueLabel(label)\r\n        props.OnChange({value, props: props.props})\r\n    }\r\n    function Blur(e) {\r\n        const { relatedTarget } = e\r\n        if (relatedTarget && relatedTarget.getAttribute('kind') === `options-select${props.id}`) { }\r\n        else if (relatedTarget && relatedTarget.getAttribute('kind') === `div-select${props.id}`) { }\r\n        else setOptionsToggle(false)\r\n    }\r\n    function renderOptions() {\r\n        return (\r\n            options.map(opt => {\r\n                return (\r\n                    <span onClick={e => setValue(e)} className=\"option\"\r\n                        key={opt[`${props.value}`]}\r\n                        value={opt[`${props.value}`]}\r\n                        label={opt[`${props.label}`]}>\r\n                        {opt[`${props.label}`]}\r\n                    </span>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"custom-select\" id=\"custom-select\" onClick={() => setOptionsToggle(!optionsToggle)}>\r\n            <div className=\"div-select\" onBlur={(e) => Blur(e)} tabIndex='-1' kind={`div-select${props.id}`}>\r\n                <span>{selectValueLabel === \"\" ? props.title : selectValueLabel}</span>\r\n                <input required={props.required} value={selectValueLabel === \"\" ? \"\" : selectValueLabel} title=\"Selecione um item da lista\" onChange={() =>{}}/>\r\n                <FaAngleDown className=\"icon-select\" onClick={() => setOptionsToggle(!optionsToggle)} />\r\n            </div>\r\n            <div className={optionsToggle ? \"options-select\" : \"d-none\"} tabIndex='0' kind={`options-select${props.id}`}>\r\n                {renderOptions()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Select;","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { FormSuityContext } from \"../../contexts/FormSuity\";\r\n\r\nimport Select from \"../Select\"\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT, _Json_FormSuity } = useContext(FormContext)\r\n    const { answers, questions } = useContext(FormSuityContext)\r\n\r\n    const Labels = {\r\n        answers: languagePT ? 'Selecionar uma resposta para a pergunta' : '',\r\n    }\r\n\r\n    let questionsAnswers = []\r\n\r\n    function OnChange(e){\r\n        const {value, props} = e\r\n        const req = {\r\n            questionId: parseInt(props.suityQuestionId),\r\n            answerId: parseInt(value)\r\n        }\r\n        questionsAnswers = questionsAnswers.filter(q => q.questionId !== parseInt(props.suityQuestionId))\r\n        questionsAnswers.push(req)\r\n        _Json_FormSuity(questionsAnswers)\r\n    }\r\n\r\n    function RenderQuestions() {\r\n        return (\r\n            questions.map((q,index) => {\r\n                return (\r\n                    <div className=\"div-question-answer\" key={q.suityQuestionId} id={q.suityQuestionId}>\r\n                        <span className=\"inputDescriptionTitle\">{q.question}</span>\r\n                        <div className=\"d-flex\">\r\n                            {/* <select className=\"selectpicker\" required name={q.suityQuestionId} id={q.suityQuestionId} onChange={e => OnChangeField(e)}>\r\n                                <option defaultValue value=\"\">{Labels.answers}</option>\r\n                                {RenderAnswers(q.suityQuestionId)}\r\n                            </select> */}\r\n                            <Select title={Labels.answers} required={true} id={index} props={{suityQuestionId: q.suityQuestionId}}\r\n                            options={answers.filter(a => a.suityQuestionId === q.suityQuestionId).map(a => a)} \r\n                            value=\"suityAnswerId\" label=\"answer\" OnChange={OnChange}/>\r\n                            <p className=\"required\">*</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n\r\n    // function RenderAnswers(QuestionId) {\r\n    //     const answersFiltered = answers.filter(a => a.suityQuestionId === QuestionId)\r\n    //     return (\r\n    //         answersFiltered.map(a => {\r\n    //             return (\r\n    //                 <option key={a.suityAnswerId} value={a.suityAnswerId} >{a.answer}</option>\r\n    //             )\r\n    //         })\r\n    //     )\r\n    // }\r\n\r\n    return (RenderQuestions())\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nimport Switch from \"react-switch\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport {ValidCPF} from '../../utils'\r\n\r\n\r\nexport default function Attorney() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Dados do procurador' : 'Attorney information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador ?' : 'Do you authorize the transmission of orders by a Attorney?',\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        birthDate: languagePT ? 'Nascimento' : 'BirthDate',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        actionDescription: languagePT ? 'Descrição dos poderes' : 'Description of powers',\r\n        isPEP: languagePT ? 'O mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n    }\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode,\r\n        isAcceptedOrderAttorney, setisAcceptedOrderAttorney, name, taxpayerRegistry,\r\n        isPEP, setisPEP, actionDescription, setactionDescription, setname, settaxpayerRegistry, setbirthDate } = useContext(AttorneyContext)\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'birthDate':\r\n                const birthDate = `${value}T00:00:00`\r\n                console.log(birthDate)\r\n                setbirthDate(birthDate)\r\n                break;\r\n            case 'taxpayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxpayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'actionDescription':\r\n                setactionDescription(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Attorney\">\r\n\r\n            <div className=\"d-flex d-flexdc df-alc\">\r\n                <p className=\"inputDescription\">{Labels.isAcceptedOrderAttorney}</p>\r\n                <Switch\r\n                    onColor=\"#fac580\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#474e5e\"\r\n                    offHandleColor=\"#000A1E\"\r\n                    checked={isAcceptedOrderAttorney}\r\n                    onChange={cheked => setisAcceptedOrderAttorney(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={20}\r\n                    width={50}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n            </div>\r\n\r\n            <div className={isAcceptedOrderAttorney ? \"d-flex d-flexdc\" : \"d-none\"}>\r\n                <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n\r\n                <div className=\"d-flex\">\r\n                    <input value={name} required={isAcceptedOrderAttorney} type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                        pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex\">\r\n                        <InputMask value={taxpayerRegistry} required={isAcceptedOrderAttorney} type=\"text\" name=\"taxpayerRegistry\" id=\"taxpayerRegistry\" \r\n                        placeholder={Labels.taxPayerRegistry} mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} \r\n                        onChange={e => OnChangeFields(e)} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                    <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <input required={isAcceptedOrderAttorney} type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                        min={Min} max={Max} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isPEP} ?</p>\r\n                    <Switch\r\n                        onColor=\"#fac580\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#474e5e\"\r\n                        offHandleColor=\"#000A1E\"\r\n                        checked={isPEP}\r\n                        onChange={cheked => setisPEP(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex\">\r\n                        <input required={isAcceptedOrderAttorney} value={actionDescription} type=\"text\" name=\"actionDescription\" id=\"actionDescription\"\r\n                            pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} placeholder={Labels.actionDescription} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"d-flex\">\r\n                    <Countries onSelectCountry={onSelectCountry} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <States onSelectState={onSelectState} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <Cities onSelectCity={onSelectCity} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <AdressUtils ClientAdress={false} Attorney={true}>\r\n                    <div className=\"d-flex\">\r\n                        <CEP onCollectCep={onCollectCep} ClientAdress={false} Attorney={true} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </AdressUtils>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { EmailContext } from '../../contexts/EmailContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function EmailType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { emailTypes, setType, setMail } = useContext(EmailContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Tipo de Email' : 'Select Email Type',\r\n        Email: languagePT ? 'Formato aceitado: example@domain.com' : 'Format accepted: example@domain.com'\r\n    }\r\n\r\n    function SelectTypeEmail(e) {\r\n        const { value } = e.target\r\n        setType(value)\r\n    }\r\n    function SetMail(e){\r\n        const { value } = e.target\r\n        setMail(value)\r\n    }\r\n    function RenderEmailType() {\r\n        return (\r\n            emailTypes.map(em => {\r\n                return (\r\n                    <option key={em.emailTypeId} value={em.emailTypeId}>{em.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divEmailTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">E-mail</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"emailType\" id=\"emailType\" onChange={e => SelectTypeEmail(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderEmailType()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required type=\"email\" placeholder=\"example@domain.com\"\r\n                    pattern=\"^[\\w._\\-]+@\\w+.com(.br)?\" title={Labels.Email} onChange={e => SetMail(e)}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WealthsTypeContext } from '../../contexts/Wealths';\r\n\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport CurrencyInput from 'react-currency-masked-input'\r\n\r\nimport './index.css'\r\n\r\nexport default function Wealths(props) {\r\n    const { languagePT, _Json_Wealths } = useContext(FormContext)\r\n\r\n    const { typeWealthId, value, description, settypeWealthId, setvalue, setdescription, typesWealthId } = useContext(WealthsTypeContext)\r\n    const { professionalOccupationId } = useContext(ClientInfoContext)\r\n    const [error, setError] = useState(false)\r\n\r\n    const [clientWealths, setClientWealths] = useState([])\r\n\r\n    const Labels = {\r\n        SelectWealthTypeId: languagePT ? 'Selecione tipo de bens/finanças para cadastro' : 'Select type of wealth/finances to register',\r\n        inputDescriptionTitle: languagePT ? 'Informações de bens/finanças para cadastro' : 'Wealths/Finances information for registration',\r\n        description: languagePT ? 'Descrição do bem/finança' : 'Wealths/Finances Description',\r\n        value: languagePT ? 'Valor do bem/finança' : 'Wealths/Finances Value',\r\n        addButtonDescription: languagePT ? 'CLIQUE PARA ADICIONAR O BEM/FINANÇA' : 'CLICK TO ADD A WEALTH/FINANCE'\r\n    }\r\n\r\n    let required = professionalOccupationId === \"8\" || professionalOccupationId === \"9\" ||\r\n        professionalOccupationId === \"\" ? false : true\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'wealthTypeId':\r\n                settypeWealthId(value)\r\n                break;\r\n            case 'wealthDescription':\r\n                setdescription(value)\r\n                break;\r\n            case 'wealthValue':\r\n                let valor = value + '';\r\n                valor = parseInt(valor.replace(/[\\D]+/g, ''));\r\n                valor = valor + '';\r\n                valor = valor.replace(/([0-9]{2})$/g, \".$1\");\r\n                setvalue(valor)\r\n                if (valor == 'NaN') setvalue('') \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderWealthTypes() {\r\n        return (\r\n            typesWealthId.map(tw => {\r\n                return (\r\n                    <option key={tw.wealthTypeId} value={tw.wealthTypeId}>{tw.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderClientWealths() {\r\n        return (\r\n            clientWealths.map((cw, index) => {\r\n                return (\r\n                    <div className=\"wealth\" key={`${cw.description}${index}`}>\r\n                        <div className=\"d-flex d-flexdc\">\r\n                            <span className=\"inputDescription\">Descrição: {cw.description}</span>\r\n                            <span className=\"inputDescription\">Valor: {cw.value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\")}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeClientWealth(index)}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addClientWealth() {\r\n        if (!typeWealthId || !description || !value) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            console.log(parseFloat(value))\r\n            console.log(typeof parseFloat(value))\r\n            let wealth = {\r\n                typeWealthId: parseInt(typeWealthId),\r\n                value: parseFloat(value),\r\n                description: description\r\n            }\r\n            setClientWealths([...clientWealths, wealth])\r\n            setdescription('')\r\n            setvalue('')\r\n        }\r\n    }\r\n    function removeClientWealth(i) {\r\n        setClientWealths(clientWealths.filter((c, index) => index !== i))\r\n    }\r\n\r\n    useEffect(() => {\r\n        required = professionalOccupationId === \"8\" || professionalOccupationId === \"9\" ||\r\n        professionalOccupationId === \"\" ? false : true\r\n        if(!required) _Json_Wealths([])\r\n    }, [professionalOccupationId])\r\n    useEffect(() => {\r\n        _Json_Wealths(clientWealths)\r\n    }, [clientWealths])\r\n\r\n    return (\r\n        <div className={required ? \"divWealthTypes\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">{Labels.inputDescriptionTitle}</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={required && clientWealths.length === 0} name=\"wealthTypeId\" id=\"wealthTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.SelectWealthTypeId}</option>\r\n                    {RenderWealthTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={required && clientWealths.length === 0} value={description} type=\"text\" name=\"wealthDescription\" id=\"wealthDescription\" placeholder={Labels.description}\r\n                    onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.value}</p>\r\n            {/* <div className=\"d-flex\"> */}\r\n            <div className=\"d-flex\">\r\n                <input type=\"text\" value={value} required={required && clientWealths.length === 0} name=\"wealthValue\" id=\"wealthValue\"\r\n                    placeholder=\"$0\" onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            {/* </div> */}\r\n\r\n            <div className=\"wealths\">\r\n                {RenderClientWealths()}\r\n            </div>\r\n            <div className=\"addButton\">\r\n                <button type=\"button\" onClick={() => addClientWealth()}>\r\n                    {Labels.addButtonDescription}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>Selecione um item da lista e Preencha os campos</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { PhonesContext } from \"../../contexts/PhonesContexts\";\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function PhoneType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { phoneTypes, setPhoneTypeId, phoneTypeId, setCountryCode,setNumber,setStateCode } = useContext(PhonesContext)\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Número de Telefone' : 'Phone number',\r\n        Select: languagePT ? 'Selecionar Tipo de Telefone' : 'Select Phone Type',\r\n        SelectError: languagePT ? 'Erro ao consultar Tipos de Telefone' : 'Error querying Phone Type',\r\n        Celnumber: languagePT ? 'Formato exigido: +DDI (DDD) 9XXXX-XXXX' : '',\r\n        Resnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : '',\r\n        Comnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : ''\r\n    }\r\n\r\n    function SelectTypePhone(e) {\r\n        const { value } = e.target\r\n        setPhoneTypeId(value)\r\n    }\r\n\r\n    function SetPhoneNumber(e){\r\n        const { value } = e.target\r\n        if(value.length >= 18){\r\n            const CountryCode = value.split(\" \")[0].replace(\"+\",\"\")\r\n            const StateCode = value.split(\" \")[1].replace(\"(\",\"\").replace(\")\",\"\")\r\n            const _Number = value.split(\" \")[2].replace(\"-\",\"\")\r\n            setCountryCode(CountryCode)\r\n            setStateCode(StateCode)\r\n            setNumber(_Number)\r\n        }\r\n    }\r\n\r\n    function RenderPhoneType() {\r\n        return (\r\n            phoneTypes.map(ph => {\r\n                return (\r\n                    <option key={ph.phoneTypeId} value={ph.phoneTypeId}>{ph.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divPhoneTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"phoneType\" id=\"phoneType\" onChange={e => SelectTypePhone(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderPhoneType()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <InputMask name=\"ResidencialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '1'} maskChar=\"\" title={Labels.Resnumber}\r\n            className={phoneTypeId === '1' ? '' : 'd-none'} mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\"/>\r\n\r\n            <InputMask name=\"ComercialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '2'} maskChar=\"\" title={Labels.Comnumber}\r\n            className={phoneTypeId === '2' ? '' : 'd-none'} mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\"/>\r\n\r\n            <InputMask name=\"CelNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '3'} maskChar=\"\" title={Labels.Celnumber}\r\n            className={phoneTypeId === '3' ? '' : 'd-none'} mask=\"+99 (99) 99999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{5}[-]\\d{4}\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WorkContext } from '../../contexts/Work';\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport {validarCNPJ} from '../../utils'\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport './index.css'\r\n\r\nexport default function Work(props) {\r\n    const [errorCNPJ, setErrorCNPJ] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setinstitutionName, setprofession, setoccupation, setcorporateTaxpayerRegistry,\r\n        institutionName, profession, occupation, corporateTaxpayerRegistry, setIsRequired } = useContext(WorkContext)\r\n    const { professionalOccupationId } = useContext(ClientInfoContext)\r\n\r\n    const required = professionalOccupationId === \"3\" || professionalOccupationId === \"6\" ||\r\n        professionalOccupationId === \"8\" || professionalOccupationId === \"9\" || professionalOccupationId === \"\" ? false : true\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [required])\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações Instituição de Trabalho' : 'Work Institution Information',\r\n        institutionName: languagePT ? 'Nome da instituição' : 'Institution Name',\r\n        onlyLettersAndNumbersTitle: languagePT ? 'Somente letras e numeros' : 'Only letters and numbers',\r\n        profession: languagePT ? 'Profissão' : 'Profession',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        corporateTaxpayerRegistry: languagePT ? 'CNPJ da instituição de trabalho' : 'CNPJ of the work institution',\r\n        cnpjTitle: languagePT ? 'Digite um cnpj valido' : 'Enter a valid cnpj',\r\n    }\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'institutionName':\r\n                setinstitutionName(value)\r\n                break;\r\n            case 'profession':\r\n                setprofession(value)\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'corporateTaxpayerRegistry':\r\n                setcorporateTaxpayerRegistry(value)\r\n                const cnpj = value.replace(/[^\\d]+/g, '');\r\n\r\n                if (cnpj.length < 14) setErrorCNPJ(false)\r\n                else if (cnpj.length === 14) {\r\n                    if (validarCNPJ(cnpj)) {\r\n                        setErrorCNPJ(false)\r\n                        setcorporateTaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        setcorporateTaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCNPJ(true)\r\n                    }\r\n                }\r\n                else if (cnpj.length > 14) {\r\n                    setErrorCNPJ(true)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={required ? \"divWork\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={institutionName} type=\"text\" name=\"institutionName\" id=\"institutionName\" placeholder={Labels.institutionName}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={profession} type=\"text\" name=\"profession\" id=\"profession\" placeholder={Labels.profession}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={occupation} type=\"text\" name=\"occupation\" id=\"occupation\" placeholder={Labels.occupation}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <InputMask required={required} value={corporateTaxpayerRegistry} type=\"text\" name=\"corporateTaxpayerRegistry\" id=\"corporateTaxpayerRegistry\" \r\n                    placeholder={Labels.corporateTaxpayerRegistry} pattern=\"^\\d{2}\\.?\\d{3}\\.?\\d{3}\\/?\\d{4}-?\\d{2}$\" mask=\"99.999.999/9999-99\" title={Labels.cnpjTitle} \r\n                    onChange={e => OnChangeField(e)} />\r\n\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCNPJ ? 'errorCNPJ' : 'd-none'}>{Labels.cnpjTitle}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/header.6afa50c1.png\";","import React from 'react';\r\nimport imgHeader from '../../assets/header.png'\r\n\r\nimport './index.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <div className=\"header-image\">\r\n                <a href=\"https://flow2pay.com.br/\">\r\n                    <img src={imgHeader} alt=\"FLOW2PAY-Logo-Padrao.png\" loading=\"lazy\" />\r\n                </a>\r\n            </div>\r\n\r\n            <div className=\"div-empty\">\r\n                <ul>\r\n                    <li>\r\n                        <a href=\"https://flow2pay.com.br/#quemsomos\">\r\n                            <span>Quem somos</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"https://flow2pay.com.br/#servico1\">\r\n                            <span>Serviços</span>\r\n                        </a>\r\n                    </li>\r\n                    {/* <li>\r\n                        <a href=\"https://flow2pay.com.br/en\">\r\n                            <span>EN-US</span>\r\n                        </a>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { useContext, useEffect } from 'react';\r\n\r\nimport { IdentificationTypeProvider } from './contexts/IdentificationTypeContexts';\r\nimport { FormContext } from './contexts/FormContexts';\r\nimport { AttorneyProvider } from './contexts/AttorneyContexts';\r\nimport { AdressesProvider } from './contexts/AdressesContexts'\r\nimport { BankAccountsProvider } from './contexts/BankContexts'\r\nimport { PhonesProvider } from './contexts/PhonesContexts';\r\nimport { EmailProvider } from './contexts/EmailContexts';\r\nimport { WealthsTypeProvider } from './contexts/Wealths';\r\nimport { WorkProvider } from './contexts/Work';\r\n\r\n\r\n\r\nimport IdentificationType from './components/IdentificationType';\r\nimport ClientAdress from './components/ClientAdress'\r\nimport BankAccounts from './components/BankAccounts';\r\nimport PPERelateds from './components/PPE Related';\r\nimport ClientInfo from './components/ClientInfo';\r\nimport FormSuity from './components/FormSuity';\r\nimport Attorney from './components/Attorney';\r\nimport EmailType from './components/Email';\r\nimport Wealths from './components/Wealths';\r\nimport Phones from './components/Phones';\r\nimport Work from './components/Work';\r\n\r\nimport './Global.css';\r\nimport { FormSuityProvider } from './contexts/FormSuity';\r\nimport { PPERelatedsProvider } from './contexts/PPERelatedsContext';\r\n\r\nimport { FaAngleLeft } from \"react-icons/fa\";\r\n\r\nimport Header from './template/header'\r\n\r\nfunction App() {\r\n    const { saveClient, languagePT, Clicked } = useContext(FormContext)\r\n    const Labels = {\r\n        HeaderTitle: languagePT ? \"Cadastro de Cliente\" : \"Customer registration\",\r\n        BackToSite: languagePT ? \"Voltar ao Site\" : \"Back to site\",\r\n        ButtonSave: languagePT ? \"Salvar\" : \"Save\"\r\n    }\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault()\r\n        saveClient()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <form onSubmit={e => onSubmit(e)} action=\"\" method=\"\" autoComplete=\"off\" id=\"form\">\r\n                <div className=\"div-infos\">\r\n\r\n                    <div className=\"div-client\">\r\n                        <ClientInfo />\r\n                        <div className=\"div-client-1\">\r\n                            <PhonesProvider>\r\n                                <Phones />\r\n                            </PhonesProvider>\r\n\r\n                            <IdentificationTypeProvider>\r\n                                <IdentificationType />\r\n                            </IdentificationTypeProvider>\r\n\r\n                            <EmailProvider>\r\n                                <EmailType />\r\n                            </EmailProvider>\r\n\r\n                            <AdressesProvider>\r\n                                <ClientAdress />\r\n                            </AdressesProvider>\r\n\r\n                            <PPERelatedsProvider>\r\n                                <PPERelateds />\r\n                            </PPERelatedsProvider>\r\n\r\n                            <WorkProvider>\r\n                                <Work />\r\n                            </WorkProvider>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"div-wealthsType\">\r\n                        <BankAccountsProvider>\r\n                            <BankAccounts />\r\n                        </BankAccountsProvider>\r\n\r\n                        <WealthsTypeProvider>\r\n                            <Wealths />\r\n                        </WealthsTypeProvider>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"div-attorney\">\r\n                        <AttorneyProvider>\r\n                            <Attorney />\r\n                        </AttorneyProvider>\r\n                    </div>\r\n\r\n                    <div className=\"div-formsuity\">\r\n                        <FormSuityProvider>\r\n                            <FormSuity />\r\n                        </FormSuityProvider>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"div-footer\">\r\n                    <button type=\"submit\" disabled={Clicked}>\r\n                        {Clicked ? \"\" : Labels.ButtonSave}\r\n                        <i className={Clicked ? \"fa fa-spinner fa-spin\" : \"d-none\"}/> {Clicked ? \"Aguarde\" : \"\"}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { FormProvider } from './contexts/FormContexts';\nimport { ClientInfoProvider } from './contexts/ClientInfoContexts';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Form from './form'\n\nimport './Global.css';\n\nfunction App() {\n  return (\n    <FormProvider>\n      <ClientInfoProvider>\n        <ToastContainer\n          position=\"top-right\" autoClose={2500}\n          hideProgressBar={false} newestOnTop={false}\n          closeOnClick rtl={false} pauseOnHover={false}\n          pauseOnVisibilityChange draggable\n          pauseOnFocusLoss={false}\n        />\n        <Form />\n      </ClientInfoProvider>\n    </FormProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}