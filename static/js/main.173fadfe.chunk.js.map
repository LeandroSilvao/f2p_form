{"version":3,"sources":["config.js","components/Toastify/index.jsx","components/Toastify/Toastify.js","contexts/FormContexts.jsx","contexts/ClientInfoContexts.jsx","contexts/IdentificationTypeContexts.jsx","contexts/AttorneyContexts.jsx","contexts/AdressesContexts.jsx","contexts/BankContexts.jsx","contexts/PhonesContexts.jsx","contexts/EmailContexts.jsx","contexts/Wealths.jsx","contexts/Work.jsx","components/IdentificationType/index.jsx","components/Countries/index.jsx","components/State/index.jsx","components/City/index.jsx","components/AdressType/index.jsx","components/Cep/index.jsx","components/AdressUtils/index.jsx","components/ClientAdress/index.jsx","components/BankAccounts/index.jsx","contexts/PPERelatedsContext.jsx","components/PPE Related/index.jsx","contexts/Spouse.jsx","utils.js","components/Spouse/index.jsx","contexts/LegalRepresentativeContexts.jsx","components/LegalRepresentative/index.jsx","components/ClientInfo/index.jsx","contexts/FormSuity.jsx","components/FormSuity/index.jsx","components/Attorney/index.jsx","components/Email/index.jsx","components/Wealths/index.jsx","components/Phones/index.jsx","components/Work/index.jsx","form.js","App.js","index.js"],"names":["proxy","config","_urlCountries","_urlStates","_urlCities","_urlAdressType","_urlPhoneType","_urlGenders","_urlMaritalStatus","_urlMaritalAgreement","_urlProfessionalOccupation","_urlEducation","_urlEmailType","_urlIdentificationType","_urlWealthType","_urlRelationshipType","_urlBankAccountType","_urlBankGetByCode","_urlBankGetById","_urlBank","_urlQuestions","_urlAnswers","_urlSaveClient","_urlGetPluralAccount","Toastify","className","this","props","description","Component","Error","id","text","autoClose","draggable","icon","toast","isActive","error","toastId","Warn","warn","InitialState","languagePT","Boolean","errorOnApi","_Json_ClientAddresses","obj","_Json_ClientInfo","_Json_AttorneyInfo","_Json_PhoneInfo","_Json_EmailInfo","_Json_ClientIdentification","_Json_Spouse","_Json_Work","_Json_Wealths","_Json_FormSuity","_Json_BankAccounts","_Json_LegalRepresentative","_Json_PPERelateds","saveClient","reqJSON","clientId","name","shortName","taxPayerRegistry","birthDate","fatherName","genderId","maritalStatusId","maritalAgreementId","motherName","nationality","countryBirthId","stateBirthId","stateBirthName","professionalOccupationId","residenceInOtherCountryId","otherTaxResidenceCountryId","educationLevelId","ppeOccupation","usPerson","isAssociatedPerson","urlCallback","isAcceptedOrderAttorney","isAdministratorInAnotherAccount","attorneys","spouse","document","work","phones","emails","bankAccounts","wealths","addresses","ppeRelateds","formSuity","legalRepresentatives","authentication","login","password","FormContext","createContext","FormProvider","useState","setLanguagePT","useEffect","window","location","pathname","split","filter","i","length","Provider","value","console","log","JSON","stringify","axios","post","then","res","data","clientCode","interval","setInterval","get","success","Success","clearInterval","catch","err","response","innerMessage","request","message","CheckClient","code","children","String","setname","setshortName","settaxPayerRegistry","setbirthDate","age","setAge","setfatherName","setgenderId","gendersIds","setmaritalStatusId","maritalStatus","maritalAgreements","setmotherName","getCountriesBirthId","setppeOccupation","setusPerson","setisAssociatedPerson","setisAdministratorInAnotherAccount","ClientInfoContext","ClientInfoProvider","useContext","setnationality","setgendersIds","setMaritalStatus","setmaritalAgreementId","setmaritalAgreements","setcountryBirthId","countriesBirthId","setcountriesBirthId","setstateBirthId","setstateBirthName","statesBirth","setstatesBirth","setprofessionalOccupationId","professionalOccupationsId","setprofessionalOccupationsId","setresidenceInOtherCountryId","residencesInOtherCountryId","setresidencesInOtherCountryId","setotherTaxResidenceCountryId","otherTaxResidencesCountryId","setotherTaxResidencesCountryId","seteducationLevelId","educationsLevelId","seteducationsLevelId","parseInt","identificationTypeId","number","emissionInssuer","emission","stateId","identificationTypes","setidentificationTypeId","setnumber","setemissionInssuer","setemission","setstateId","IdentificationTypeContext","IdentificationTypeProvider","setIdentificationTypes","states","setStates","taxpayerRegistry","settaxpayerRegistry","isPEP","setisPEP","actionDescription","setactionDescription","countryId","setCountryId","setStateId","stateName","setStateName","cityId","setCityId","cityName","setCityName","neighborhood","setneighborhood","setdescription","zipCode","setZipCode","complement","setcomplement","typeAddressId","setTypeAddressId","AttorneyContext","AttorneyProvider","setisAcceptedOrderAttorney","address","setNeighborhood","setDescription","zipcode","setNumber","setComplement","AdressesContext","AdressesProvider","AdressJson","bankId","agency","account","digit","typeAccountId","bankAccountTypes","banks","setbankId","setagency","setaccount","setdigit","settypeAccountId","BankAccountsContext","BankAccountsProvider","setBankAccountTypes","setBanks","newBanks","map","bank","push","GetBanks","phoneTypes","phoneTypeId","countryCode","stateCode","setPhoneTypeId","setCountryCode","setStateCode","PhonesContext","PhonesProvider","setPhoneTypes","type","mail","isCorrespondency","emailTypes","setMail","setType","setIsCorrespondency","EmailContext","EmailProvider","setEmailTypes","typeWealthId","typesWealthId","settypeWealthId","setvalue","WealthsTypeContext","WealthsTypeProvider","settypesWealthId","institutionName","occupation","profession","corporateTaxpayerRegistry","setinstitutionName","setoccupation","setprofession","setcorporateTaxpayerRegistry","setIsRequired","WorkContext","WorkProvider","isRequired","IdentificationType","Labels","componentTitle","Select","States","documentNumber","Max","Date","toISOString","Min","OnChangeField","e","target","required","onChange","defaultValue","idt","identifycationTypeId","placeholder","s","statename","min","max","Countries","countries","setCountries","Atctx","SelectError","Attorney","ClientAdress","onSelectCountry","c","Adctx","getStates","_countryId","onSelectState","Cities","cities","setCities","getCities","_stateId","onSelectCity","cityname","AdressType","adressType","setAdressType","onSelectTypeAddress","adt","addressTypeId","CEP","setError","CollectCep","maxLength","Cep","onCollectCep","test","ValidateCEP","AdressUtils","setInput","Adresses","selectedIndex","options","getAttribute","cep","BankAccounts","clientBankAccounts","setclientBankAccounts","selectItems","SelecttypeAccountId","SelectbankId","addAccount","bat","bankAccountTypeId","SelectSearch","search","filterOptions","fuse","Fuse","keys","threshold","array","item","emptyMessage","printOptions","closeOnSelect","index","find","b","onClick","addBankAccount","PPERelatedsContext","PPERelatedsProvider","reqJson","PPERelateds","errorCpf","setErrorCpf","PPERelated","setPPERelated","cpfTitle","onlyLettersTitle","cpf","Soma","Resto","includes","replace","substring","ValidCPF","onColor","offColor","onHandleColor","offHandleColor","checked","cheked","handleDiameter","boxShadow","activeBoxShadow","height","width","pattern","title","onlyLettersAndNumbersTitle","setHide","SpouseContext","SpouseProvider","spouseId","hide","Spouse","emissionDoc","mask","relationshipTypeId","relationshipTypesId","setRelationshipTypeId","LegalRepresentativeContext","LegalRepresentativeProvider","setRelationshipTypesId","Work","legalRepresentativeName","legalRepresentativeTaxpayerRegistry","reltid","ClientInfo","dateInvalid","residenceInOtherCountryIdSelect","otherTaxResidenceCountryIdSelect","OnChangeFields","d","ano_atual","getFullYear","mes_atual","getMonth","dia_atual","getDate","ano_aniversario","mes_aniversario","dia_aniversario","Qtd_Anos","stateNameBirth","g","m","pot","ed","roc","otrc","questions","answers","FormSuityContext","FormSuityProvider","setQuestions","setAnswers","questionsAnswers","q","suityQuestionId","question","req","questionId","answerId","QuestionId","a","suityAnswerId","answer","EmailType","Email","SelectTypeEmail","em","emailTypeId","SetMail","Wealths","clientWealths","setClientWealths","SelectWealthTypeId","inputDescriptionTitle","addButtonDescription","valor","tw","wealthTypeId","cw","wealth","parseFloat","toFixed","addClientWealth","PhoneType","Celnumber","Resnumber","Comnumber","SetPhoneNumber","CountryCode","StateCode","_Number","SelectTypePhone","ph","maskChar","errorCNPJ","setErrorCNPJ","cnpjTitle","cnpj","tamanho","numeros","digitos","soma","pos","charAt","resultado","validarCNPJ","App","onSubmit","preventDefault","action","method","autoComplete","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnHover","pauseOnVisibilityChange","pauseOnFocusLoss","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.173fadfe.chunk.js","sourcesContent":["const proxy = \"https://8147975a629e.ngrok.io\"\r\n// const proxy = \"http://localhost:2525/\"\r\n// const proxy = \"https://cors-anywhere.herokuapp.com/\"\r\n\r\nconst config = {\r\n    _urlCountries: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Country\",\r\n    _urlStates: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/State/GetByCountryId/\",\r\n    _urlCities: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/City/GetByStateId/\",\r\n    _urlAdressType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/AddressType\",\r\n    _urlPhoneType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/PhoneType\",\r\n    _urlGenders: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Gender\",\r\n    _urlMaritalStatus: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/MaritalStatus\",\r\n    _urlMaritalAgreement: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/MaritalAgreement\",\r\n    _urlProfessionalOccupation: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/ProfessionalOccupation\",\r\n    _urlEducation: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Education\",\r\n    _urlEmailType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/EmailType\",\r\n    _urlIdentificationType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/IdentificationType\",\r\n    _urlWealthType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/WealthType\",\r\n    _urlRelationshipType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/RelationshipType\",\r\n    _urlBankAccountType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/BankAccountType\",\r\n    _urlBankGetByCode: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Bank/GetByCode/\",\r\n    _urlBankGetById: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Bank/GetById/\",\r\n    _urlBank: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Bank\",\r\n    _urlQuestions: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Suity/Questions\",\r\n    _urlAnswers: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Suity/Answers\",\r\n    _urlSaveClient: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/Save\",\r\n    _urlGetPluralAccount: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/GetPluralAccount/\"\r\n}\r\n\r\nexport default config","/* eslint-disable no-empty */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Toastify extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex df-jcspb\">\r\n                <div className=\"mr-3\">\r\n                <i className={this.props.className} />\r\n                </div>\r\n                <span> {this.props.description}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport Toastify from \"./index\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction Success(id,text,autoClose=2500,draggable = true,icon = 'fas fa-check'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.success(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable  }\r\n          );\r\n    }\r\n}\r\nfunction Error(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-triangle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.error(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\nfunction Warn(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-circle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.warn(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\n\r\nexport { Success, Error, Warn }","import { createContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\n\r\nimport { Error, Success, Warn } from '../components/Toastify/Toastify'\r\n\r\nconst InitialState = {\r\n  languagePT: Boolean,\r\n  errorOnApi: Boolean,\r\n  _Json_ClientAddresses: (obj) => { },\r\n  _Json_ClientInfo: (obj) => { },\r\n  _Json_AttorneyInfo: (obj) => { },\r\n  _Json_PhoneInfo: (obj) => { },\r\n  _Json_EmailInfo: (obj) => { },\r\n  _Json_ClientIdentification: (obj) => { },\r\n  _Json_Spouse: (obj) => { },\r\n  _Json_Work: (obj) => { },\r\n  _Json_Wealths: (obj) => { },\r\n  _Json_FormSuity: (obj) => { },\r\n  _Json_BankAccounts: (obj) => { },\r\n  _Json_LegalRepresentative: (obj) => { },\r\n  _Json_PPERelateds: (obj) => { },\r\n  saveClient: () => { }\r\n}\r\n\r\nlet reqJSON = {\r\n  clientId: 0,\r\n  name: '',\r\n  shortName: '',\r\n  taxPayerRegistry: '',\r\n  birthDate: '',\r\n  fatherName: '',\r\n  genderId: 0,\r\n  maritalStatusId: 0,\r\n  maritalAgreementId: 0,\r\n  motherName: '',\r\n  nationality: '',\r\n  countryBirthId: 0,\r\n  stateBirthId: 0,\r\n  stateBirthName: '',\r\n  professionalOccupationId: 0,\r\n  residenceInOtherCountryId: 0,\r\n  otherTaxResidenceCountryId: 0,\r\n  educationLevelId: 0,\r\n  ppeOccupation: '',\r\n  usPerson: false,\r\n  isAssociatedPerson: false,\r\n  urlCallback: '',\r\n  isAcceptedOrderAttorney: false,\r\n  isAdministratorInAnotherAccount: false,\r\n  attorneys: [],\r\n  spouse: {},\r\n  document: {},\r\n  work: {},\r\n  phones: [],\r\n  emails: [],\r\n  bankAccounts: [],\r\n  wealths: [],\r\n  addresses: [],\r\n  ppeRelateds: [],\r\n  formSuity: [],\r\n  legalRepresentatives: [],\r\n  authentication: {\r\n    login: 'APITEST',\r\n    password: 'APITEST'\r\n  }\r\n}\r\n\r\nexport const FormContext = createContext(InitialState);\r\n\r\nexport const FormProvider = (props) => {\r\n  const [languagePT, setLanguagePT] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const url = window.location.pathname.split(\"/\")\r\n    const enUS = url.filter(i => i === 'en')\r\n    if (enUS.length > 0) setLanguagePT(false)\r\n    else setLanguagePT(true)\r\n  }, [])\r\n\r\n\r\n\r\n  function _Json_ClientAddresses(obj) {\r\n    reqJSON.addresses = [obj]\r\n  }\r\n  function _Json_ClientInfo(obj) {\r\n    reqJSON = { ...reqJSON, ...obj }\r\n  }\r\n  function _Json_AttorneyInfo(obj) {\r\n    reqJSON.attorneys = [obj]\r\n  }\r\n  function _Json_PhoneInfo(obj) {\r\n    reqJSON.phones = [obj]\r\n  }\r\n  function _Json_EmailInfo(obj) {\r\n    reqJSON.emails = [obj]\r\n  }\r\n  function _Json_ClientIdentification(obj) {\r\n    reqJSON.document = obj\r\n  }\r\n  function _Json_Spouse(obj) {\r\n    reqJSON.spouse = obj\r\n  }\r\n  function _Json_Work(obj) {\r\n    reqJSON.work = obj\r\n  }\r\n  function _Json_Wealths(obj) {\r\n    reqJSON.wealths = obj\r\n  }\r\n  function _Json_FormSuity(obj) {\r\n    reqJSON.formSuity = obj\r\n  }\r\n  function _Json_PPERelateds(obj) {\r\n    reqJSON.ppeRelateds = [obj]\r\n  }\r\n  function _Json_BankAccounts(obj) {\r\n    reqJSON.bankAccounts = obj\r\n  }\r\n  function _Json_LegalRepresentative(obj) {\r\n    reqJSON.legalRepresentatives = [obj]\r\n  }\r\n  function saveClient() {\r\n    if (reqJSON.bankAccounts.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione uma conta bancaria' : 'Add a bank account'\r\n      Warn(\r\n        \"Addbankaccount\",\r\n        ErrorMessage,\r\n        5000,\r\n        false\r\n      );\r\n    }\r\n    else if (reqJSON.wealths.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione um bem/finança' : 'Add a wealth / finance'\r\n      Warn(\r\n        \"Addwealth/finance\",\r\n        ErrorMessage,\r\n        5000,\r\n        false\r\n      );\r\n    }\r\n    else {\r\n      console.log(JSON.stringify(reqJSON))\r\n      axios.post(config._urlSaveClient, reqJSON)\r\n        .then(res => {\r\n          if (res.data) {\r\n            // console.log(res.data)\r\n            CheckClient(res.data.code)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (err.request || err.response) {\r\n            // The request was made but no response was received\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              5000,\r\n              false\r\n            );\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              5000,\r\n              false\r\n            );\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  function CheckClient(clientCode) {\r\n    const interval = setInterval(() => {\r\n      axios.get(`${config._urlGetPluralAccount}${clientCode}`)\r\n        .then(res => {\r\n          if (res.data.clientCode) {\r\n            // Cliente cadastrado com sucesso\r\n            const SuccessMessage = languagePT ? 'Cadastro Concluido com Sucesso' : 'Registration Completed Successfully'\r\n            Success('ClientCreated', SuccessMessage, 5000, false)\r\n            clearInterval(interval)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (err.response) {\r\n            // Request made and server responded\r\n            if (err.response.data.innerMessage) {\r\n              const WarnMessage = languagePT ? 'O cadastro está na fila de análise/aprovação interna' : 'The registration is in the internal review / approval queue'\r\n              Warn(\r\n                \"RegistryInQueue\",\r\n                WarnMessage,\r\n                5000,\r\n                false\r\n              );\r\n            }\r\n          }\r\n          else if (err.request) {\r\n            // The request was made but no response was received\r\n            console.log(err.request);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              5000,\r\n              false\r\n            );\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              5000,\r\n              false\r\n            );\r\n          }\r\n        })\r\n    }, 5000);\r\n\r\n  }\r\n\r\n  return (\r\n    <FormContext.Provider\r\n      value={{\r\n        languagePT,\r\n        _Json_ClientAddresses,\r\n        _Json_ClientInfo,\r\n        _Json_AttorneyInfo,\r\n        _Json_PhoneInfo,\r\n        _Json_EmailInfo,\r\n        _Json_ClientIdentification,\r\n        _Json_Spouse,\r\n        _Json_Work,\r\n        _Json_Wealths,\r\n        _Json_LegalRepresentative,\r\n        _Json_BankAccounts,\r\n        _Json_FormSuity,\r\n        _Json_PPERelateds,\r\n        saveClient\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FormContext.Provider>\r\n  );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    name: String,\r\n    setname: () => { },\r\n    shortName: String,\r\n    setshortName: () => { },\r\n    taxPayerRegistry: String,\r\n    settaxPayerRegistry: () => { },\r\n    birthDate: String,\r\n    setbirthDate: () => { },\r\n    age: String,\r\n    setAge: () => { },\r\n    fatherName: String,\r\n    setfatherName: () => { },\r\n    genderId: String,\r\n    setgenderId: () => { },\r\n    gendersIds: [],\r\n    maritalStatusId: String,\r\n    setmaritalStatusId: () => { },\r\n    maritalStatus: [],\r\n    maritalAgreementId: String,\r\n    maritalAgreements: [],\r\n    motherName: String,\r\n    setmotherName: () => { },\r\n    nationality: String,\r\n    countryBirthId: String,\r\n    getCountriesBirthId: () => { },\r\n    stateBirthId: String,\r\n    stateBirthName: String,\r\n    professionalOccupationId: String,\r\n    residenceInOtherCountryId: String,\r\n    otherTaxResidenceCountryId: String,\r\n    educationLevelId: String,\r\n    ppeOccupation: String,\r\n    setppeOccupation: () => { },\r\n    usPerson: String,\r\n    setusPerson: () => { },\r\n    isAssociatedPerson: String,\r\n    setisAssociatedPerson: () => { },\r\n    urlCallback: String,\r\n    isAcceptedOrderAttorney: String,\r\n    isAdministratorInAnotherAccount: String,\r\n    setisAdministratorInAnotherAccount: () => { }\r\n}\r\nexport const ClientInfoContext = createContext(InitialState);\r\n\r\nexport const ClientInfoProvider = (props) => {\r\n    const {_Json_ClientInfo} = useContext(FormContext)\r\n\r\n    //#region States\r\n\r\n    const [clientId, setclientId] = useState(0)\r\n    const [name, setname] = useState('')\r\n    const [shortName, setshortName] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [age, setAge] = useState('')\r\n    const [fatherName, setfatherName] = useState('')\r\n    const [motherName, setmotherName] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    //! Gender variables\r\n    const [genderId, setgenderId] = useState('')\r\n    const [gendersIds, setgendersIds] = useState([])\r\n    //! Marital variables\r\n    const [maritalStatusId, setmaritalStatusId] = useState('')\r\n    const [maritalStatus, setMaritalStatus] = useState([])\r\n    const [maritalAgreementId, setmaritalAgreementId] = useState('')\r\n    const [maritalAgreements, setmaritalAgreements] = useState([])\r\n    //! Country and state birth variables\r\n    const [countryBirthId, setcountryBirthId] = useState('')\r\n    const [countriesBirthId, setcountriesBirthId] = useState([])\r\n    const [stateBirthId, setstateBirthId] = useState('')\r\n    const [stateBirthName, setstateBirthName] = useState('')\r\n    const [statesBirth, setstatesBirth] = useState([])\r\n    //! Professional ocupation variables\r\n    const [professionalOccupationId, setprofessionalOccupationId] = useState('')\r\n    const [professionalOccupationsId, setprofessionalOccupationsId] = useState([])\r\n    //! Residence in other country variables\r\n    const [residenceInOtherCountryId, setresidenceInOtherCountryId] = useState('')\r\n    const [residencesInOtherCountryId, setresidencesInOtherCountryId] = useState([])\r\n    //! Other tax residence in other country variables\r\n    const [otherTaxResidenceCountryId, setotherTaxResidenceCountryId] = useState('')\r\n    const [otherTaxResidencesCountryId, setotherTaxResidencesCountryId] = useState([])\r\n    //! Education level variables\r\n    const [educationLevelId, seteducationLevelId] = useState('')\r\n    const [educationsLevelId, seteducationsLevelId] = useState([])\r\n    const [ppeOccupation, setppeOccupation] = useState('')\r\n    const [usPerson, setusPerson] = useState(false)\r\n    const [isAssociatedPerson, setisAssociatedPerson] = useState(false)\r\n    const [isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount] = useState(false)\r\n\r\n    //#endregion\r\n\r\n    const reqJSON = {\r\n        clientId: clientId,\r\n        name: name,\r\n        shortName: shortName,\r\n        taxPayerRegistry: taxPayerRegistry,\r\n        birthDate: `${birthDate}T00:00:00`,\r\n        fatherName: fatherName,\r\n        genderId: parseInt(genderId),\r\n        maritalStatusId: parseInt(maritalStatusId),\r\n        maritalAgreementId: maritalAgreementId ? parseInt(maritalAgreementId) : 0,\r\n        motherName: motherName,\r\n        nationality: nationality,\r\n        countryBirthId: parseInt(countryBirthId),\r\n        stateBirthId: parseInt(stateBirthId),\r\n        stateBirthName: stateBirthName,\r\n        professionalOccupationId: parseInt(professionalOccupationId),\r\n        residenceInOtherCountryId: parseInt(residenceInOtherCountryId),\r\n        otherTaxResidenceCountryId: parseInt(otherTaxResidenceCountryId),\r\n        educationLevelId: parseInt(educationLevelId),\r\n        ppeOccupation: ppeOccupation,\r\n        usPerson: usPerson,\r\n        isAssociatedPerson: isAssociatedPerson,\r\n        isAdministratorInAnotherAccount: isAdministratorInAnotherAccount,\r\n    }\r\n\r\n    // Campos não obrigatórios\r\n    useEffect(() => {\r\n        _Json_ClientInfo(reqJSON)\r\n    }, [usPerson, isAssociatedPerson,ppeOccupation, maritalAgreementId, otherTaxResidenceCountryId,residenceInOtherCountryId])\r\n\r\n    // Campos obrigatórios\r\n    useEffect(() => {\r\n        if (name && shortName && birthDate && fatherName && motherName && taxPayerRegistry && genderId && maritalStatusId && nationality && countryBirthId &&\r\n            stateBirthId && stateBirthName && professionalOccupationId  && educationLevelId) {\r\n            _Json_ClientInfo(reqJSON)\r\n        }\r\n    }, [name, shortName, birthDate, fatherName, motherName, taxPayerRegistry, genderId, maritalStatusId, nationality, countryBirthId,\r\n        stateBirthId, stateBirthName, professionalOccupationId, educationLevelId])\r\n\r\n\r\n    useEffect(() => {\r\n            getGendersIds()\r\n            getMaritalStatus()\r\n            getMaritalAgreements()\r\n            getCountries()\r\n            getProfessionalOccupations()\r\n            getEducation()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(countryBirthId === '') setstatesBirth([])\r\n        else getStatesBirth() \r\n    }, [countryBirthId])\r\n\r\n\r\n    function getGendersIds() {\r\n        axios.get(config._urlGenders)\r\n            .then(res => setgendersIds(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalStatus() {\r\n        axios.get(config._urlMaritalStatus)\r\n            .then(res => setMaritalStatus(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalAgreements() {\r\n        axios.get(config._urlMaritalAgreement)\r\n            .then(res => setmaritalAgreements(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => {\r\n                setcountriesBirthId(res.data)\r\n                setresidencesInOtherCountryId(res.data)\r\n                setotherTaxResidencesCountryId(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getStatesBirth() {\r\n        axios.get(`${config._urlStates}${countryBirthId}`)\r\n            .then(res => setstatesBirth(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getProfessionalOccupations() {\r\n        axios.get(config._urlProfessionalOccupation)\r\n            .then(res => setprofessionalOccupationsId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getEducation() {\r\n        axios.get(config._urlEducation)\r\n            .then(res => seteducationsLevelId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <ClientInfoContext.Provider\r\n            value={{\r\n                name, setname,\r\n                shortName, setshortName,\r\n                taxPayerRegistry, settaxPayerRegistry,\r\n                birthDate, setbirthDate, age, setAge,\r\n                fatherName, setfatherName,\r\n                motherName, setmotherName,\r\n                genderId, setgenderId, gendersIds,\r\n                maritalStatusId, setmaritalStatusId, maritalStatus,\r\n                maritalAgreements, setmaritalAgreementId,\r\n                nationality, setnationality,\r\n                setcountryBirthId, countriesBirthId,\r\n                setstateBirthId, setstateBirthName, statesBirth,\r\n                setprofessionalOccupationId, professionalOccupationsId,professionalOccupationId,\r\n                residencesInOtherCountryId, setresidenceInOtherCountryId,\r\n                otherTaxResidencesCountryId, setotherTaxResidenceCountryId,\r\n                seteducationLevelId, educationsLevelId,\r\n                ppeOccupation,setppeOccupation,\r\n                usPerson, setusPerson,\r\n                isAssociatedPerson, setisAssociatedPerson,\r\n                isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ClientInfoContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from '../contexts/FormContexts'\r\nimport { ClientInfoContext } from \"./ClientInfoContexts\"\r\n\r\nconst InitialState = {\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n}\r\n\r\nexport const IdentificationTypeContext = createContext(InitialState);\r\n\r\nexport const IdentificationTypeProvider = (props) => {\r\n\r\n    const { _Json_ClientIdentification } = useContext(FormContext)\r\n    const { taxPayerRegistry } = useContext(ClientInfoContext)\r\n\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    let reqJSON = {\r\n        identificationTypeId: parseInt(identificationTypeId),\r\n        number: number,\r\n        emissionInssuer: emissionInssuer,\r\n        emission: `${emission}T00:00:00`,\r\n        stateId: parseInt(stateId),\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (identificationTypeId && emissionInssuer && emission && stateId) {\r\n            if (identificationTypeId === \"40\") {\r\n                setnumber(taxPayerRegistry)\r\n                _Json_ClientIdentification(reqJSON)\r\n            }\r\n            else if (number) _Json_ClientIdentification(reqJSON)\r\n        }\r\n    }, [identificationTypeId, number, emissionInssuer, emission, stateId,taxPayerRegistry])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <IdentificationTypeContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                setnumber,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states\r\n            }}\r\n        >\r\n            {props.children}\r\n        </IdentificationTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    isAcceptedOrderAttorney: false,\r\n    name: '',\r\n    setname: () => { },\r\n    taxpayerRegistry: '',\r\n    settaxpayerRegistry: () => { },\r\n    birthDate: '',\r\n    setbirthDate: () => { },\r\n    isPEP: false,\r\n    setisPEP: () => { },\r\n    actionDescription: '',\r\n    setactionDescription: () => { },\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setneighborhood: () => { },\r\n    description: '',\r\n    setdescription: () => { },\r\n    zipCode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setnumber: () => { },\r\n    complement: '',\r\n    setcomplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { },\r\n}\r\nexport const AttorneyContext = createContext(InitialState);\r\n\r\nexport const AttorneyProvider = (props) => {\r\n    const [isAcceptedOrderAttorney, setisAcceptedOrderAttorney] = useState(false)\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [isPEP, setisPEP] = useState(false)\r\n    const [actionDescription, setactionDescription] = useState('')\r\n    const [countryId, setCountryId] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setneighborhood] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const [zipCode, setZipCode] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [complement, setcomplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_AttorneyInfo } = useContext(FormContext)\r\n\r\n    const attorneys = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry,\r\n        birthDate: birthDate,\r\n        isPEP: isPEP,\r\n        actionDescription: actionDescription,\r\n        address: {\r\n            countryId: countryId,\r\n            stateId: stateId,\r\n            stateName: stateName,\r\n            cityId: cityId,\r\n            cityName: cityName,\r\n            neighborhood: neighborhood,\r\n            description: description,\r\n            zipCode: zipCode,\r\n            number: number,\r\n            complement: complement,\r\n            typeAddressId: typeAddressId\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(!isAcceptedOrderAttorney) _Json_AttorneyInfo({})\r\n        else if (isAcceptedOrderAttorney && name && taxpayerRegistry && birthDate && actionDescription && countryId && stateId && stateName && cityId && cityName &&\r\n            neighborhood && description && zipCode && number && complement && typeAddressId) {\r\n            _Json_AttorneyInfo(attorneys)\r\n        }\r\n    }, [isAcceptedOrderAttorney, name, taxpayerRegistry, birthDate, isPEP, actionDescription, countryId, stateId, stateName, cityId, cityName,\r\n        neighborhood, description, zipCode, number, complement, typeAddressId])\r\n\r\n    return (\r\n        <AttorneyContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, birthDate, isPEP, actionDescription,\r\n                countryId, isAcceptedOrderAttorney, stateId,\r\n                setisAcceptedOrderAttorney, setname, settaxpayerRegistry,\r\n                setbirthDate, setisPEP, setactionDescription,\r\n                setCountryId, setStateId, setStateName, setCityId, setneighborhood,\r\n                setCityName, setTypeAddressId, setZipCode, setdescription, setnumber, setcomplement\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AttorneyContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setNeighborhood: () => { },\r\n    description: '',\r\n    setDescription: () => { },\r\n    zipcode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setNumber: () => { },\r\n    complement: '',\r\n    setComplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { }\r\n}\r\nexport const AdressesContext = createContext(InitialState);\r\n\r\nexport const AdressesProvider = (props) => {\r\n    const [countryId, setCountryId] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [zipcode, setZipCode] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setNeighborhood] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [complement, setComplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_ClientAddresses } = useContext(FormContext)\r\n\r\n    const AdressJson = {\r\n        \"countryId\": countryId,\r\n        \"stateId\": stateId,\r\n        \"stateName\": stateName,\r\n        \"cityId\": cityId,\r\n        \"cityName\": cityName,\r\n        \"neighborhood\": neighborhood,\r\n        \"description\": description,\r\n        \"zipCode\": zipcode,\r\n        \"number\": number,\r\n        \"complement\": complement,\r\n        \"typeAddressId\": typeAddressId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cityId && cityName && complement && countryId && description && neighborhood && number && stateId && stateName && typeAddressId && zipcode) {\r\n            _Json_ClientAddresses(AdressJson)\r\n        }\r\n    }, [cityId, cityName, complement, countryId, description, neighborhood, number, stateId, stateName, typeAddressId, zipcode])\r\n\r\n    return (\r\n        <AdressesContext.Provider\r\n            value={{\r\n                countryId,\r\n                setCountryId,\r\n                stateId,\r\n                setStateId,\r\n                setStateName,\r\n                cityId,\r\n                setCityId,\r\n                setCityName,\r\n                zipcode,\r\n                setZipCode,\r\n                stateName,\r\n                cityName,\r\n                neighborhood,\r\n                setNeighborhood,\r\n                description,\r\n                setDescription,\r\n                number,\r\n                setNumber,\r\n                complement,\r\n                setComplement,\r\n                typeAddressId,\r\n                setTypeAddressId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AdressesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    bankId: '',\r\n    agency: '',\r\n    account: '',\r\n    digit: '',\r\n    typeAccountId: '',\r\n    bankAccountTypes: [],\r\n    banks: [],\r\n    setbankId: () => { },\r\n    setagency: () => { },\r\n    setaccount: () => { },\r\n    setdigit: () => { },\r\n    settypeAccountId: () => { }\r\n}\r\n\r\nexport const BankAccountsContext = createContext(InitialState);\r\n\r\nexport const BankAccountsProvider = (props) => {\r\n    const [bankId, setbankId] = useState('')\r\n    const [agency, setagency] = useState('')\r\n    const [account, setaccount] = useState('')\r\n    const [digit, setdigit] = useState('')\r\n    const [typeAccountId, settypeAccountId] = useState('')\r\n\r\n\r\n    const [bankAccountTypes, setBankAccountTypes] = useState([])\r\n    const [banks, setBanks] = useState([])\r\n\r\n    useEffect(() => {\r\n        GetAccountTypes()\r\n        GetBanks()\r\n    }, [])\r\n\r\n    function GetAccountTypes() {\r\n        axios.get(config._urlBankAccountType)\r\n            .then(res => { if (res.data) setBankAccountTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function GetBanks() {\r\n        const newBanks = []\r\n        axios.get(config._urlBank)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    res.data.map(i => {\r\n                        const bank = { name: `${i.code} ${i.name}`, value: `${i.bankId}` }\r\n                        newBanks.push(bank)\r\n                    })\r\n                }\r\n            })\r\n            .then(res => {\r\n                setBanks(newBanks)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <BankAccountsContext.Provider\r\n            value={{\r\n                bankAccountTypes, banks,\r\n                bankId, setbankId,\r\n                agency, setagency,\r\n                account, setaccount,\r\n                digit, setdigit,\r\n                typeAccountId, settypeAccountId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </BankAccountsContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    phoneTypes: [],\r\n    phoneTypeId: '',\r\n    countryCode: '',\r\n    stateCode: '',\r\n    number: '',\r\n    setPhoneTypeId: () => { },\r\n    setCountryCode: () => { },\r\n    setStateCode: () => { },\r\n    setNumber: () => { },\r\n}\r\n\r\n\r\n\r\nexport const PhonesContext = createContext(InitialState);\r\n\r\nexport const PhonesProvider = (props) => {\r\n    const { _Json_PhoneInfo } = useContext(FormContext)\r\n    const [phoneTypeId, setPhoneTypeId] = useState('')\r\n    const [countryCode, setCountryCode] = useState('')\r\n    const [stateCode, setStateCode] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [phoneTypes, setPhoneTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        countryCode: countryCode,\r\n        stateCode: stateCode,\r\n        number: number,\r\n        type: parseInt(phoneTypeId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (countryCode && stateCode && number && phoneTypeId) _Json_PhoneInfo(reqJSON)\r\n    }, [countryCode, stateCode, number, phoneTypeId])\r\n\r\n    useEffect(() => {\r\n            getPhoneTypes()\r\n    }, [])\r\n\r\n\r\n    function getPhoneTypes() {\r\n        axios.get(config._urlPhoneType)\r\n            .then(res => {\r\n                if (res.data) setPhoneTypes(res.data)\r\n            })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    return (\r\n        <PhonesContext.Provider\r\n            value={{\r\n                phoneTypes, setPhoneTypeId, phoneTypeId,\r\n                countryCode, setCountryCode,\r\n                stateCode, setStateCode,\r\n                number, setNumber\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PhonesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    mail: '',\r\n    type: '',\r\n    isCorrespondency: true,\r\n    emailTypes: [],\r\n    setMail: () => { },\r\n    setType: () => { },\r\n    setIsCorrespondency: () => { },\r\n}\r\n\r\nexport const EmailContext = createContext(InitialState);\r\n\r\nexport const EmailProvider = (props) => {\r\n    const { _Json_EmailInfo } = useContext(FormContext)\r\n    const [mail, setMail] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [isCorrespondency, setIsCorrespondency] = useState(true)\r\n    const [emailTypes, setEmailTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        mail: mail,\r\n        type: parseInt(type),\r\n        isCorrespondency: true\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (mail && type) _Json_EmailInfo(reqJSON)\r\n    }, [mail, type])\r\n\r\n    useEffect(() => {\r\n            getEmailTypes()\r\n    }, [])\r\n\r\n\r\n    function getEmailTypes() {\r\n        axios.get(config._urlEmailType)\r\n            .then(res => {\r\n                if (res.data) setEmailTypes(res.data)\r\n            })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    return (\r\n        <EmailContext.Provider\r\n            value={{\r\n                emailTypes,\r\n                setIsCorrespondency, isCorrespondency,\r\n                setType, setMail\r\n            }}\r\n        >\r\n            {props.children}\r\n        </EmailContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport { FormContext } from './FormContexts'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    typeWealthId: '',\r\n    value: '',\r\n    description: '',\r\n    typesWealthId: [],\r\n    settypeWealthId: () => { },\r\n    setvalue: () => { },\r\n    setdescription: () => { },\r\n}\r\n\r\nexport const WealthsTypeContext = createContext(InitialState);\r\n\r\nexport const WealthsTypeProvider = (props) => {\r\n\r\n    const [typeWealthId, settypeWealthId] = useState('')\r\n    const [value, setvalue] = useState('')\r\n    const [description, setdescription] = useState('')\r\n\r\n    const [typesWealthId, settypesWealthId] = useState([])\r\n\r\n    useEffect(() => {\r\n            GetWealthTypes()\r\n    }, [])\r\n\r\n    function GetWealthTypes() {\r\n        axios.get(config._urlWealthType)\r\n            .then(res => { if (res.data) settypesWealthId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <WealthsTypeContext.Provider\r\n            value={{\r\n                typeWealthId, value, description,\r\n                settypeWealthId, setvalue, setdescription,\r\n                typesWealthId,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WealthsTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    institutionName: '',\r\n    occupation: '',\r\n    profession: '',\r\n    corporateTaxpayerRegistry: '',\r\n    setinstitutionName: () => { },\r\n    setoccupation: () => { },\r\n    setprofession: () => { },\r\n    setcorporateTaxpayerRegistry: () => { },\r\n    setIsRequired: () => { }\r\n}\r\n\r\nexport const WorkContext = createContext(InitialState);\r\n\r\nexport const WorkProvider = (props) => {\r\n\r\n    const { _Json_Work } = useContext(FormContext)\r\n\r\n    const [institutionName, setinstitutionName] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n    const [profession, setprofession] = useState('')\r\n    const [corporateTaxpayerRegistry, setcorporateTaxpayerRegistry] = useState('')\r\n    \r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    let reqJSON = {\r\n        institutionName: institutionName,\r\n        occupation: occupation,\r\n        profession: profession,\r\n        corporateTaxpayerRegistry: corporateTaxpayerRegistry\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_Work({})\r\n        else if (institutionName && occupation && profession && corporateTaxpayerRegistry){\r\n            _Json_Work(reqJSON)\r\n        }\r\n    }, [isRequired,institutionName, occupation, profession, corporateTaxpayerRegistry])\r\n\r\n\r\n    return (\r\n        <WorkContext.Provider\r\n            value={{\r\n                institutionName, setinstitutionName,\r\n                occupation, setoccupation,\r\n                profession, setprofession,\r\n                corporateTaxpayerRegistry, setcorporateTaxpayerRegistry,\r\n                setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WorkContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { IdentificationTypeContext } from '../../contexts/IdentificationTypeContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function IdentificationType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, \r\n        setstateId,setemissionInssuer, setnumber, setemission, emission } = useContext(IdentificationTypeContext)\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Identificação' : 'Identification',\r\n        Select: languagePT ? 'Selecionar Tipo de Identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Document UF',\r\n        emission: languagePT ? 'Data de emissão' : 'Issue date',\r\n        emissionInssuer: languagePT ? 'Orgão Emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    function OnChangeField(e) {\r\n        const {value, id} = e.target \r\n        switch (id) {\r\n            case 'identificationType':\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'IdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'identificationTypeemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'identificationTypedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'identificationTypeemission':\r\n                setemission(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divIdentificationTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"identificationType\" id=\"identificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex\"}>\r\n                <input required={identificationTypeId !== \"40\"} type=\"text\" name=\"identificationTypedocument\" id=\"identificationTypedocument\" onChange={e => OnChangeField(e)}\r\n                placeholder={Labels.documentNumber}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required name=\"IdtypeStateId\" id=\"IdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.States}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescriptionTitle\">{Labels.emission}</p>\r\n            <div className=\"d-flex\">\r\n                <input value={emission} required type=\"date\" name=\"identificationTypeemission\" id=\"identificationTypeemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required type=\"text\" name=\"identificationTypeemissionInssuer\" id=\"identificationTypeemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                placeholder={Labels.emissionInssuer}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nexport default function Countries(props) {\r\n    const [countries, setCountries] = useState([])\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar País' : 'Select Country',\r\n        SelectError: languagePT ? 'Erro ao consultar países' : 'Error querying countries'\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n        getCountries()\r\n    }, [])\r\n\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => { if (res.data) setCountries(res.data) })\r\n            .catch(err => console.log(Labels.SelectError))\r\n    }\r\n    function RenderCountries() {\r\n        return (\r\n            countries.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"countries\" id=\"countries\" onChange={props.onSelectCountry}>\r\n            <option defaultValue value=\"\">{Labels.Select}</option>\r\n            {RenderCountries()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { AdressesContext } from \"../../contexts/AdressesContexts\";\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const Atctx = useContext(AttorneyContext)\r\n    const Adctx = useContext(AdressesContext)\r\n\r\n    const [states, setStates] = useState([])\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Estado' : 'Select State',\r\n        SelectError: languagePT ? 'Erro ao consultar estados' : 'Error querying states'\r\n    }\r\n\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if(Atctx.isAcceptedOrderAttorney) required = true\r\n        else if(!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n\r\n    useEffect(() => {\r\n        if(props.ClientAdress) {\r\n            if (Adctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n        else if (props.Attorney){\r\n            if (Atctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n    }, [Atctx.countryId, Adctx.countryId])\r\n\r\n    function getStates() {\r\n        const _countryId = props.ClientAdress ? Adctx.countryId : Atctx.countryId\r\n        axios.get(`${config._urlStates}${_countryId}`)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    setStates(res.data)\r\n                }\r\n                else {\r\n                    console.log(Labels.SelectError)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(Labels.SelectError)\r\n            })\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"states\" id=\"states\" onChange={props.onSelectState}>\r\n            <option defaultValue value=\"\">{Labels.Select}</option>\r\n            {RenderStates()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function Cities(props) {\r\n    const Adctx = useContext(AdressesContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const [cities, setCities] = useState([])\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Cidade' : 'Select City',\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n        if (props.ClientAdress) {\r\n            if (Adctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n        else if (props.Attorney) {\r\n            if (Atctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n    }, [Atctx.stateId, Adctx.stateId])\r\n\r\n    function getCities() {\r\n        const _stateId = props.ClientAdress ? Adctx.stateId : Atctx.stateId\r\n        axios.get(`${config._urlCities}${_stateId}`)\r\n            .then(res => { if (res.data) { setCities(res.data) } })\r\n            .catch(err => { console.log(err) })\r\n    }\r\n    function RenderCities() {\r\n        return (\r\n            cities.map(c => {\r\n                return (\r\n                    <option key={c.cityId} value={c.cityId} cityname={c.name}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divCitiesSelect\">\r\n            <select required={required} name=\"cities\" id=\"cities\" onChange={props.onSelectCity}>\r\n                <option defaultValue value=\"\">{Labels.Select}</option>\r\n                {RenderCities()}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport config from \"../../config\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nexport default function AdressType(props) {\r\n    const [adressType, setAdressType] = useState([])\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Tipo de Endereço' : 'Select Address Type',\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n            getAdressType()\r\n    }, [])\r\n\r\n    function getAdressType() {\r\n        axios.get(config._urlAdressType)\r\n            .then(res => {if (res.data) setAdressType(res.data)})\r\n            .catch(err => {console.log(err)})\r\n    }\r\n    function RenderAdressType() {\r\n        return (\r\n            adressType.map(adt => {\r\n                return (\r\n                    <option key={adt.addressTypeId} value={adt.addressTypeId}>{adt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n            <select required={required} name=\"addressType\" id=\"addressType\" onChange={props.onSelectTypeAddress}>\r\n                <option defaultValue value=\"\">{Labels.Select}</option>\r\n                {RenderAdressType()}\r\n            </select>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function CEP(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const [error, setError] = useState(false)\r\n    const Labels = {\r\n        CollectCep: languagePT ? 'Digite seu cep' : 'Type your ZIP Code',\r\n        Error: languagePT ? 'CEP Invalido' : 'Invalid ZIP Code'\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    function ValidateCEP(e) {\r\n        const Cep = e.target.value\r\n        if (Cep.length === 0) {\r\n            setError(false)\r\n            props.onCollectCep('')\r\n        }\r\n        const validacep = /^[0-9]{5,8}$/;\r\n        if (validacep.test(Cep)) {\r\n            setError(false)\r\n            props.onCollectCep(Cep)\r\n        }\r\n        else {\r\n            props.onCollectCep('')\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"divCollectCep\">\r\n            <input required={required} className={error ? \"error\" : \"\"} placeholder={Labels.CollectCep} type=\"text\" name=\"cep\" id=\"cep\"\r\n                maxLength=\"8\" onChange={e => ValidateCEP(e)} />\r\n            <p className={error ? \"msgError\" : \"d-none\"}>{Labels.Error}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts';\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function AdressUtils(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setComplement, setDescription, setNeighborhood, setNumber } = useContext(AdressesContext)\r\n    const { setcomplement, setdescription, setneighborhood, setnumber, isAcceptedOrderAttorney } = useContext(AttorneyContext)\r\n    const Labels = {\r\n        neighborhood: languagePT ? 'Bairro' : 'Neighborhood',\r\n        description: languagePT ? 'Rua' : 'Street',\r\n        number: languagePT ? 'Número' : 'Number',\r\n        complement: languagePT ? 'Complemento' : 'Complement',\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if(isAcceptedOrderAttorney) required = true\r\n        else if(!isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n    \r\n\r\n    function setInput(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'neighborhood':\r\n                if (props.Attorney) setneighborhood(value)\r\n                else if (props.ClientAdress) setNeighborhood(value)\r\n                break;\r\n            case 'description':\r\n                if (props.Attorney) setdescription(value)\r\n                else if (props.ClientAdress) setDescription(value)\r\n                break;\r\n            case 'number':\r\n                if (props.Attorney) setnumber(value)\r\n                else if (props.ClientAdress) setNumber(value)\r\n                break;\r\n            case 'complement':\r\n                if (props.Attorney) setcomplement(value)\r\n                else if (props.ClientAdress) setComplement(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"divCollectUtilsAdress\">\r\n            {props.children}\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"neighborhood\" id=\"neighborhood\" placeholder={Labels.neighborhood} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"description\" id=\"description\" placeholder={Labels.description} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" maxLength=\"20\" name=\"number\" id=\"number\" placeholder={Labels.number} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"complement\" id=\"complement\" placeholder={Labels.complement} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nexport default function Adresses(props) {\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode } = useContext(AdressesContext)\r\n    const {languagePT} = useContext(FormContext)\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Endereço' : 'Address',\r\n    }\r\n\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientAdress\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <Countries onSelectCountry={onSelectCountry} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <States onSelectState={onSelectState} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <Cities onSelectCity={onSelectCity} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <AdressUtils ClientAdress={true} Attorney={false}>\r\n                <div className=\"d-flex\">\r\n                    <CEP onCollectCep={onCollectCep} ClientAdress={true} Attorney={false}/>\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n            </AdressUtils>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport Fuse from 'fuse.js';\r\n\r\nimport SelectSearch from 'react-select-search'\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { BankAccountsContext } from '../../contexts/BankContexts';\r\n\r\nimport './index.css'\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function BankAccounts(props) {\r\n    const [error, setError] = useState(false)\r\n    const { languagePT, _Json_BankAccounts } = useContext(FormContext)\r\n    const { bankAccountTypes, banks,\r\n        bankId, setbankId,\r\n        agency, setagency,\r\n        account, setaccount,\r\n        digit, setdigit,\r\n        typeAccountId, settypeAccountId } = useContext(BankAccountsContext)\r\n    const [clientBankAccounts, setclientBankAccounts] = useState([])\r\n    const Labels = {\r\n        selectItems: languagePT ? 'Selecione um item da lista e Preencha os campos' : 'Select an item from the list and fill the fields',\r\n        SelecttypeAccountId: languagePT ? 'Tipo de conta bancária' : 'Bank account type',\r\n        SelectbankId: languagePT ? 'Selecione o seu banco' : 'Select your bank',\r\n        account: languagePT ? 'Número da conta bancária' : 'Bank account number',\r\n        digit: languagePT ? 'Digito' : 'Digit',\r\n        agency: languagePT ? 'Agência' : 'Agency',\r\n        description: languagePT ? 'Contas bancarias' : 'Bank accounts',\r\n        addAccount: languagePT ? 'CLIQUE PARA ADICIONAR CONTA BANCARIA' : 'CLICK TO ADD BANK ACCOUNT'\r\n    }\r\n\r\n    function RenderBankAccountTypes() {\r\n        return (\r\n            bankAccountTypes.map(bat => {\r\n                return (\r\n                    <option key={bat.bankAccountTypeId} value={bat.bankAccountTypeId}>{bat.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderBanks() {\r\n        return (\r\n            banks.map(bank => {\r\n                return (\r\n                    <option key={bank.bankId} value={bank.bankId} code={bank.code}>{bank.code} | {bank.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderclientBankAccounts() {\r\n        return (\r\n            clientBankAccounts.map((bat, index) => {\r\n                return (\r\n                    <div className=\"account\" key={index}>\r\n                        <div className=\"d-flex d-flexdc\">\r\n                            <span className=\"inputDescription\">{banks.find(b => b.bankId === bat.bankId).name}</span>\r\n                            <span className=\"inputDescription\">Agencia: {bat.agency}</span>\r\n                            <span className=\"inputDescription\">Conta: {bat.account}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeBankAccount(index)}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addBankAccount() {\r\n        if (!account || !agency || !bankId || !digit || !typeAccountId) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            let bank = {\r\n                bankId: parseInt(bankId),\r\n                agency: parseInt(agency),\r\n                account: parseInt(account),\r\n                digit: parseInt(digit),\r\n                typeAccountId: parseInt(typeAccountId)\r\n            }\r\n            setclientBankAccounts([...clientBankAccounts, bank])\r\n            setaccount('')\r\n            setdigit('')\r\n            setagency('')\r\n        }\r\n    }\r\n    function removeBankAccount(i) {\r\n        setclientBankAccounts(clientBankAccounts.filter((c, index) => index !== i))\r\n    }\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'typeAccountId':\r\n                settypeAccountId(value)\r\n                break;\r\n            case 'account':\r\n                setaccount(value)\r\n                break;\r\n            case 'digit':\r\n                setdigit(value)\r\n                break;\r\n            case 'agency':\r\n                setagency(value)\r\n                break;\r\n            case 'bankId':\r\n                console.log(value)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        _Json_BankAccounts(clientBankAccounts)\r\n    }, [clientBankAccounts])\r\n\r\n\r\n    function fuzzySearch(options) {\r\n        const fuse = new Fuse(options, {\r\n            keys: ['name'],\r\n            threshold: 0.3,\r\n        });\r\n\r\n        return (value) => {\r\n            if (!value.length) {\r\n                return options;\r\n            }\r\n            let array = fuse.search(value)\r\n            array = array.map(i => i.item)\r\n            return array;\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className=\"divBankAccounts\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.description}</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={clientBankAccounts.length === 0} name=\"typeAccountId\" id=\"typeAccountId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.SelecttypeAccountId}</option>\r\n                    {RenderBankAccountTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n\r\n                <SelectSearch options={banks} search={true} filterOptions={fuzzySearch} name=\"name\"\r\n                    emptyMessage=\"Not found\" placeholder={Labels.SelectbankId} id=\"bankId\"\r\n                    printOptions=\"auto\" closeOnSelect={true} onChange={id => setbankId(id)}\r\n                    />\r\n\r\n                {/* <select required={clientBankAccounts.length === 0} name=\"bankId\" id=\"bankId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.SelectbankId}</option>\r\n                    {RenderBanks()}\r\n                </select> */}\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={account} type=\"text\" name=\"account\" id=\"account\"\r\n                    placeholder={Labels.account} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={digit} type=\"text\" name=\"digit\" id=\"digit\"\r\n                    placeholder={Labels.digit} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={agency} type=\"text\" name=\"agency\" id=\"agency\"\r\n                    placeholder={Labels.agency} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"bankAccounts\">\r\n                {RenderclientBankAccounts()}\r\n            </div>\r\n            <div className=\"addAccount\">\r\n                <button onClick={() => addBankAccount()} type=\"button\">\r\n                    {Labels.addAccount}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>{Labels.selectItems}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    name: '',\r\n    nationality: '',\r\n    occupation: '',\r\n    settaxPayerRegistry: () => { },\r\n    setname: () => { },\r\n    setnationality: () => { },\r\n    setoccupation: () => { }\r\n}\r\n\r\nexport const PPERelatedsContext = createContext(InitialState);\r\n\r\nexport const PPERelatedsProvider = (props) => {\r\n    const { _Json_PPERelateds } = useContext(FormContext)\r\n\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [name, setname] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n\r\n    const reqJson = {\r\n        taxPayerRegistry: taxPayerRegistry,\r\n        name: name,\r\n        nationality: nationality,\r\n        occupation: occupation\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(name && taxPayerRegistry && occupation && nationality) _Json_PPERelateds(reqJson)\r\n    }, [name,taxPayerRegistry,occupation,nationality])\r\n\r\n    return (\r\n        <PPERelatedsContext.Provider\r\n            value={{\r\n                taxPayerRegistry,\r\n                name,\r\n                nationality,\r\n                occupation,\r\n                settaxPayerRegistry,\r\n                setname,\r\n                setnationality,\r\n                setoccupation\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PPERelatedsContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useState } from 'react'\r\n\r\nimport { PPERelatedsContext } from '../../contexts/PPERelatedsContext';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport Switch from \"react-switch\";\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function PPERelateds(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { name, nationality, occupation, setname, setnationality,\r\n        setoccupation, settaxPayerRegistry, taxPayerRegistry } = useContext(PPERelatedsContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n\r\n    const [PPERelated, setPPERelated] = useState(false)\r\n\r\n    const Labels = {\r\n        PPERelated: languagePT ? 'Cliente têm relacionamento com uma Pessoa Politicamente Exposta ?' : 'Customer has a relationship with a Politically Exposed Person ?',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        name: languagePT ? 'Nome da Pessoa Politicamente Exposta' : 'Politically Exposed Person\\'s Name',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'TaxPayerRegistry',\r\n\r\n    }\r\n\r\n    function ValidCPF(cpf) {\r\n        var Soma;\r\n        var Resto;\r\n        Soma = 0;\r\n        if (cpf === \"00000000000\") return false;\r\n        if (cpf === \"11111111111\") return false;\r\n        if (cpf === \"22222222222\") return false;\r\n        if (cpf === \"33333333333\") return false;\r\n        if (cpf === \"44444444444\") return false;\r\n        if (cpf === \"55555555555\") return false;\r\n        if (cpf === \"66666666666\") return false;\r\n        if (cpf === \"77777777777\") return false;\r\n        if (cpf === \"88888888888\") return false;\r\n\r\n        if (cpf.includes('.')) cpf = cpf.replace(/\\./g, '')\r\n        if (cpf.includes('-')) cpf = cpf.replace(/-/g, '')\r\n        // if (cpf.includes('-')) cpf = cpf.replace(/\\-/g, '')\r\n\r\n        for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n        Soma = 0;\r\n        for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n        return true;\r\n    }\r\n\r\n    function OnChangeField(e) {\r\n        const { id, value } = e.target\r\n\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                settaxPayerRegistry(value)\r\n                if (value.length < 11) setErrorCpf(false)\r\n                else if (value.length === 11) {\r\n                    if (ValidCPF(value)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (value.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"d-flex d-flexdc df-alc\">\r\n                <p className=\"inputDescription\">{Labels.PPERelated} ?</p>\r\n                <Switch\r\n                    onColor=\"#4B4B4B\"\r\n                    offColor=\"#bdbbbb\"\r\n                    onHandleColor=\"#bdbbbb\"\r\n                    offHandleColor=\"#4B4B4B\"\r\n                    checked={PPERelated}\r\n                    onChange={cheked => setPPERelated(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={20}\r\n                    width={50}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input value={name} required={PPERelated} type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} value={nationality} required={PPERelated} type=\"text\" \r\n                name=\"nationality\" id=\"nationality\" placeholder={Labels.nationality}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"\" : \"d-none\"}>\r\n                <div className=\"d-flex\">\r\n                    <input className={PPERelated ? \"\" : \"d-none\"} value={taxPayerRegistry} required={PPERelated} \r\n                    type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\" placeholder={Labels.taxPayerRegistry}\r\n                        pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} required={PPERelated} value={occupation} type=\"text\" name=\"occupation\" id=\"occupation\" placeholder={Labels.occupation}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setname: () => { },\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n    setHide: () => { }\r\n}\r\n\r\nexport const SpouseContext = createContext(InitialState);\r\n\r\nexport const SpouseProvider = (props) => {\r\n\r\n    const { _Json_Spouse } = useContext(FormContext)\r\n\r\n    const [spouseId, setspouseId] = useState(0)\r\n    const [name, setname] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    \r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    const [hide, setHide] = useState(false)\r\n\r\n    let reqJSON = {\r\n        spouseId: spouseId,\r\n        name: name,\r\n        taxPayerRegistry: taxPayerRegistry,\r\n        document: {\r\n            identificationTypeId: identificationTypeId,\r\n            number: number,\r\n            emissionInssuer: emissionInssuer,\r\n            emission: emission,\r\n            stateId: stateId\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(hide) _Json_Spouse({})\r\n        else if (identificationTypeId === \"40\") {\r\n            if (name && taxPayerRegistry && identificationTypeId && emissionInssuer && emission && stateId) {\r\n                const cpf = `${taxPayerRegistry.substring(0, 3)}.${taxPayerRegistry.substring(3, 6)}.${taxPayerRegistry.substring(6, 9)}-${taxPayerRegistry.substring(9, 11)}`\r\n                reqJSON.document.number = identificationTypeId === \"40\" ? cpf : number\r\n                reqJSON.taxPayerRegistry = cpf\r\n                _Json_Spouse(reqJSON)\r\n            }\r\n        }\r\n        else if (name && taxPayerRegistry && identificationTypeId && number && emissionInssuer && emission && stateId) {\r\n            const cpf = `${taxPayerRegistry.substring(0, 3)}.${taxPayerRegistry.substring(3, 6)}.${taxPayerRegistry.substring(6, 9)}-${taxPayerRegistry.substring(9, 11)}`\r\n            reqJSON.taxPayerRegistry = cpf\r\n            _Json_Spouse(reqJSON)\r\n        }\r\n\r\n    }, [hide, name, taxPayerRegistry, identificationTypeId, number, emissionInssuer, emission, stateId])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <SpouseContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                settaxPayerRegistry, taxPayerRegistry,\r\n                setnumber, setname, name,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states,\r\n                setHide\r\n            }}\r\n        >\r\n            {props.children}\r\n        </SpouseContext.Provider>\r\n    );\r\n};\r\n","function ValidCPF(cpf) {\r\n    var Soma;\r\n    var Resto;\r\n    Soma = 0;\r\n    if (cpf === \"00000000000\") return false;\r\n    if (cpf === \"11111111111\") return false;\r\n    if (cpf === \"22222222222\") return false;\r\n    if (cpf === \"33333333333\") return false;\r\n    if (cpf === \"44444444444\") return false;\r\n    if (cpf === \"55555555555\") return false;\r\n    if (cpf === \"66666666666\") return false;\r\n    if (cpf === \"77777777777\") return false;\r\n    if (cpf === \"88888888888\") return false;\r\n\r\n    for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n    if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n    Soma = 0;\r\n    for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n    if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n    return true;\r\n}\r\n\r\nfunction validarCNPJ(cnpj) {\r\n    cnpj = cnpj.replace(/[^\\d]+/g,'');\r\n    if(cnpj == '') return false;\r\n    if (cnpj.length != 14)\r\n        return false;\r\n    // Elimina CNPJs invalidos conhecidos\r\n    if (cnpj == \"00000000000000\" || \r\n        cnpj == \"11111111111111\" || \r\n        cnpj == \"22222222222222\" || \r\n        cnpj == \"33333333333333\" || \r\n        cnpj == \"44444444444444\" || \r\n        cnpj == \"55555555555555\" || \r\n        cnpj == \"66666666666666\" || \r\n        cnpj == \"77777777777777\" || \r\n        cnpj == \"88888888888888\" || \r\n        cnpj == \"99999999999999\")\r\n        return false;\r\n    // Valida DVs\r\n    let tamanho = cnpj.length - 2\r\n    let numeros = cnpj.substring(0,tamanho);\r\n    let digitos = cnpj.substring(tamanho);\r\n    let soma = 0;\r\n    let pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(0))\r\n        return false;\r\n    tamanho = tamanho + 1;\r\n    numeros = cnpj.substring(0,tamanho);\r\n    soma = 0;\r\n    pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(1))\r\n          return false;\r\n           \r\n    return true;\r\n}\r\n\r\nexport {\r\n    ValidCPF, validarCNPJ\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { SpouseContext } from '../../contexts/Spouse';\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport {ValidCPF} from '../../utils'\r\nimport './index.css'\r\n\r\nexport default function Spouse(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, setHide,\r\n        setstateId, setemissionInssuer, setnumber, setemission, number, taxPayerRegistry, settaxPayerRegistry, setname, name } = useContext(SpouseContext)\r\n    const Labels = {\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        Select: languagePT ? 'Selecionar Tipo de Identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Select State',\r\n        emission: languagePT ? 'Data de emissão' : 'Select State',\r\n        emissionInssuer: languagePT ? 'Orgão Emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Only letters',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    useEffect(() => {\r\n        setHide(props.hide)\r\n    }, [])\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'spousename':\r\n                setname(value)\r\n                break;\r\n            case 'spouseidentificationType':\r\n                setnumber('')\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'spouseIdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'spouseemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'spousedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'spouseemission':\r\n                const emissionDoc = `${value}T00:00:00`\r\n                setemission(emissionDoc)\r\n                break;\r\n            case 'spousedocumentcpf':\r\n                settaxPayerRegistry(value)\r\n                if (value.length < 11) setErrorCpf(false)\r\n                else if (value.length === 11) {\r\n                    if (ValidCPF(value)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className={props.hide ? \"d-none\" : \"divSpouse\"}>\r\n            <span className=\"inputDescriptionTitle\">Informações Conjuge</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={name} required={props.required} type=\"text\" name=\"spousename\" id=\"spousename\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={props.required}\r\n                    name=\"spouseidentificationType\" id=\"spouseidentificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex\"}>\r\n                <input value={number} required={identificationTypeId !== \"40\" && props.required} type=\"text\" name=\"spousedocument\" id=\"spousedocument\" onChange={e => OnChangeField(e)}\r\n                    placeholder={Labels.documentNumber} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <InputMask value={taxPayerRegistry} required={props.required} type=\"text\" name=\"spousedocumentcpf\" id=\"spousedocumentcpf\"\r\n                        placeholder={Labels.taxPayerRegistry} mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={props.required} name=\"spouseIdtypeStateId\" id=\"spouseIdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.States}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.emission}</p>\r\n            <div className=\"d-flex\">\r\n                <input required={props.required} type=\"date\" name=\"spouseemission\" id=\"spouseemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={props.required} type=\"text\" name=\"spouseemissionInssuer\" id=\"spouseemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                    placeholder={Labels.emissionInssuer} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nimport config from \"../config\";\r\n\r\nconst InitialState = {\r\n    name: '',\r\n    taxpayerRegistry: '',\r\n    relationshipTypeId: '',\r\n    relationshipTypesId: [],\r\n    setname: () => { },\r\n    settaxpayerRegistry: () => { },\r\n    setRelationshipTypeId: () => { },\r\n    setIsRequired: () => { }\r\n}\r\nexport const LegalRepresentativeContext = createContext(InitialState);\r\n\r\nexport const LegalRepresentativeProvider = (props) => {\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [relationshipTypeId, setRelationshipTypeId] = useState('')\r\n\r\n    const [relationshipTypesId, setRelationshipTypesId] = useState([])\r\n\r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    const { _Json_LegalRepresentative, errorOnApi } = useContext(FormContext)\r\n\r\n    const legalRepresentatives = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry,\r\n        relationshipTypeId: relationshipTypeId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_LegalRepresentative({})\r\n        else if (name && taxpayerRegistry && relationshipTypeId) _Json_LegalRepresentative(legalRepresentatives)\r\n    }, [isRequired, name, taxpayerRegistry, relationshipTypeId])\r\n\r\n    useEffect(() => {\r\n            GetRelationsShipType()\r\n    }, [])\r\n\r\n    function GetRelationsShipType() {\r\n        axios.get(config._urlRelationshipType)\r\n            .then(res => { if (res.data) setRelationshipTypesId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <LegalRepresentativeContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, relationshipTypeId,\r\n                setname, settaxpayerRegistry, setRelationshipTypeId,\r\n                relationshipTypesId, setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </LegalRepresentativeContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\nimport { LegalRepresentativeContext } from '../../contexts/LegalRepresentativeContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function Work(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { age } = useContext(ClientInfoContext)\r\n    const { name, taxpayerRegistry, relationshipTypesId,\r\n        setname, settaxpayerRegistry, setRelationshipTypeId, setIsRequired } = useContext(LegalRepresentativeContext)\r\n\r\n    let required = age > 0 && age < 18 ? true : false\r\n\r\n    const Labels = {\r\n        legalRepresentativeName: languagePT ? 'Nome ao representante legal do cliente' : '',\r\n        legalRepresentativeTaxpayerRegistry: languagePT ? 'CPF ao representante legal do cliente' : '',\r\n        relationshipTypeId: languagePT ? 'Tipo do relacionamento ao representante legal' : '',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : '',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    function ValidCPF(cpf) {\r\n        var Soma;\r\n        var Resto;\r\n        Soma = 0;\r\n        if (cpf === \"00000000000\") return false;\r\n        if (cpf === \"11111111111\") return false;\r\n        if (cpf === \"22222222222\") return false;\r\n        if (cpf === \"33333333333\") return false;\r\n        if (cpf === \"44444444444\") return false;\r\n        if (cpf === \"55555555555\") return false;\r\n        if (cpf === \"66666666666\") return false;\r\n        if (cpf === \"77777777777\") return false;\r\n        if (cpf === \"88888888888\") return false;\r\n\r\n        if (cpf.includes('.')) cpf = cpf.replace(/\\./g, '')\r\n        if (cpf.includes('-')) cpf = cpf.replace(/-/g, '')\r\n        // if (cpf.includes('-')) cpf = cpf.replace(/\\-/g, '')\r\n\r\n        for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n        Soma = 0;\r\n        for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n        return true;\r\n    }\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'legalRepresentativeName':\r\n                setname(value)\r\n                break;\r\n            case 'relationshipTypeId':\r\n                setRelationshipTypeId(value)\r\n                break;\r\n            case 'legalRepresentativeTaxpayerRegistry':\r\n                settaxpayerRegistry(value)\r\n                if (value.length < 11) setErrorCpf(false)\r\n                else if (value.length === 11) {\r\n                    if (ValidCPF(value)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (value.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderRelationshipTypes() {\r\n        return (\r\n            relationshipTypesId.map(reltid => {\r\n                return (\r\n                    <option key={reltid.relationshipTypeId} value={reltid.relationshipTypeId}>{reltid.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [])\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n        if (required) {\r\n            setname('')\r\n            setRelationshipTypeId('')\r\n            settaxpayerRegistry('')\r\n        }\r\n    }, [age])\r\n\r\n    return (\r\n        <div className={required ? \"divLegalRepresentative\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">Representates legais</span>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={name} type=\"text\" name=\"legalRepresentativeName\" id=\"legalRepresentativeName\" placeholder={Labels.legalRepresentativeName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <input value={taxpayerRegistry} required={required} type=\"text\" name=\"legalRepresentativeTaxpayerRegistry\" id=\"legalRepresentativeTaxpayerRegistry\" placeholder={Labels.legalRepresentativeTaxpayerRegistry}\r\n                        pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={required}\r\n                    name=\"relationshipTypeId\" id=\"relationshipTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.relationshipTypeId}</option>\r\n                    {RenderRelationshipTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\n\r\n\r\nimport Spouse from '../Spouse'\r\nimport LegalRepresentative from '../LegalRepresentative'\r\n\r\nimport { LegalRepresentativeProvider } from '../../contexts/LegalRepresentativeContexts';\r\nimport { SpouseProvider } from '../../contexts/Spouse';\r\n\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nimport { ValidCPF } from '../../utils'\r\n\r\nimport Switch from \"react-switch\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport './index.css'\r\n\r\nexport default function ClientInfo() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const {\r\n        // States\r\n        name, shortName, birthDate, fatherName, motherName, taxPayerRegistry, genderId, gendersIds, maritalStatusId, nationality,\r\n        countriesBirthId, stateBirthId, statesBirth, professionalOccupationId, professionalOccupationsId,\r\n        residenceInOtherCountryId, residencesInOtherCountryId, otherTaxResidencesCountryId, otherTaxResidenceCountryId,\r\n        educationLevelId, educationsLevelId, ppeOccupation, usPerson, isAssociatedPerson, isAdministratorInAnotherAccount,\r\n        maritalStatus, maritalAgreements, maritalAgreementId,\r\n        // Sets\r\n        setname, setshortName, setbirthDate, setAge, setfatherName, setmotherName, settaxPayerRegistry, setgenderId, setmaritalStatusId, setmaritalAgreementId,\r\n        setnationality, setcountryBirthId, setstateBirthId, setstateBirthName, setprofessionalOccupationId, setresidenceInOtherCountryId,\r\n        setotherTaxResidenceCountryId, seteducationLevelId, setppeOccupation, setusPerson, setisAssociatedPerson, setisAdministratorInAnotherAccount\r\n    } = useContext(ClientInfoContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações do cliente' : 'Customer information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        dateInvalid: languagePT ? 'Selecione uma data valida' : 'Only letters',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Only letters',\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        shortName: languagePT ? 'Apelido' : 'ShortName',\r\n        birthDate: languagePT ? 'Data de Nascimento' : 'BirthDate',\r\n        fatherName: languagePT ? 'Nome do Pai' : 'Father Name',\r\n        motherName: languagePT ? 'Nome da Mãe' : 'Mother Name',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        genderId: languagePT ? 'Genero' : 'Gender',\r\n        maritalStatusId: languagePT ? 'Estado civil' : 'Marital Status',\r\n        maritalAgreementId: languagePT ? 'Regime do estado civil' : 'Marital Agreement',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        countryBirthId: languagePT ? 'País de nascimento' : 'Country Birth',\r\n        stateBirthId: languagePT ? 'UF de nascimento do cliente' : 'State Birth',\r\n        stateBirthName: languagePT ? 'Nome UF de nascimento' : 'State Birth Name',\r\n        professionalOccupationId: languagePT ? 'Natureza da ocupação' : 'Professional Occupation',\r\n        residenceInOtherCountryId: languagePT ? 'País ao cliente que possui residencia em outros países' : 'Residence in Other Country',\r\n        otherTaxResidenceCountryId: languagePT ? 'País ao cliente que possui domicílio fiscal além do declarado' : 'Other Tax Residence Country',\r\n        residenceInOtherCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        otherTaxResidenceCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        educationLevelId: languagePT ? 'Escolaridade' : 'Education Level',\r\n        ppeOccupation: languagePT ? 'Cargo PPE do cliente, se o mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n        usPerson: languagePT ? 'Cliente considerado como USPerson' : 'Considered as USPerson',\r\n        isAssociatedPerson: languagePT ? 'Pessoa Vinculada' : 'Associated Person',\r\n        isAdministratorInAnotherAccount: languagePT ? 'Cliente realiza operações por conta de terceiros' : 'Customer performs operations on behalf of third parties',\r\n        urlCallback: languagePT ? '' : '',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador' : 'Authorizes the transmission of orders by proxy',\r\n    }\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value, selectedIndex, options } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'shortName':\r\n                setshortName(value)\r\n                break;\r\n            case 'birthDate':\r\n                setAge('')\r\n\r\n                const d = new Date()\r\n                const ano_atual = d.getFullYear()\r\n                const mes_atual = d.getMonth() + 1\r\n                const dia_atual = d.getDate()\r\n\r\n                const ano_aniversario = parseInt(value.split(\"-\")[0])\r\n                const mes_aniversario = parseInt(value.split(\"-\")[1])\r\n                const dia_aniversario = parseInt(value.split(\"-\")[2])\r\n\r\n                if (ano_aniversario >= parseInt(Min.split(\"-\")[0])) {\r\n                    let Qtd_Anos = ano_atual - ano_aniversario\r\n                    if (mes_atual < mes_aniversario || mes_atual === mes_aniversario && dia_atual < dia_aniversario) {\r\n                        Qtd_Anos--\r\n                    }\r\n                    setAge(Qtd_Anos)\r\n                }\r\n                setbirthDate(value)\r\n                break;\r\n            case 'fatherName':\r\n                setfatherName(value)\r\n                break;\r\n            case 'motherName':\r\n                setmotherName(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'gender':\r\n                setgenderId(value)\r\n                break;\r\n            case 'maritalStatusId':\r\n                setmaritalStatusId(value)\r\n                if (value !== '2') setmaritalAgreementId('')\r\n                break;\r\n            case 'maritalAgreementId':\r\n                setmaritalAgreementId(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            case 'countryBirthId':\r\n                setcountryBirthId(value)\r\n                break;\r\n            case 'statesBirth':\r\n                const stateNameBirth = options[selectedIndex].getAttribute('statename')\r\n                // console.log(stateNameBirth)\r\n                setstateBirthId(value)\r\n                setstateBirthName(stateNameBirth)\r\n                break;\r\n            case 'professionalOccupationId':\r\n                setprofessionalOccupationId(value)\r\n                break;\r\n            case 'residenceInOtherCountryId':\r\n                setresidenceInOtherCountryId(value)\r\n                break;\r\n            case 'otherTaxResidenceCountryId':\r\n                setotherTaxResidenceCountryId(value)\r\n                break;\r\n            case 'educationLevel':\r\n                seteducationLevelId(value)\r\n                break;\r\n            case 'ppeOccupation':\r\n                setppeOccupation(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderGenders() {\r\n        return (\r\n            gendersIds.map(g => {\r\n                return (\r\n                    <option key={g.genderId} value={g.genderId}>{g.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalStatus() {\r\n        return (\r\n            maritalStatus.map(m => {\r\n                return (\r\n                    <option key={m.maritalStatusId} value={m.maritalStatusId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalAgreementId() {\r\n        return (\r\n            maritalAgreements.map(m => {\r\n                return (\r\n                    <option key={m.maritalAgreementId} value={m.maritalAgreementId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderCountriesBirth() {\r\n        return (\r\n            countriesBirthId.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            statesBirth.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderProfessionalOccupations() {\r\n        return (\r\n            professionalOccupationsId.map(pot => {\r\n                return (\r\n                    <option key={pot.professionalOccupationId} value={pot.professionalOccupationId}>{pot.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderResidencesInOtherCountry() {\r\n        return (\r\n            residencesInOtherCountryId.map(roc => {\r\n                return (\r\n                    <option key={roc.countryId} value={roc.countryId}>{roc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderOtherTaxResidencesCountry() {\r\n        return (\r\n            otherTaxResidencesCountryId.map(otrc => {\r\n                return (\r\n                    <option key={otrc.countryId} value={otrc.countryId}>{otrc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderEducationLevel() {\r\n        return (\r\n            educationsLevelId.map(ed => {\r\n                return (\r\n                    <option key={ed.educationLevelId} value={ed.educationLevelId}>{ed.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientInfo\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <input value={name} required type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={shortName} required type=\"text\" name=\"shortName\" id=\"shortName\" placeholder={Labels.shortName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.birthDate}</p>\r\n            <div className=\"d-flex\">\r\n                <input value={birthDate} required type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                    min={Min} max={Max} title={Labels.onlyLettersTitle} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <LegalRepresentativeProvider>\r\n                <LegalRepresentative />\r\n            </LegalRepresentativeProvider>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={fatherName} required type=\"text\" name=\"fatherName\" id=\"fatherName\" placeholder={Labels.fatherName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={motherName} required type=\"text\" name=\"motherName\" id=\"motherName\" placeholder={Labels.motherName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <InputMask value={taxPayerRegistry} required type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\" placeholder={Labels.taxPayerRegistry}\r\n                        mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeFields(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={genderId} required className=\"clSelect\" name=\"gender\" id=\"gender\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.genderId}</option>\r\n                    {RenderGenders()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={maritalStatusId} required className=\"clSelect\" name=\"maritalStatusId\" id=\"maritalStatusId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.maritalStatusId}</option>\r\n                    {RenderMaritalStatus()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <SpouseProvider>\r\n                <Spouse hide={maritalStatusId === '2' ? false : true} required={maritalStatusId === '2' ? true : false}>\r\n\r\n                    <div className={maritalStatusId === '2' ? \"d-flex\" : \"d-none\"}>\r\n                        <select value={maritalAgreementId} required={maritalStatusId === '2'} className=\"clSelect\" name=\"maritalAgreementId\" id=\"maritalAgreementId\" onChange={e => OnChangeFields(e)}>\r\n                            <option defaultValue value=\"\">{Labels.maritalAgreementId}</option>\r\n                            {RenderMaritalAgreementId()}\r\n                        </select>\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </Spouse>\r\n            </SpouseProvider>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={nationality} required type=\"text\" name=\"nationality\" id=\"nationality\" placeholder={Labels.nationality}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required className=\"clSelect\" name=\"countryBirthId\" id=\"countryBirthId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.countryBirthId}</option>\r\n                    {RenderCountriesBirth()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={stateBirthId} required className=\"clSelect\" name=\"statesBirth\" id=\"statesBirth\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.stateBirthName}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={professionalOccupationId} required className=\"clSelect\" name=\"professionalOccupationId\" id=\"professionalOccupationId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.professionalOccupationId}</option>\r\n                    {RenderProfessionalOccupations()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={educationLevelId} required className=\"clSelect\" name=\"educationLevel\" id=\"educationLevel\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.educationLevelId}</option>\r\n                    {RenderEducationLevel()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.residenceInOtherCountryId}</p>\r\n            <select value={residenceInOtherCountryId} className=\"clSelect\" name=\"residenceInOtherCountryId\" id=\"residenceInOtherCountryId\" onChange={e => OnChangeFields(e)}>\r\n                <option defaultValue value=\"\">{Labels.residenceInOtherCountryIdSelect}</option>\r\n                {RenderResidencesInOtherCountry()}\r\n            </select>\r\n\r\n            <p className=\"inputDescription\">{Labels.otherTaxResidenceCountryId}</p>\r\n            <select value={otherTaxResidenceCountryId} className=\"clSelect\" name=\"otherTaxResidenceCountryId\" id=\"otherTaxResidenceCountryId\" onChange={e => OnChangeFields(e)}>\r\n                <option defaultValue value=\"\">{Labels.otherTaxResidenceCountryIdSelect}</option>\r\n                {RenderOtherTaxResidencesCountry()}\r\n            </select>\r\n\r\n\r\n\r\n            <div>\r\n                <p className=\"inputDescription\">{Labels.ppeOccupation}</p>\r\n                <input value={ppeOccupation} type=\"text\" name=\"ppeOccupation\" id=\"ppeOccupation\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex df-jcspb d-flexdc\">\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.usPerson} ?</p>\r\n                    <Switch\r\n                        onColor=\"#4B4B4B\"\r\n                        offColor=\"#bdbbbb\"\r\n                        onHandleColor=\"#bdbbbb\"\r\n                        offHandleColor=\"#4B4B4B\"\r\n                        checked={usPerson}\r\n                        onChange={cheked => setusPerson(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isAssociatedPerson} ?</p>\r\n                    <Switch\r\n                        onColor=\"#4B4B4B\"\r\n                        offColor=\"#bdbbbb\"\r\n                        onHandleColor=\"#bdbbbb\"\r\n                        offHandleColor=\"#4B4B4B\"\r\n                        checked={isAssociatedPerson}\r\n                        onChange={cheked => setisAssociatedPerson(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isAdministratorInAnotherAccount} ?</p>\r\n                    <Switch\r\n                        onColor=\"#4B4B4B\"\r\n                        offColor=\"#bdbbbb\"\r\n                        onHandleColor=\"#bdbbbb\"\r\n                        offHandleColor=\"#4B4B4B\"\r\n                        checked={isAdministratorInAnotherAccount}\r\n                        onChange={cheked => setisAdministratorInAnotherAccount(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { createContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    questions:[],\r\n    answers:[]\r\n}\r\n\r\nexport const FormSuityContext = createContext(InitialState);\r\n\r\nexport const FormSuityProvider = (props) => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState([])\r\n\r\n    useEffect(() => {\r\n        GetQuestions()\r\n        GetAnswers()\r\n    }, [])\r\n\r\n    function GetQuestions() {\r\n        axios.get(config._urlQuestions)\r\n            .then(res => { if (res.data) setQuestions(res.data) })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    function GetAnswers() {\r\n        axios.get(config._urlAnswers)\r\n            .then(res => { if (res.data) setAnswers(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <FormSuityContext.Provider\r\n            value={{\r\n                questions, answers\r\n            }}\r\n        >\r\n            {props.children}\r\n        </FormSuityContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { FormSuityContext } from \"../../contexts/FormSuity\";\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT, _Json_FormSuity } = useContext(FormContext)\r\n    const { answers, questions } = useContext(FormSuityContext)\r\n\r\n    const Labels = {\r\n        answers: languagePT ? 'Selecionar uma resposta para a pergunta' : '',\r\n    }\r\n\r\n    let questionsAnswers = []\r\n\r\n    function OnChangeField(e) {\r\n        const { id, value } = e.target\r\n        const req = {\r\n            questionId: parseInt(id),\r\n            answerId: parseInt(value)\r\n        }\r\n        questionsAnswers = questionsAnswers.filter(q => q.questionId !== parseInt(id))\r\n        questionsAnswers.push(req)\r\n        _Json_FormSuity(questionsAnswers)\r\n    }\r\n\r\n    function RenderQuestions() {\r\n        return (\r\n            questions.map(q => {\r\n                return (\r\n                    <div className=\"div-question-answer\" key={q.suityQuestionId} id={q.suityQuestionId}>\r\n                        <span className=\"inputDescriptionTitle\">{q.question}</span>\r\n                        <div className=\"d-flex\">\r\n                            <select required name={q.suityQuestionId} id={q.suityQuestionId} onChange={e => OnChangeField(e)}>\r\n                                <option defaultValue value=\"\">{Labels.answers}</option>\r\n                                {RenderAnswers(q.suityQuestionId)}\r\n                            </select>\r\n                            <p className=\"required\">*</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    function RenderAnswers(QuestionId) {\r\n        const answersFiltered = answers.filter(a => a.suityQuestionId === QuestionId)\r\n        return (\r\n            answersFiltered.map(a => {\r\n                return (\r\n                    <option key={a.suityAnswerId} value={a.suityAnswerId} >{a.answer}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (RenderQuestions())\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nimport Switch from \"react-switch\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport {ValidCPF} from '../../utils'\r\n\r\n\r\nexport default function Attorney() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Dados do procurador' : 'Attorney information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador ?' : 'Do you authorize the transmission of orders by a Attorney?',\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        birthDate: languagePT ? 'Nascimento' : 'BirthDate',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        actionDescription: languagePT ? 'Descrição dos poderes' : 'Description of powers',\r\n        isPEP: languagePT ? 'O mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n    }\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode,\r\n        isAcceptedOrderAttorney, setisAcceptedOrderAttorney, name, taxpayerRegistry,\r\n        isPEP, setisPEP, actionDescription, setactionDescription, setname, settaxpayerRegistry, setbirthDate } = useContext(AttorneyContext)\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'birthDate':\r\n                const birthDate = `${value}T00:00:00`\r\n                console.log(birthDate)\r\n                setbirthDate(birthDate)\r\n                break;\r\n            case 'taxpayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxpayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'actionDescription':\r\n                setactionDescription(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Attorney\">\r\n\r\n            <div className=\"d-flex d-flexdc df-alc\">\r\n                <p className=\"inputDescription\">{Labels.isAcceptedOrderAttorney} ?</p>\r\n                <Switch\r\n                    onColor=\"#4B4B4B\"\r\n                    offColor=\"#bdbbbb\"\r\n                    onHandleColor=\"#bdbbbb\"\r\n                    offHandleColor=\"#4B4B4B\"\r\n                    checked={isAcceptedOrderAttorney}\r\n                    onChange={cheked => setisAcceptedOrderAttorney(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={20}\r\n                    width={50}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n            </div>\r\n\r\n            <div className={isAcceptedOrderAttorney ? \"d-flex d-flexdc\" : \"d-none\"}>\r\n                <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n\r\n                <div className=\"d-flex\">\r\n                    <input value={name} required={isAcceptedOrderAttorney} type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                        pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex\">\r\n                        <InputMask value={taxpayerRegistry} required={isAcceptedOrderAttorney} type=\"text\" name=\"taxpayerRegistry\" id=\"taxpayerRegistry\" \r\n                        placeholder={Labels.taxPayerRegistry} mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} \r\n                        onChange={e => OnChangeFields(e)} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                    <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <input required={isAcceptedOrderAttorney} type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                        min={Min} max={Max} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isPEP} ?</p>\r\n                    <Switch\r\n                        onColor=\"#4B4B4B\"\r\n                        offColor=\"#bdbbbb\"\r\n                        onHandleColor=\"#bdbbbb\"\r\n                        offHandleColor=\"#4B4B4B\"\r\n                        checked={isPEP}\r\n                        onChange={cheked => setisPEP(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex\">\r\n                        <input required={isAcceptedOrderAttorney} value={actionDescription} type=\"text\" name=\"actionDescription\" id=\"actionDescription\"\r\n                            pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} placeholder={Labels.actionDescription} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"d-flex\">\r\n                    <Countries onSelectCountry={onSelectCountry} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <States onSelectState={onSelectState} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <Cities onSelectCity={onSelectCity} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <AdressUtils ClientAdress={false} Attorney={true}>\r\n                    <div className=\"d-flex\">\r\n                        <CEP onCollectCep={onCollectCep} ClientAdress={false} Attorney={true} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </AdressUtils>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { EmailContext } from '../../contexts/EmailContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function EmailType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { emailTypes, setType, setMail } = useContext(EmailContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Tipo de Email' : 'Select Email Type',\r\n        Email: languagePT ? 'Formato aceitado: example@domain.com' : 'Format accepted: example@domain.com'\r\n    }\r\n\r\n    function SelectTypeEmail(e) {\r\n        const { value } = e.target\r\n        setType(value)\r\n    }\r\n    function SetMail(e){\r\n        const { value } = e.target\r\n        setMail(value)\r\n    }\r\n    function RenderEmailType() {\r\n        return (\r\n            emailTypes.map(em => {\r\n                return (\r\n                    <option key={em.emailTypeId} value={em.emailTypeId}>{em.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divEmailTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">E-mail</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"emailType\" id=\"emailType\" onChange={e => SelectTypeEmail(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderEmailType()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required type=\"email\" placeholder=\"example@domain.com\"\r\n                    pattern=\"^[\\w._\\-]+@\\w+.com(.br)?\" title={Labels.Email} onChange={e => SetMail(e)}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WealthsTypeContext } from '../../contexts/Wealths';\r\n\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport CurrencyInput from 'react-currency-masked-input'\r\n\r\nimport './index.css'\r\n\r\nexport default function Wealths(props) {\r\n    const { languagePT, _Json_Wealths } = useContext(FormContext)\r\n\r\n    const { typeWealthId, value, description, settypeWealthId, setvalue, setdescription, typesWealthId } = useContext(WealthsTypeContext)\r\n    const { professionalOccupationId } = useContext(ClientInfoContext)\r\n    const [error, setError] = useState(false)\r\n\r\n    const [clientWealths, setClientWealths] = useState([])\r\n\r\n    const Labels = {\r\n        SelectWealthTypeId: languagePT ? 'Selecione tipo de bens/finanças para cadastro' : 'Select type of wealth/finances to register',\r\n        inputDescriptionTitle: languagePT ? 'Informações de bens/finanças para cadastro' : 'Wealths/Finances information for registration',\r\n        description: languagePT ? 'Descrição do bem/finança' : 'Wealths/Finances Description',\r\n        value: languagePT ? 'Valor do bem/finança' : 'Wealths/Finances Value',\r\n        addButtonDescription: languagePT ? 'CLIQUE PARA ADICIONAR O BEM/FINANÇA' : 'CLICK TO ADD A WEALTH/FINANCE'\r\n    }\r\n\r\n    const required = professionalOccupationId === \"8\" || professionalOccupationId === \"9\" ||\r\n        professionalOccupationId === \"\" ? false : true\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'wealthTypeId':\r\n                settypeWealthId(value)\r\n                break;\r\n            case 'wealthDescription':\r\n                setdescription(value)\r\n                break;\r\n            case 'wealthValue':\r\n                let valor = value + '';\r\n                valor = parseInt(valor.replace(/[\\D]+/g, ''));\r\n                valor = valor + '';\r\n                valor = valor.replace(/([0-9]{2})$/g, \".$1\");\r\n                setvalue(valor)\r\n                if (valor == 'NaN') setvalue('') \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderWealthTypes() {\r\n        return (\r\n            typesWealthId.map(tw => {\r\n                return (\r\n                    <option key={tw.wealthTypeId} value={tw.wealthTypeId}>{tw.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderClientWealths() {\r\n        return (\r\n            clientWealths.map((cw, index) => {\r\n                return (\r\n                    <div className=\"wealth\" key={`${cw.description}${index}`}>\r\n                        <div className=\"d-flex d-flexdc\">\r\n                            <span className=\"inputDescription\">Descrição: {cw.description}</span>\r\n                            <span className=\"inputDescription\">Valor: {cw.value}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeClientWealth(index)}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addClientWealth() {\r\n        if (!typeWealthId || !description || !value) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            let wealth = {\r\n                typeWealthId: parseInt(typeWealthId),\r\n                value: parseFloat(value).toFixed(2),\r\n                description: description\r\n            }\r\n            setClientWealths([...clientWealths, wealth])\r\n            setdescription('')\r\n            setvalue('')\r\n        }\r\n    }\r\n    function removeClientWealth(i) {\r\n        setClientWealths(clientWealths.filter((c, index) => index !== i))\r\n    }\r\n\r\n    useEffect(() => {\r\n        _Json_Wealths(clientWealths)\r\n    }, [clientWealths])\r\n\r\n    return (\r\n        <div className={required ? \"divWealthTypes\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">{Labels.inputDescriptionTitle}</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={required && clientWealths.length === 0} name=\"wealthTypeId\" id=\"wealthTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.SelectWealthTypeId}</option>\r\n                    {RenderWealthTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={required && clientWealths.length === 0} value={description} type=\"text\" name=\"wealthDescription\" id=\"wealthDescription\" placeholder={Labels.description}\r\n                    onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.value}</p>\r\n            {/* <div className=\"d-flex\"> */}\r\n            <div className=\"d-flex\">\r\n                <input type=\"text\" value={value} required={required && clientWealths.length === 0} name=\"wealthValue\" id=\"wealthValue\"\r\n                    placeholder=\"$0\" onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            {/* </div> */}\r\n\r\n            <div className=\"wealths\">\r\n                {RenderClientWealths()}\r\n            </div>\r\n            <div className=\"addButton\">\r\n                <button type=\"button\" onClick={() => addClientWealth()}>\r\n                    {Labels.addButtonDescription}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>Selecione um item da lista e Preencha os campos</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { PhonesContext } from \"../../contexts/PhonesContexts\";\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function PhoneType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { phoneTypes, setPhoneTypeId, phoneTypeId, setCountryCode,setNumber,setStateCode } = useContext(PhonesContext)\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Número de Telefone' : 'Phone number',\r\n        Select: languagePT ? 'Selecionar Tipo de Telefone' : 'Select Phone Type',\r\n        SelectError: languagePT ? 'Erro ao consultar Tipos de Telefone' : 'Error querying Phone Type',\r\n        Celnumber: languagePT ? 'Formato exigido: +DDI (DDD) 9XXXX-XXXX' : '',\r\n        Resnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : '',\r\n        Comnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : ''\r\n    }\r\n\r\n    function SelectTypePhone(e) {\r\n        const { value } = e.target\r\n        setPhoneTypeId(value)\r\n    }\r\n\r\n    function SetPhoneNumber(e){\r\n        const { value } = e.target\r\n        if(value.length >= 18){\r\n            const CountryCode = value.split(\" \")[0].replace(\"+\",\"\")\r\n            const StateCode = value.split(\" \")[1].replace(\"(\",\"\").replace(\")\",\"\")\r\n            const _Number = value.split(\" \")[2].replace(\"-\",\"\")\r\n            setCountryCode(CountryCode)\r\n            setStateCode(StateCode)\r\n            setNumber(_Number)\r\n        }\r\n    }\r\n\r\n    function RenderPhoneType() {\r\n        return (\r\n            phoneTypes.map(ph => {\r\n                return (\r\n                    <option key={ph.phoneTypeId} value={ph.phoneTypeId}>{ph.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divPhoneTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"phoneType\" id=\"phoneType\" onChange={e => SelectTypePhone(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderPhoneType()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <InputMask name=\"ResidencialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '1'} maskChar=\"\" title={Labels.Resnumber}\r\n            className={phoneTypeId === '1' ? '' : 'd-none'} mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\"/>\r\n\r\n            <InputMask name=\"ComercialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '2'} maskChar=\"\" title={Labels.Comnumber}\r\n            className={phoneTypeId === '2' ? '' : 'd-none'} mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\"/>\r\n\r\n            <InputMask name=\"CelNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '3'} maskChar=\"\" title={Labels.Celnumber}\r\n            className={phoneTypeId === '3' ? '' : 'd-none'} mask=\"+99 (99) 99999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{5}[-]\\d{4}\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WorkContext } from '../../contexts/Work';\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport {validarCNPJ} from '../../utils'\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport './index.css'\r\n\r\nexport default function Work(props) {\r\n    const [errorCNPJ, setErrorCNPJ] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setinstitutionName, setprofession, setoccupation, setcorporateTaxpayerRegistry,\r\n        institutionName, profession, occupation, corporateTaxpayerRegistry, setIsRequired } = useContext(WorkContext)\r\n    const { professionalOccupationId } = useContext(ClientInfoContext)\r\n\r\n    const required = professionalOccupationId === \"3\" || professionalOccupationId === \"6\" ||\r\n        professionalOccupationId === \"8\" || professionalOccupationId === \"9\" || professionalOccupationId === \"\" ? false : true\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [required])\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações Instituição de Trabalho' : 'Work Institution Information',\r\n        institutionName: languagePT ? 'Nome da instituição' : 'Institution Name',\r\n        onlyLettersAndNumbersTitle: languagePT ? 'Somente letras e numeros' : 'Only letters and numbers',\r\n        profession: languagePT ? 'Profissão' : 'Profession',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        corporateTaxpayerRegistry: languagePT ? 'CNPJ da instituição de trabalho' : 'CNPJ of the work institution',\r\n        cnpjTitle: languagePT ? 'Digite um cnpj valido' : 'Enter a valid cnpj',\r\n    }\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'institutionName':\r\n                setinstitutionName(value)\r\n                break;\r\n            case 'profession':\r\n                setprofession(value)\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'corporateTaxpayerRegistry':\r\n                setcorporateTaxpayerRegistry(value)\r\n                const cnpj = value.replace(/[^\\d]+/g, '');\r\n\r\n                if (cnpj.length < 14) setErrorCNPJ(false)\r\n                else if (cnpj.length === 14) {\r\n                    if (validarCNPJ(cnpj)) {\r\n                        setErrorCNPJ(false)\r\n                        setcorporateTaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        setcorporateTaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCNPJ(true)\r\n                    }\r\n                }\r\n                else if (cnpj.length > 14) {\r\n                    setErrorCNPJ(true)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={required ? \"divWork\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={institutionName} type=\"text\" name=\"institutionName\" id=\"institutionName\" placeholder={Labels.institutionName}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={profession} type=\"text\" name=\"profession\" id=\"profession\" placeholder={Labels.profession}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={occupation} type=\"text\" name=\"occupation\" id=\"occupation\" placeholder={Labels.occupation}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <InputMask required={required} value={corporateTaxpayerRegistry} type=\"text\" name=\"corporateTaxpayerRegistry\" id=\"corporateTaxpayerRegistry\" \r\n                    placeholder={Labels.corporateTaxpayerRegistry} pattern=\"^\\d{2}\\.?\\d{3}\\.?\\d{3}\\/?\\d{4}-?\\d{2}$\" mask=\"99.999.999/9999-99\" title={Labels.cnpjTitle} \r\n                    onChange={e => OnChangeField(e)} />\r\n\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCNPJ ? 'errorCNPJ' : 'd-none'}>{Labels.cnpjTitle}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport { IdentificationTypeProvider } from './contexts/IdentificationTypeContexts';\r\nimport { FormContext } from './contexts/FormContexts';\r\nimport { AttorneyProvider } from './contexts/AttorneyContexts';\r\nimport { AdressesProvider } from './contexts/AdressesContexts'\r\nimport { BankAccountsProvider } from './contexts/BankContexts'\r\nimport { PhonesProvider } from './contexts/PhonesContexts';\r\nimport { EmailProvider } from './contexts/EmailContexts';\r\nimport { WealthsTypeProvider } from './contexts/Wealths';\r\nimport { WorkProvider } from './contexts/Work';\r\n\r\n\r\n\r\nimport IdentificationType from './components/IdentificationType';\r\nimport ClientAdress from './components/ClientAdress'\r\nimport BankAccounts from './components/BankAccounts';\r\nimport PPERelateds from './components/PPE Related';\r\nimport ClientInfo from './components/ClientInfo';\r\nimport FormSuity from './components/FormSuity';\r\nimport Attorney from './components/Attorney';\r\nimport EmailType from './components/Email';\r\nimport Wealths from './components/Wealths';\r\nimport Phones from './components/Phones';\r\nimport Work from './components/Work';\r\n\r\nimport './Global.css';\r\nimport { FormSuityProvider } from './contexts/FormSuity';\r\nimport { PPERelatedsProvider } from './contexts/PPERelatedsContext';\r\n\r\nfunction App() {\r\n    const { saveClient } = useContext(FormContext)\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault()\r\n        saveClient()\r\n    }\r\n    return (\r\n        <form onSubmit={e => onSubmit(e)} action=\"\" method=\"\" autoComplete=\"off\">\r\n\r\n            <div className=\"div-infos\">\r\n\r\n                <div className=\"div-client\">\r\n                    <ClientInfo />\r\n                    <div className=\"div-client-1\">\r\n                        <PhonesProvider>\r\n                            <Phones />\r\n                        </PhonesProvider>\r\n\r\n                        <IdentificationTypeProvider>\r\n                            <IdentificationType />\r\n                        </IdentificationTypeProvider>\r\n\r\n                        <EmailProvider>\r\n                            <EmailType />\r\n                        </EmailProvider>\r\n\r\n                        <AdressesProvider>\r\n                            <ClientAdress />\r\n                        </AdressesProvider>\r\n\r\n                        <PPERelatedsProvider>\r\n                            <PPERelateds />\r\n                        </PPERelatedsProvider>\r\n\r\n                        <WorkProvider>\r\n                            <Work />\r\n                        </WorkProvider>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"div-wealthsType\">\r\n                    <BankAccountsProvider>\r\n                        <BankAccounts />\r\n                    </BankAccountsProvider>\r\n\r\n                    <WealthsTypeProvider>\r\n                        <Wealths />\r\n                    </WealthsTypeProvider>\r\n                </div>\r\n\r\n\r\n                <div className=\"div-attorney\">\r\n                    <AttorneyProvider>\r\n                        <Attorney />\r\n                    </AttorneyProvider>\r\n                </div>\r\n\r\n                <div className=\"div-formsuity\">\r\n                    <FormSuityProvider>\r\n                        <FormSuity />\r\n                    </FormSuityProvider>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"div-footer\">\r\n                <button type=\"submit\">CADASTRAR</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { FormProvider } from './contexts/FormContexts';\nimport { ClientInfoProvider } from './contexts/ClientInfoContexts';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Form from './form'\n\nimport './Global.css';\n\nfunction App() {\n  return (\n    <FormProvider>\n      <ClientInfoProvider>\n        <ToastContainer\n          position=\"top-right\" autoClose={2500}\n          hideProgressBar={false} newestOnTop={false}\n          closeOnClick rtl={false} pauseOnHover={false}\n          pauseOnVisibilityChange draggable\n          pauseOnFocusLoss={false}\n        />\n        <Form />\n      </ClientInfoProvider>\n    </FormProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}