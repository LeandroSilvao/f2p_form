{"version":3,"sources":["config.js","components/Toastify/index.jsx","components/Toastify/Toastify.js","contexts/FormContexts.jsx","contexts/ClientInfoContexts.jsx","contexts/IdentificationTypeContexts.jsx","contexts/AttorneyContexts.jsx","contexts/AdressesContexts.jsx","contexts/BankContexts.jsx","contexts/PhonesContexts.jsx","contexts/EmailContexts.jsx","contexts/Wealths.jsx","contexts/Work.jsx","components/IdentificationType/index.jsx","components/Countries/index.jsx","components/State/index.jsx","components/City/index.jsx","components/AdressType/index.jsx","components/Cep/index.jsx","components/AdressUtils/index.jsx","components/ClientAdress/index.jsx","components/BankAccounts/index.jsx","contexts/PPERelatedsContext.jsx","utils.js","components/PPE Related/index.jsx","contexts/Spouse.jsx","components/Spouse/index.jsx","contexts/LegalRepresentativeContexts.jsx","components/LegalRepresentative/index.jsx","components/ClientInfo/index.jsx","contexts/FormSuity.jsx","components/FormSuity/index.jsx","components/Attorney/index.jsx","components/Email/index.jsx","components/Wealths/index.jsx","components/Phones/index.jsx","components/Work/index.jsx","form.js","App.js","index.js"],"names":["proxy","config","_urlCountries","_urlStates","_urlCities","_urlAdressType","_urlPhoneType","_urlGenders","_urlMaritalStatus","_urlMaritalAgreement","_urlProfessionalOccupation","_urlEducation","_urlEmailType","_urlIdentificationType","_urlWealthType","_urlRelationshipType","_urlBankAccountType","_urlBankGetByCode","_urlBankGetById","_urlBank","_urlQuestions","_urlAnswers","_urlSaveClient","_urlGetPluralAccount","Toastify","className","this","props","description","Component","Warn","id","text","autoClose","draggable","icon","toast","isActive","warn","toastId","InitialState","languagePT","Boolean","errorOnApi","_Json_ClientAddresses","obj","_Json_ClientInfo","_Json_AttorneyInfo","_Json_PhoneInfo","_Json_EmailInfo","_Json_ClientIdentification","_Json_Spouse","_Json_Work","_Json_Wealths","_Json_FormSuity","_Json_BankAccounts","_Json_LegalRepresentative","_Json_PPERelateds","saveClient","reqJSON","clientId","name","shortName","taxPayerRegistry","birthDate","fatherName","genderId","maritalStatusId","maritalAgreementId","motherName","nationality","countryBirthId","stateBirthId","stateBirthName","professionalOccupationId","residenceInOtherCountryId","otherTaxResidenceCountryId","educationLevelId","ppeOccupation","usPerson","isAssociatedPerson","urlCallback","isAcceptedOrderAttorney","isAdministratorInAnotherAccount","attorneys","spouse","document","work","phones","emails","bankAccounts","wealths","addresses","ppeRelateds","formSuity","legalRepresentatives","authentication","login","password","FormContext","createContext","FormProvider","useState","setLanguagePT","useEffect","window","location","pathname","split","filter","i","length","Provider","value","console","log","required","JSON","stringify","children","String","setname","setshortName","settaxPayerRegistry","setbirthDate","age","setAge","setfatherName","setgenderId","gendersIds","setmaritalStatusId","maritalStatus","maritalAgreements","setmotherName","getCountriesBirthId","setppeOccupation","setusPerson","setisAssociatedPerson","setisAdministratorInAnotherAccount","ClientInfoContext","ClientInfoProvider","useContext","setnationality","setgendersIds","setMaritalStatus","setmaritalAgreementId","setmaritalAgreements","setcountryBirthId","countriesBirthId","setcountriesBirthId","setstateBirthId","setstateBirthName","statesBirth","setstatesBirth","setprofessionalOccupationId","professionalOccupationsId","setprofessionalOccupationsId","setresidenceInOtherCountryId","residencesInOtherCountryId","setresidencesInOtherCountryId","setotherTaxResidenceCountryId","otherTaxResidencesCountryId","setotherTaxResidencesCountryId","seteducationLevelId","educationsLevelId","seteducationsLevelId","replace","parseInt","axios","get","then","res","data","catch","err","identificationTypeId","number","emissionInssuer","emission","stateId","identificationTypes","setidentificationTypeId","setnumber","setemissionInssuer","setemission","setstateId","IdentificationTypeContext","IdentificationTypeProvider","setIdentificationTypes","states","setStates","taxpayerRegistry","settaxpayerRegistry","isPEP","setisPEP","actionDescription","setactionDescription","countryId","setCountryId","setStateId","stateName","setStateName","cityId","setCityId","cityName","setCityName","neighborhood","setneighborhood","setdescription","zipCode","setZipCode","complement","setcomplement","typeAddressId","setTypeAddressId","AttorneyContext","AttorneyProvider","setisAcceptedOrderAttorney","address","setNeighborhood","setDescription","zipcode","setNumber","setComplement","AdressesContext","AdressesProvider","AdressJson","bankId","agency","account","digit","typeAccountId","bankAccountTypes","banks","setbankId","setagency","setaccount","setdigit","settypeAccountId","BankAccountsContext","BankAccountsProvider","setBankAccountTypes","setBanks","newBanks","map","bank","code","push","GetBanks","phoneTypes","phoneTypeId","countryCode","stateCode","setPhoneTypeId","setCountryCode","setStateCode","PhonesContext","PhonesProvider","setPhoneTypes","type","mail","isCorrespondency","emailTypes","setMail","setType","setIsCorrespondency","EmailContext","EmailProvider","setEmailTypes","typeWealthId","typesWealthId","settypeWealthId","setvalue","WealthsTypeContext","WealthsTypeProvider","settypesWealthId","institutionName","occupation","profession","corporateTaxpayerRegistry","setinstitutionName","setoccupation","setprofession","setcorporateTaxpayerRegistry","setIsRequired","WorkContext","WorkProvider","isRequired","IdentificationType","Labels","componentTitle","Select","States","documentNumber","Max","Date","toISOString","Min","OnChangeField","e","target","onChange","defaultValue","idt","identifycationTypeId","placeholder","s","statename","min","max","Countries","countries","setCountries","Atctx","SelectError","Attorney","ClientAdress","onSelectCountry","c","Adctx","getStates","_countryId","onSelectState","Cities","cities","setCities","getCities","_stateId","onSelectCity","cityname","AdressType","adressType","setAdressType","onSelectTypeAddress","adt","addressTypeId","CEP","error","setError","CollectCep","Error","maxLength","Cep","onCollectCep","test","ValidateCEP","AdressUtils","setInput","Adresses","selectedIndex","options","getAttribute","cep","BankAccounts","clientBankAccounts","setclientBankAccounts","selectItems","SelecttypeAccountId","SelectbankId","addAccount","bat","bankAccountTypeId","SelectSearch","search","filterOptions","fuse","Fuse","keys","threshold","array","item","emptyMessage","printOptions","closeOnSelect","index","find","b","toString","onClick","addBankAccount","PPERelatedsContext","PPERelatedsProvider","reqJson","ValidCPF","cpf","Soma","Resto","substring","PPERelateds","errorCpf","setErrorCpf","PPERelated","setPPERelated","cpfTitle","onlyLettersTitle","onColor","onHandleColor","offColor","offHandleColor","checked","cheked","handleDiameter","boxShadow","activeBoxShadow","height","width","pattern","title","mask","onlyLettersAndNumbersTitle","setHide","SpouseContext","SpouseProvider","spouseId","hide","Spouse","emissionDoc","relationshipTypeId","relationshipTypesId","setRelationshipTypeId","LegalRepresentativeContext","LegalRepresentativeProvider","setRelationshipTypesId","Work","legalRepresentativeName","legalRepresentativeTaxpayerRegistry","includes","reltid","ClientInfo","dateInvalid","residenceInOtherCountryIdSelect","otherTaxResidenceCountryIdSelect","OnChangeFields","d","ano_atual","getFullYear","mes_atual","getMonth","dia_atual","getDate","ano_aniversario","mes_aniversario","dia_aniversario","Qtd_Anos","stateNameBirth","g","m","pot","ed","roc","otrc","questions","answers","FormSuityContext","FormSuityProvider","setQuestions","setAnswers","questionsAnswers","q","suityQuestionId","question","req","questionId","answerId","QuestionId","a","suityAnswerId","answer","EmailType","Email","SelectTypeEmail","em","emailTypeId","SetMail","Wealths","clientWealths","setClientWealths","SelectWealthTypeId","inputDescriptionTitle","addButtonDescription","valor","tw","wealthTypeId","cw","wealth","parseFloat","toFixed","addClientWealth","PhoneType","Celnumber","Resnumber","Comnumber","SetPhoneNumber","CountryCode","StateCode","_Number","SelectTypePhone","ph","maskChar","errorCNPJ","setErrorCNPJ","cnpjTitle","cnpj","tamanho","numeros","digitos","soma","pos","charAt","resultado","validarCNPJ","App","HeaderTitle","BackToSite","ButtonSave","href","onSubmit","preventDefault","action","method","autoComplete","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnHover","pauseOnVisibilityChange","pauseOnFocusLoss","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.674890b4.chunk.js","sourcesContent":["const proxy = \"https://d3218c0301c6.ngrok.io/\"\r\n// const proxy = \"http://localhost:2525/\"\r\n\r\nconst config = {\r\n    _urlCountries: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Country\",\r\n    _urlStates: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/State/GetByCountryId/\",\r\n    _urlCities: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/City/GetByStateId/\",\r\n    _urlAdressType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/AddressType\",\r\n    _urlPhoneType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/PhoneType\",\r\n    _urlGenders: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Gender\",\r\n    _urlMaritalStatus: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/MaritalStatus\",\r\n    _urlMaritalAgreement: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/MaritalAgreement\",\r\n    _urlProfessionalOccupation: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/ProfessionalOccupation\",\r\n    _urlEducation: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Education\",\r\n    _urlEmailType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/EmailType\",\r\n    _urlIdentificationType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/IdentificationType\",\r\n    _urlWealthType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/WealthType\",\r\n    _urlRelationshipType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/RelationshipType\",\r\n    _urlBankAccountType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/BankAccountType\",\r\n    _urlBankGetByCode: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Bank/GetByCode/\",\r\n    _urlBankGetById: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Bank/GetById/\",\r\n    _urlBank: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Bank\",\r\n    _urlQuestions: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Suity/Questions\",\r\n    _urlAnswers: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Suity/Answers\",\r\n    _urlSaveClient: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/Save\",\r\n    _urlGetPluralAccount: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/GetPluralAccount/\"\r\n}\r\n\r\nexport default config","/* eslint-disable no-empty */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Toastify extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex df-jcspb\">\r\n                <div className=\"mr-3\">\r\n                <i className={this.props.className} />\r\n                </div>\r\n                <span> {this.props.description}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport Toastify from \"./index\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction Success(id,text,autoClose=2500,draggable = true,icon = 'fas fa-check'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.success(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable  }\r\n          );\r\n    }\r\n}\r\nfunction Error(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-triangle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.error(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\nfunction Warn(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-circle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.warn(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\n\r\nexport { Success, Error, Warn }","import { createContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\n\r\nimport { Error, Success, Warn } from '../components/Toastify/Toastify'\r\n\r\nconst InitialState = {\r\n  languagePT: Boolean,\r\n  errorOnApi: Boolean,\r\n  _Json_ClientAddresses: (obj) => { },\r\n  _Json_ClientInfo: (obj) => { },\r\n  _Json_AttorneyInfo: (obj) => { },\r\n  _Json_PhoneInfo: (obj) => { },\r\n  _Json_EmailInfo: (obj) => { },\r\n  _Json_ClientIdentification: (obj) => { },\r\n  _Json_Spouse: (obj) => { },\r\n  _Json_Work: (obj) => { },\r\n  _Json_Wealths: (obj) => { },\r\n  _Json_FormSuity: (obj) => { },\r\n  _Json_BankAccounts: (obj) => { },\r\n  _Json_LegalRepresentative: (obj) => { },\r\n  _Json_PPERelateds: (obj) => { },\r\n  saveClient: () => { }\r\n}\r\n\r\nlet reqJSON = {\r\n  clientId: 0,\r\n  name: '',\r\n  shortName: '',\r\n  taxPayerRegistry: '',\r\n  birthDate: '',\r\n  fatherName: '',\r\n  genderId: 0,\r\n  maritalStatusId: 0,\r\n  maritalAgreementId: 0,\r\n  motherName: '',\r\n  nationality: '',\r\n  countryBirthId: 0,\r\n  stateBirthId: 0,\r\n  stateBirthName: '',\r\n  professionalOccupationId: 0,\r\n  residenceInOtherCountryId: 0,\r\n  otherTaxResidenceCountryId: 0,\r\n  educationLevelId: 0,\r\n  ppeOccupation: '',\r\n  usPerson: false,\r\n  isAssociatedPerson: false,\r\n  urlCallback: '',\r\n  isAcceptedOrderAttorney: false,\r\n  isAdministratorInAnotherAccount: false,\r\n  attorneys: [],\r\n  spouse: {},\r\n  document: {},\r\n  work: {},\r\n  phones: [],\r\n  emails: [],\r\n  bankAccounts: [],\r\n  wealths: [],\r\n  addresses: [],\r\n  ppeRelateds: [],\r\n  formSuity: [],\r\n  legalRepresentatives: [],\r\n  authentication: {\r\n    login: 'APITEST',\r\n    password: 'APITEST'\r\n  }\r\n}\r\n\r\nexport const FormContext = createContext(InitialState);\r\n\r\nexport const FormProvider = (props) => {\r\n  const [languagePT, setLanguagePT] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const url = window.location.pathname.split(\"/\")\r\n    const enUS = url.filter(i => i === 'en')\r\n    if (enUS.length > 0) setLanguagePT(false)\r\n    else setLanguagePT(true)\r\n  }, [])\r\n\r\n\r\n\r\n  function _Json_ClientAddresses(obj) {\r\n    reqJSON.addresses = [obj]\r\n  }\r\n  function _Json_ClientInfo(obj) {\r\n    reqJSON = { ...reqJSON, ...obj }\r\n  }\r\n  function _Json_AttorneyInfo(obj) {\r\n    reqJSON.attorneys = obj\r\n  }\r\n  function _Json_PhoneInfo(obj) {\r\n    reqJSON.phones = [obj]\r\n  }\r\n  function _Json_EmailInfo(obj) {\r\n    reqJSON.emails = [obj]\r\n  }\r\n  function _Json_ClientIdentification(obj) {\r\n    reqJSON.document = obj\r\n  }\r\n  function _Json_Spouse(obj) {\r\n    reqJSON.spouse = obj\r\n  }\r\n  function _Json_Work(obj) {\r\n    reqJSON.work = obj\r\n  }\r\n  function _Json_Wealths(obj) {\r\n    reqJSON.wealths = obj\r\n  }\r\n  function _Json_FormSuity(obj) {\r\n    reqJSON.formSuity = obj\r\n  }\r\n  function _Json_PPERelateds(obj) {\r\n    reqJSON.ppeRelateds = [obj]\r\n  }\r\n  function _Json_BankAccounts(obj) {\r\n    reqJSON.bankAccounts = obj\r\n  }\r\n  function _Json_LegalRepresentative(obj) {\r\n    reqJSON.legalRepresentatives = [obj]\r\n  }\r\n  function saveClient() {\r\n    console.log(reqJSON.professionalOccupationId)\r\n    const required = reqJSON.professionalOccupationId === 8 || reqJSON.professionalOccupationId === 9  ? false : true\r\n\r\n    if (reqJSON.bankAccounts.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione uma conta bancaria' : 'Add a bank account'\r\n      Warn(\r\n        \"Addbankaccount\",\r\n        ErrorMessage,\r\n        5000,\r\n        false\r\n      );\r\n    }\r\n    else if (required && reqJSON.wealths.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione um bem/finança' : 'Add a wealth / finance'\r\n      Warn(\r\n        \"Addwealth/finance\",\r\n        ErrorMessage,\r\n        5000,\r\n        false\r\n      );\r\n    }\r\n    else {\r\n      console.log(JSON.stringify(reqJSON))\r\n      // axios.post(config._urlSaveClient, reqJSON)\r\n      //   .then(res => {\r\n      //     if (res.data) {\r\n      //       // console.log(res.data)\r\n      //       CheckClient(res.data.code)\r\n      //     }\r\n      //   })\r\n      //   .catch(err => {\r\n      //     if (err.request || err.response) {\r\n      //       // The request was made but no response was received\r\n      //       console.log('Error', err.message);\r\n      //       const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n      //       Error(\r\n      //         \"ErrorOnCreateClient\",\r\n      //         ErrorMessage,\r\n      //         5000,\r\n      //         false\r\n      //       );\r\n      //     } else {\r\n      //       // Something happened in setting up the request that triggered an Error\r\n      //       console.log('Error', err.message);\r\n      //       const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n      //       Error(\r\n      //         \"ErrorOnCreateClient\",\r\n      //         ErrorMessage,\r\n      //         5000,\r\n      //         false\r\n      //       );\r\n      //     }\r\n      //   })\r\n    }\r\n  }\r\n\r\n\r\n  function CheckClient(clientCode) {\r\n    const interval = setInterval(() => {\r\n      axios.get(`${config._urlGetPluralAccount}${clientCode}`)\r\n        .then(res => {\r\n          if (res.data.clientCode) {\r\n            // Cliente cadastrado com sucesso\r\n            const SuccessMessage = languagePT ? 'Cadastro Concluido com Sucesso' : 'Registration Completed Successfully'\r\n            Success('ClientCreated', SuccessMessage, 5000, false)\r\n            clearInterval(interval)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (err.response) {\r\n            // Request made and server responded\r\n            if (err.response.data.innerMessage) {\r\n              const WarnMessage = languagePT ? 'O cadastro está na fila de análise/aprovação interna' : 'The registration is in the internal review / approval queue'\r\n              Warn(\r\n                \"RegistryInQueue\",\r\n                WarnMessage,\r\n                5000,\r\n                false\r\n              );\r\n            }\r\n          }\r\n          else if (err.request) {\r\n            // The request was made but no response was received\r\n            console.log(err.request);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              5000,\r\n              false\r\n            );\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              5000,\r\n              false\r\n            );\r\n          }\r\n        })\r\n    }, 5000);\r\n\r\n  }\r\n\r\n  return (\r\n    <FormContext.Provider\r\n      value={{\r\n        languagePT,\r\n        _Json_ClientAddresses,\r\n        _Json_ClientInfo,\r\n        _Json_AttorneyInfo,\r\n        _Json_PhoneInfo,\r\n        _Json_EmailInfo,\r\n        _Json_ClientIdentification,\r\n        _Json_Spouse,\r\n        _Json_Work,\r\n        _Json_Wealths,\r\n        _Json_LegalRepresentative,\r\n        _Json_BankAccounts,\r\n        _Json_FormSuity,\r\n        _Json_PPERelateds,\r\n        saveClient\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FormContext.Provider>\r\n  );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    name: String,\r\n    setname: () => { },\r\n    shortName: String,\r\n    setshortName: () => { },\r\n    taxPayerRegistry: String,\r\n    settaxPayerRegistry: () => { },\r\n    birthDate: String,\r\n    setbirthDate: () => { },\r\n    age: String,\r\n    setAge: () => { },\r\n    fatherName: String,\r\n    setfatherName: () => { },\r\n    genderId: String,\r\n    setgenderId: () => { },\r\n    gendersIds: [],\r\n    maritalStatusId: String,\r\n    setmaritalStatusId: () => { },\r\n    maritalStatus: [],\r\n    maritalAgreementId: String,\r\n    maritalAgreements: [],\r\n    motherName: String,\r\n    setmotherName: () => { },\r\n    nationality: String,\r\n    countryBirthId: String,\r\n    getCountriesBirthId: () => { },\r\n    stateBirthId: String,\r\n    stateBirthName: String,\r\n    professionalOccupationId: String,\r\n    residenceInOtherCountryId: String,\r\n    otherTaxResidenceCountryId: String,\r\n    educationLevelId: String,\r\n    ppeOccupation: String,\r\n    setppeOccupation: () => { },\r\n    usPerson: String,\r\n    setusPerson: () => { },\r\n    isAssociatedPerson: String,\r\n    setisAssociatedPerson: () => { },\r\n    urlCallback: String,\r\n    isAcceptedOrderAttorney: String,\r\n    isAdministratorInAnotherAccount: String,\r\n    setisAdministratorInAnotherAccount: () => { }\r\n}\r\nexport const ClientInfoContext = createContext(InitialState);\r\n\r\nexport const ClientInfoProvider = (props) => {\r\n    const {_Json_ClientInfo, _Json_Spouse} = useContext(FormContext)\r\n\r\n    //#region States\r\n\r\n    const [clientId, setclientId] = useState(0)\r\n    const [name, setname] = useState('')\r\n    const [shortName, setshortName] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [age, setAge] = useState('')\r\n    const [fatherName, setfatherName] = useState('')\r\n    const [motherName, setmotherName] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    //! Gender variables\r\n    const [genderId, setgenderId] = useState('')\r\n    const [gendersIds, setgendersIds] = useState([])\r\n    //! Marital variables\r\n    const [maritalStatusId, setmaritalStatusId] = useState('')\r\n    const [maritalStatus, setMaritalStatus] = useState([])\r\n    const [maritalAgreementId, setmaritalAgreementId] = useState('')\r\n    const [maritalAgreements, setmaritalAgreements] = useState([])\r\n    //! Country and state birth variables\r\n    const [countryBirthId, setcountryBirthId] = useState('')\r\n    const [countriesBirthId, setcountriesBirthId] = useState([])\r\n    const [stateBirthId, setstateBirthId] = useState('')\r\n    const [stateBirthName, setstateBirthName] = useState('')\r\n    const [statesBirth, setstatesBirth] = useState([])\r\n    //! Professional ocupation variables\r\n    const [professionalOccupationId, setprofessionalOccupationId] = useState('')\r\n    const [professionalOccupationsId, setprofessionalOccupationsId] = useState([])\r\n    //! Residence in other country variables\r\n    const [residenceInOtherCountryId, setresidenceInOtherCountryId] = useState('')\r\n    const [residencesInOtherCountryId, setresidencesInOtherCountryId] = useState([])\r\n    //! Other tax residence in other country variables\r\n    const [otherTaxResidenceCountryId, setotherTaxResidenceCountryId] = useState('')\r\n    const [otherTaxResidencesCountryId, setotherTaxResidencesCountryId] = useState([])\r\n    //! Education level variables\r\n    const [educationLevelId, seteducationLevelId] = useState('')\r\n    const [educationsLevelId, seteducationsLevelId] = useState([])\r\n    const [ppeOccupation, setppeOccupation] = useState('')\r\n    const [usPerson, setusPerson] = useState(false)\r\n    const [isAssociatedPerson, setisAssociatedPerson] = useState(false)\r\n    const [isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount] = useState(false)\r\n\r\n    //#endregion\r\n\r\n    const reqJSON = {\r\n        clientId: clientId,\r\n        name: name,\r\n        shortName: shortName,\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        birthDate: `${birthDate}T00:00:00`,\r\n        fatherName: fatherName,\r\n        genderId: parseInt(genderId),\r\n        maritalStatusId: parseInt(maritalStatusId),\r\n        maritalAgreementId: maritalAgreementId ? parseInt(maritalAgreementId) : 0,\r\n        motherName: motherName,\r\n        nationality: nationality,\r\n        countryBirthId: parseInt(countryBirthId),\r\n        stateBirthId: parseInt(stateBirthId),\r\n        stateBirthName: stateBirthName,\r\n        professionalOccupationId: parseInt(professionalOccupationId),\r\n        residenceInOtherCountryId: parseInt(residenceInOtherCountryId),\r\n        otherTaxResidenceCountryId: parseInt(otherTaxResidenceCountryId),\r\n        educationLevelId: parseInt(educationLevelId),\r\n        ppeOccupation: ppeOccupation,\r\n        usPerson: usPerson,\r\n        isAssociatedPerson: isAssociatedPerson,\r\n        isAdministratorInAnotherAccount: isAdministratorInAnotherAccount,\r\n    }\r\n    useEffect(() => {\r\n        console.log(maritalStatusId)\r\n        if(maritalStatusId !== \"2\") _Json_Spouse({})\r\n    }, [maritalStatusId])\r\n\r\n    // Campos não obrigatórios\r\n    useEffect(() => {\r\n        _Json_ClientInfo(reqJSON)\r\n    }, [usPerson, isAssociatedPerson,ppeOccupation, maritalAgreementId, otherTaxResidenceCountryId,residenceInOtherCountryId,isAdministratorInAnotherAccount])\r\n\r\n    // Campos obrigatórios\r\n    useEffect(() => {\r\n        if (name && shortName && birthDate && fatherName && motherName && taxPayerRegistry && genderId && maritalStatusId && nationality && countryBirthId &&\r\n            stateBirthId && stateBirthName && professionalOccupationId  && educationLevelId) {\r\n            _Json_ClientInfo(reqJSON)\r\n        }\r\n    }, [name, shortName, birthDate, fatherName, motherName, taxPayerRegistry, genderId, maritalStatusId, nationality, countryBirthId,\r\n        stateBirthId, stateBirthName, professionalOccupationId, educationLevelId])\r\n\r\n\r\n    useEffect(() => {\r\n            getGendersIds()\r\n            getMaritalStatus()\r\n            getMaritalAgreements()\r\n            getCountries()\r\n            getProfessionalOccupations()\r\n            getEducation()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(countryBirthId === '') setstatesBirth([])\r\n        else getStatesBirth() \r\n    }, [countryBirthId])\r\n\r\n\r\n    function getGendersIds() {\r\n        axios.get(config._urlGenders)\r\n            .then(res => setgendersIds(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalStatus() {\r\n        axios.get(config._urlMaritalStatus)\r\n            .then(res => setMaritalStatus(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalAgreements() {\r\n        axios.get(config._urlMaritalAgreement)\r\n            .then(res => setmaritalAgreements(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => {\r\n                setcountriesBirthId(res.data)\r\n                setresidencesInOtherCountryId(res.data)\r\n                setotherTaxResidencesCountryId(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getStatesBirth() {\r\n        axios.get(`${config._urlStates}${countryBirthId}`)\r\n            .then(res => setstatesBirth(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getProfessionalOccupations() {\r\n        axios.get(config._urlProfessionalOccupation)\r\n            .then(res => setprofessionalOccupationsId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getEducation() {\r\n        axios.get(config._urlEducation)\r\n            .then(res => seteducationsLevelId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <ClientInfoContext.Provider\r\n            value={{\r\n                name, setname,\r\n                shortName, setshortName,\r\n                taxPayerRegistry, settaxPayerRegistry,\r\n                birthDate, setbirthDate, age, setAge,\r\n                fatherName, setfatherName,\r\n                motherName, setmotherName,\r\n                genderId, setgenderId, gendersIds,\r\n                maritalStatusId, setmaritalStatusId, maritalStatus,\r\n                maritalAgreements, setmaritalAgreementId,\r\n                nationality, setnationality,\r\n                setcountryBirthId, countriesBirthId,\r\n                setstateBirthId, setstateBirthName, statesBirth,\r\n                setprofessionalOccupationId, professionalOccupationsId,professionalOccupationId,\r\n                residencesInOtherCountryId, setresidenceInOtherCountryId,\r\n                otherTaxResidencesCountryId, setotherTaxResidenceCountryId,\r\n                seteducationLevelId, educationsLevelId,\r\n                ppeOccupation,setppeOccupation,\r\n                usPerson, setusPerson,\r\n                isAssociatedPerson, setisAssociatedPerson,\r\n                isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ClientInfoContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from '../contexts/FormContexts'\r\nimport { ClientInfoContext } from \"./ClientInfoContexts\"\r\n\r\nconst InitialState = {\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n}\r\n\r\nexport const IdentificationTypeContext = createContext(InitialState);\r\n\r\nexport const IdentificationTypeProvider = (props) => {\r\n\r\n    const { _Json_ClientIdentification } = useContext(FormContext)\r\n    const { taxPayerRegistry } = useContext(ClientInfoContext)\r\n\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    let reqJSON = {\r\n        identificationTypeId: parseInt(identificationTypeId),\r\n        number: number,\r\n        emissionInssuer: emissionInssuer,\r\n        emission: `${emission}T00:00:00`,\r\n        stateId: parseInt(stateId),\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (identificationTypeId && emissionInssuer && emission && stateId) {\r\n            if (identificationTypeId === \"40\") {\r\n                setnumber(taxPayerRegistry)\r\n                _Json_ClientIdentification(reqJSON)\r\n            }\r\n            else if (number) _Json_ClientIdentification(reqJSON)\r\n        }\r\n    }, [identificationTypeId, number, emissionInssuer, emission, stateId,taxPayerRegistry])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <IdentificationTypeContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                setnumber,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states\r\n            }}\r\n        >\r\n            {props.children}\r\n        </IdentificationTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    isAcceptedOrderAttorney: false,\r\n    name: '',\r\n    setname: () => { },\r\n    taxpayerRegistry: '',\r\n    settaxpayerRegistry: () => { },\r\n    birthDate: '',\r\n    setbirthDate: () => { },\r\n    isPEP: false,\r\n    setisPEP: () => { },\r\n    actionDescription: '',\r\n    setactionDescription: () => { },\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setneighborhood: () => { },\r\n    description: '',\r\n    setdescription: () => { },\r\n    zipCode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setnumber: () => { },\r\n    complement: '',\r\n    setcomplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { },\r\n}\r\nexport const AttorneyContext = createContext(InitialState);\r\n\r\nexport const AttorneyProvider = (props) => {\r\n    const [isAcceptedOrderAttorney, setisAcceptedOrderAttorney] = useState(false)\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [isPEP, setisPEP] = useState(false)\r\n    const [actionDescription, setactionDescription] = useState('')\r\n    const [countryId, setCountryId] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setneighborhood] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const [zipCode, setZipCode] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [complement, setcomplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_AttorneyInfo } = useContext(FormContext)\r\n\r\n    const attorneys = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry.replace(/[^\\d]+/g, ''),\r\n        birthDate: birthDate,\r\n        isPEP: isPEP,\r\n        actionDescription: actionDescription,\r\n        address: {\r\n            countryId: countryId,\r\n            stateId: stateId,\r\n            stateName: stateName,\r\n            cityId: cityId,\r\n            cityName: cityName,\r\n            neighborhood: neighborhood,\r\n            description: description,\r\n            zipCode: zipCode,\r\n            number: number,\r\n            complement: complement,\r\n            typeAddressId: typeAddressId\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(!isAcceptedOrderAttorney) _Json_AttorneyInfo([])\r\n        else if (isAcceptedOrderAttorney && name && taxpayerRegistry && birthDate && actionDescription && countryId && stateId && stateName && cityId && cityName &&\r\n            neighborhood && description && zipCode && number && complement && typeAddressId) {\r\n            _Json_AttorneyInfo([attorneys])\r\n        }\r\n    }, [isAcceptedOrderAttorney, name, taxpayerRegistry, birthDate, isPEP, actionDescription, countryId, stateId, stateName, cityId, cityName,\r\n        neighborhood, description, zipCode, number, complement, typeAddressId])\r\n\r\n    return (\r\n        <AttorneyContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, birthDate, isPEP, actionDescription,\r\n                countryId, isAcceptedOrderAttorney, stateId,\r\n                setisAcceptedOrderAttorney, setname, settaxpayerRegistry,\r\n                setbirthDate, setisPEP, setactionDescription,\r\n                setCountryId, setStateId, setStateName, setCityId, setneighborhood,\r\n                setCityName, setTypeAddressId, setZipCode, setdescription, setnumber, setcomplement\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AttorneyContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setNeighborhood: () => { },\r\n    description: '',\r\n    setDescription: () => { },\r\n    zipcode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setNumber: () => { },\r\n    complement: '',\r\n    setComplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { }\r\n}\r\nexport const AdressesContext = createContext(InitialState);\r\n\r\nexport const AdressesProvider = (props) => {\r\n    const [countryId, setCountryId] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [zipcode, setZipCode] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setNeighborhood] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [complement, setComplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_ClientAddresses } = useContext(FormContext)\r\n\r\n    const AdressJson = {\r\n        \"countryId\": countryId,\r\n        \"stateId\": stateId,\r\n        \"stateName\": stateName,\r\n        \"cityId\": cityId,\r\n        \"cityName\": cityName,\r\n        \"neighborhood\": neighborhood,\r\n        \"description\": description,\r\n        \"zipCode\": zipcode,\r\n        \"number\": number,\r\n        \"complement\": complement,\r\n        \"typeAddressId\": typeAddressId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cityId && cityName && complement && countryId && description && neighborhood && number && stateId && stateName && typeAddressId && zipcode) {\r\n            _Json_ClientAddresses(AdressJson)\r\n        }\r\n    }, [cityId, cityName, complement, countryId, description, neighborhood, number, stateId, stateName, typeAddressId, zipcode])\r\n\r\n    return (\r\n        <AdressesContext.Provider\r\n            value={{\r\n                countryId,\r\n                setCountryId,\r\n                stateId,\r\n                setStateId,\r\n                setStateName,\r\n                cityId,\r\n                setCityId,\r\n                setCityName,\r\n                zipcode,\r\n                setZipCode,\r\n                stateName,\r\n                cityName,\r\n                neighborhood,\r\n                setNeighborhood,\r\n                description,\r\n                setDescription,\r\n                number,\r\n                setNumber,\r\n                complement,\r\n                setComplement,\r\n                typeAddressId,\r\n                setTypeAddressId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AdressesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    bankId: '',\r\n    agency: '',\r\n    account: '',\r\n    digit: '',\r\n    typeAccountId: '',\r\n    bankAccountTypes: [],\r\n    banks: [],\r\n    setbankId: () => { },\r\n    setagency: () => { },\r\n    setaccount: () => { },\r\n    setdigit: () => { },\r\n    settypeAccountId: () => { }\r\n}\r\n\r\nexport const BankAccountsContext = createContext(InitialState);\r\n\r\nexport const BankAccountsProvider = (props) => {\r\n    const [bankId, setbankId] = useState('')\r\n    const [agency, setagency] = useState('')\r\n    const [account, setaccount] = useState('')\r\n    const [digit, setdigit] = useState('')\r\n    const [typeAccountId, settypeAccountId] = useState('')\r\n\r\n\r\n    const [bankAccountTypes, setBankAccountTypes] = useState([])\r\n    const [banks, setBanks] = useState([])\r\n\r\n    useEffect(() => {\r\n        GetAccountTypes()\r\n        GetBanks()\r\n    }, [])\r\n\r\n    function GetAccountTypes() {\r\n        axios.get(config._urlBankAccountType)\r\n            .then(res => { if (res.data) setBankAccountTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function GetBanks() {\r\n        const newBanks = []\r\n        axios.get(config._urlBank)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    res.data.map(i => {\r\n                        const bank = { name: `${i.code} ${i.name}`, value: `${i.bankId}` }\r\n                        newBanks.push(bank)\r\n                    })\r\n                }\r\n            })\r\n            .then(res => {\r\n                setBanks(newBanks)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <BankAccountsContext.Provider\r\n            value={{\r\n                bankAccountTypes, banks,\r\n                bankId, setbankId,\r\n                agency, setagency,\r\n                account, setaccount,\r\n                digit, setdigit,\r\n                typeAccountId, settypeAccountId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </BankAccountsContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    phoneTypes: [],\r\n    phoneTypeId: '',\r\n    countryCode: '',\r\n    stateCode: '',\r\n    number: '',\r\n    setPhoneTypeId: () => { },\r\n    setCountryCode: () => { },\r\n    setStateCode: () => { },\r\n    setNumber: () => { },\r\n}\r\n\r\n\r\n\r\nexport const PhonesContext = createContext(InitialState);\r\n\r\nexport const PhonesProvider = (props) => {\r\n    const { _Json_PhoneInfo } = useContext(FormContext)\r\n    const [phoneTypeId, setPhoneTypeId] = useState('')\r\n    const [countryCode, setCountryCode] = useState('')\r\n    const [stateCode, setStateCode] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [phoneTypes, setPhoneTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        countryCode: countryCode,\r\n        stateCode: stateCode,\r\n        number: number,\r\n        type: parseInt(phoneTypeId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (countryCode && stateCode && number && phoneTypeId) _Json_PhoneInfo(reqJSON)\r\n    }, [countryCode, stateCode, number, phoneTypeId])\r\n\r\n    useEffect(() => {\r\n            getPhoneTypes()\r\n    }, [])\r\n\r\n\r\n    function getPhoneTypes() {\r\n        axios.get(config._urlPhoneType)\r\n            .then(res => {\r\n                if (res.data) setPhoneTypes(res.data)\r\n            })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    return (\r\n        <PhonesContext.Provider\r\n            value={{\r\n                phoneTypes, setPhoneTypeId, phoneTypeId,\r\n                countryCode, setCountryCode,\r\n                stateCode, setStateCode,\r\n                number, setNumber\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PhonesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    mail: '',\r\n    type: '',\r\n    isCorrespondency: true,\r\n    emailTypes: [],\r\n    setMail: () => { },\r\n    setType: () => { },\r\n    setIsCorrespondency: () => { },\r\n}\r\n\r\nexport const EmailContext = createContext(InitialState);\r\n\r\nexport const EmailProvider = (props) => {\r\n    const { _Json_EmailInfo } = useContext(FormContext)\r\n    const [mail, setMail] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [isCorrespondency, setIsCorrespondency] = useState(true)\r\n    const [emailTypes, setEmailTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        mail: mail,\r\n        type: parseInt(type),\r\n        isCorrespondency: true\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (mail && type) _Json_EmailInfo(reqJSON)\r\n    }, [mail, type])\r\n\r\n    useEffect(() => {\r\n            getEmailTypes()\r\n    }, [])\r\n\r\n\r\n    function getEmailTypes() {\r\n        axios.get(config._urlEmailType)\r\n            .then(res => {\r\n                if (res.data) setEmailTypes(res.data)\r\n            })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    return (\r\n        <EmailContext.Provider\r\n            value={{\r\n                emailTypes,\r\n                setIsCorrespondency, isCorrespondency,\r\n                setType, setMail\r\n            }}\r\n        >\r\n            {props.children}\r\n        </EmailContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport { FormContext } from './FormContexts'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    typeWealthId: '',\r\n    value: '',\r\n    description: '',\r\n    typesWealthId: [],\r\n    settypeWealthId: () => { },\r\n    setvalue: () => { },\r\n    setdescription: () => { },\r\n}\r\n\r\nexport const WealthsTypeContext = createContext(InitialState);\r\n\r\nexport const WealthsTypeProvider = (props) => {\r\n\r\n    const [typeWealthId, settypeWealthId] = useState('')\r\n    const [value, setvalue] = useState('')\r\n    const [description, setdescription] = useState('')\r\n\r\n    const [typesWealthId, settypesWealthId] = useState([])\r\n\r\n    useEffect(() => {\r\n            GetWealthTypes()\r\n    }, [])\r\n\r\n    function GetWealthTypes() {\r\n        axios.get(config._urlWealthType)\r\n            .then(res => { if (res.data) settypesWealthId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <WealthsTypeContext.Provider\r\n            value={{\r\n                typeWealthId, value, description,\r\n                settypeWealthId, setvalue, setdescription,\r\n                typesWealthId,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WealthsTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    institutionName: '',\r\n    occupation: '',\r\n    profession: '',\r\n    corporateTaxpayerRegistry: '',\r\n    setinstitutionName: () => { },\r\n    setoccupation: () => { },\r\n    setprofession: () => { },\r\n    setcorporateTaxpayerRegistry: () => { },\r\n    setIsRequired: () => { }\r\n}\r\n\r\nexport const WorkContext = createContext(InitialState);\r\n\r\nexport const WorkProvider = (props) => {\r\n\r\n    const { _Json_Work } = useContext(FormContext)\r\n\r\n    const [institutionName, setinstitutionName] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n    const [profession, setprofession] = useState('')\r\n    const [corporateTaxpayerRegistry, setcorporateTaxpayerRegistry] = useState('')\r\n    \r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    let reqJSON = {\r\n        institutionName: institutionName,\r\n        occupation: occupation,\r\n        profession: profession,\r\n        corporateTaxpayerRegistry: corporateTaxpayerRegistry\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_Work({})\r\n        else if (institutionName && occupation && profession && corporateTaxpayerRegistry){\r\n            _Json_Work(reqJSON)\r\n        }\r\n    }, [isRequired,institutionName, occupation, profession, corporateTaxpayerRegistry])\r\n\r\n\r\n    return (\r\n        <WorkContext.Provider\r\n            value={{\r\n                institutionName, setinstitutionName,\r\n                occupation, setoccupation,\r\n                profession, setprofession,\r\n                corporateTaxpayerRegistry, setcorporateTaxpayerRegistry,\r\n                setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WorkContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { IdentificationTypeContext } from '../../contexts/IdentificationTypeContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function IdentificationType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, \r\n        setstateId,setemissionInssuer, setnumber, setemission, emission } = useContext(IdentificationTypeContext)\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Identificação' : 'Identification',\r\n        Select: languagePT ? 'Selecionar Tipo de Identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Document UF',\r\n        emission: languagePT ? 'Data de emissão' : 'Issue date',\r\n        emissionInssuer: languagePT ? 'Orgão Emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    function OnChangeField(e) {\r\n        const {value, id} = e.target \r\n        switch (id) {\r\n            case 'identificationType':\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'IdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'identificationTypeemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'identificationTypedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'identificationTypeemission':\r\n                setemission(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divIdentificationTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"identificationType\" id=\"identificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex\"}>\r\n                <input required={identificationTypeId !== \"40\"} type=\"text\" name=\"identificationTypedocument\" id=\"identificationTypedocument\" onChange={e => OnChangeField(e)}\r\n                placeholder={Labels.documentNumber}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required name=\"IdtypeStateId\" id=\"IdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.States}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescriptionTitle\">{Labels.emission}</p>\r\n            <div className=\"d-flex\">\r\n                <input value={emission} required type=\"date\" name=\"identificationTypeemission\" id=\"identificationTypeemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required type=\"text\" name=\"identificationTypeemissionInssuer\" id=\"identificationTypeemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                placeholder={Labels.emissionInssuer}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nexport default function Countries(props) {\r\n    const [countries, setCountries] = useState([])\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar País' : 'Select Country',\r\n        SelectError: languagePT ? 'Erro ao consultar países' : 'Error querying countries'\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n        getCountries()\r\n    }, [])\r\n\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => { if (res.data) setCountries(res.data) })\r\n            .catch(err => console.log(Labels.SelectError))\r\n    }\r\n    function RenderCountries() {\r\n        return (\r\n            countries.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"countries\" id=\"countries\" onChange={props.onSelectCountry}>\r\n            <option defaultValue value=\"\">{Labels.Select}</option>\r\n            {RenderCountries()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { AdressesContext } from \"../../contexts/AdressesContexts\";\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const Atctx = useContext(AttorneyContext)\r\n    const Adctx = useContext(AdressesContext)\r\n\r\n    const [states, setStates] = useState([])\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Estado' : 'Select State',\r\n        SelectError: languagePT ? 'Erro ao consultar estados' : 'Error querying states'\r\n    }\r\n\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if(Atctx.isAcceptedOrderAttorney) required = true\r\n        else if(!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n\r\n    useEffect(() => {\r\n        if(props.ClientAdress) {\r\n            if (Adctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n        else if (props.Attorney){\r\n            if (Atctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n    }, [Atctx.countryId, Adctx.countryId])\r\n\r\n    function getStates() {\r\n        const _countryId = props.ClientAdress ? Adctx.countryId : Atctx.countryId\r\n        axios.get(`${config._urlStates}${_countryId}`)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    setStates(res.data)\r\n                }\r\n                else {\r\n                    console.log(Labels.SelectError)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(Labels.SelectError)\r\n            })\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"states\" id=\"states\" onChange={props.onSelectState}>\r\n            <option defaultValue value=\"\">{Labels.Select}</option>\r\n            {RenderStates()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function Cities(props) {\r\n    const Adctx = useContext(AdressesContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const [cities, setCities] = useState([])\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Cidade' : 'Select City',\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n        if (props.ClientAdress) {\r\n            if (Adctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n        else if (props.Attorney) {\r\n            if (Atctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n    }, [Atctx.stateId, Adctx.stateId])\r\n\r\n    function getCities() {\r\n        const _stateId = props.ClientAdress ? Adctx.stateId : Atctx.stateId\r\n        axios.get(`${config._urlCities}${_stateId}`)\r\n            .then(res => { if (res.data) { setCities(res.data) } })\r\n            .catch(err => { console.log(err) })\r\n    }\r\n    function RenderCities() {\r\n        return (\r\n            cities.map(c => {\r\n                return (\r\n                    <option key={c.cityId} value={c.cityId} cityname={c.name}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divCitiesSelect\">\r\n            <select required={required} name=\"cities\" id=\"cities\" onChange={props.onSelectCity}>\r\n                <option defaultValue value=\"\">{Labels.Select}</option>\r\n                {RenderCities()}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport config from \"../../config\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nexport default function AdressType(props) {\r\n    const [adressType, setAdressType] = useState([])\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Tipo de Endereço' : 'Select Address Type',\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n            getAdressType()\r\n    }, [])\r\n\r\n    function getAdressType() {\r\n        axios.get(config._urlAdressType)\r\n            .then(res => {if (res.data) setAdressType(res.data)})\r\n            .catch(err => {console.log(err)})\r\n    }\r\n    function RenderAdressType() {\r\n        return (\r\n            adressType.map(adt => {\r\n                return (\r\n                    <option key={adt.addressTypeId} value={adt.addressTypeId}>{adt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n            <select required={required} name=\"addressType\" id=\"addressType\" onChange={props.onSelectTypeAddress}>\r\n                <option defaultValue value=\"\">{Labels.Select}</option>\r\n                {RenderAdressType()}\r\n            </select>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function CEP(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const [error, setError] = useState(false)\r\n    const Labels = {\r\n        CollectCep: languagePT ? 'Digite seu cep' : 'Type your ZIP Code',\r\n        Error: languagePT ? 'CEP Invalido' : 'Invalid ZIP Code'\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    function ValidateCEP(e) {\r\n        const Cep = e.target.value\r\n        if (Cep.length === 0) {\r\n            setError(false)\r\n            props.onCollectCep('')\r\n        }\r\n        const validacep = /^[0-9]{5,8}$/;\r\n        if (validacep.test(Cep)) {\r\n            setError(false)\r\n            props.onCollectCep(Cep)\r\n        }\r\n        else {\r\n            props.onCollectCep('')\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"divCollectCep\">\r\n            <input required={required} className={error ? \"error\" : \"\"} placeholder={Labels.CollectCep} type=\"text\" name=\"cep\" id=\"cep\"\r\n                maxLength=\"8\" onChange={e => ValidateCEP(e)} />\r\n            <p className={error ? \"msgError\" : \"d-none\"}>{Labels.Error}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts';\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function AdressUtils(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setComplement, setDescription, setNeighborhood, setNumber } = useContext(AdressesContext)\r\n    const { setcomplement, setdescription, setneighborhood, setnumber, isAcceptedOrderAttorney } = useContext(AttorneyContext)\r\n    const Labels = {\r\n        neighborhood: languagePT ? 'Bairro' : 'Neighborhood',\r\n        description: languagePT ? 'Rua' : 'Street',\r\n        number: languagePT ? 'Número' : 'Number',\r\n        complement: languagePT ? 'Complemento' : 'Complement',\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if(isAcceptedOrderAttorney) required = true\r\n        else if(!isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n    \r\n\r\n    function setInput(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'neighborhood':\r\n                if (props.Attorney) setneighborhood(value)\r\n                else if (props.ClientAdress) setNeighborhood(value)\r\n                break;\r\n            case 'description':\r\n                if (props.Attorney) setdescription(value)\r\n                else if (props.ClientAdress) setDescription(value)\r\n                break;\r\n            case 'number':\r\n                if (props.Attorney) setnumber(value)\r\n                else if (props.ClientAdress) setNumber(value)\r\n                break;\r\n            case 'complement':\r\n                if (props.Attorney) setcomplement(value)\r\n                else if (props.ClientAdress) setComplement(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"divCollectUtilsAdress\">\r\n            {props.children}\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"neighborhood\" id=\"neighborhood\" placeholder={Labels.neighborhood} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"description\" id=\"description\" placeholder={Labels.description} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" maxLength=\"20\" name=\"number\" id=\"number\" placeholder={Labels.number} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"complement\" id=\"complement\" placeholder={Labels.complement} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nexport default function Adresses(props) {\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode } = useContext(AdressesContext)\r\n    const {languagePT} = useContext(FormContext)\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Endereço' : 'Address',\r\n    }\r\n\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientAdress\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <Countries onSelectCountry={onSelectCountry} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <States onSelectState={onSelectState} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <Cities onSelectCity={onSelectCity} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <AdressUtils ClientAdress={true} Attorney={false}>\r\n                <div className=\"d-flex\">\r\n                    <CEP onCollectCep={onCollectCep} ClientAdress={true} Attorney={false}/>\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n            </AdressUtils>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport Fuse from 'fuse.js';\r\n\r\nimport SelectSearch from 'react-select-search'\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { BankAccountsContext } from '../../contexts/BankContexts';\r\n\r\nimport './index.css'\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function BankAccounts(props) {\r\n    const [error, setError] = useState(false)\r\n    const { languagePT, _Json_BankAccounts } = useContext(FormContext)\r\n    const { bankAccountTypes, banks,\r\n        bankId, setbankId,\r\n        agency, setagency,\r\n        account, setaccount,\r\n        digit, setdigit,\r\n        typeAccountId, settypeAccountId } = useContext(BankAccountsContext)\r\n    const [clientBankAccounts, setclientBankAccounts] = useState([])\r\n    const Labels = {\r\n        selectItems: languagePT ? 'Selecione um item da lista e Preencha os campos' : 'Select an item from the list and fill the fields',\r\n        SelecttypeAccountId: languagePT ? 'Tipo de conta bancária' : 'Bank account type',\r\n        SelectbankId: languagePT ? 'Selecione o seu banco' : 'Select your bank',\r\n        account: languagePT ? 'Número da conta bancária' : 'Bank account number',\r\n        digit: languagePT ? 'Digito' : 'Digit',\r\n        agency: languagePT ? 'Agência' : 'Agency',\r\n        description: languagePT ? 'Contas bancarias' : 'Bank accounts',\r\n        addAccount: languagePT ? 'CLIQUE PARA ADICIONAR CONTA BANCARIA' : 'CLICK TO ADD BANK ACCOUNT'\r\n    }\r\n\r\n    function RenderBankAccountTypes() {\r\n        return (\r\n            bankAccountTypes.map(bat => {\r\n                return (\r\n                    <option key={bat.bankAccountTypeId} value={bat.bankAccountTypeId}>{bat.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderBanks() {\r\n        return (\r\n            banks.map(bank => {\r\n                return (\r\n                    <option key={bank.bankId} value={bank.bankId} code={bank.code}>{bank.code} | {bank.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderclientBankAccounts() {\r\n        return (\r\n            clientBankAccounts.map((bat, index) => {\r\n                return (\r\n                    <div className=\"account\" key={index}>\r\n                        <div className=\"d-flex d-flexdc\">\r\n                            <span className=\"inputDescription\">{banks.find(b => b.value === bat.bankId.toString()).name}</span>\r\n                            <span className=\"inputDescription\">Agencia: {bat.agency}</span>\r\n                            <span className=\"inputDescription\">Conta: {bat.account}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeBankAccount(index)}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addBankAccount() {\r\n        if (!account || !agency || !bankId || !digit || !typeAccountId) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            let bank = {\r\n                bankId: parseInt(bankId),\r\n                agency: parseInt(agency),\r\n                account: parseInt(account),\r\n                digit: parseInt(digit),\r\n                typeAccountId: parseInt(typeAccountId)\r\n            }\r\n            setclientBankAccounts([...clientBankAccounts, bank])\r\n            setaccount('')\r\n            setdigit('')\r\n            setagency('')\r\n        }\r\n    }\r\n    function removeBankAccount(i) {\r\n        setclientBankAccounts(clientBankAccounts.filter((c, index) => index !== i))\r\n    }\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'typeAccountId':\r\n                settypeAccountId(value)\r\n                break;\r\n            case 'account':\r\n                setaccount(value)\r\n                break;\r\n            case 'digit':\r\n                setdigit(value)\r\n                break;\r\n            case 'agency':\r\n                setagency(value)\r\n                break;\r\n            case 'bankId':\r\n                console.log(value)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        _Json_BankAccounts(clientBankAccounts)\r\n    }, [clientBankAccounts])\r\n\r\n\r\n    function fuzzySearch(options) {\r\n        const fuse = new Fuse(options, {\r\n            keys: ['name'],\r\n            threshold: 0.3,\r\n        });\r\n\r\n        return (value) => {\r\n            if (!value.length) {\r\n                return options;\r\n            }\r\n            let array = fuse.search(value)\r\n            array = array.map(i => i.item)\r\n            return array;\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className=\"divBankAccounts\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.description}</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={clientBankAccounts.length === 0} name=\"typeAccountId\" id=\"typeAccountId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.SelecttypeAccountId}</option>\r\n                    {RenderBankAccountTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n\r\n                <SelectSearch options={banks} search={true} filterOptions={fuzzySearch} name=\"name\"\r\n                    emptyMessage=\"Not found\" placeholder={Labels.SelectbankId} id=\"bankId\"\r\n                    printOptions=\"auto\" closeOnSelect={true} onChange={id => setbankId(id)}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={account} type=\"text\" name=\"account\" id=\"account\"\r\n                    placeholder={Labels.account} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={digit} type=\"text\" name=\"digit\" id=\"digit\"\r\n                    placeholder={Labels.digit} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={agency} type=\"text\" name=\"agency\" id=\"agency\"\r\n                    placeholder={Labels.agency} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"bankAccounts\">\r\n                {RenderclientBankAccounts()}\r\n            </div>\r\n            <div className=\"addAccount\">\r\n                <button onClick={() => addBankAccount()} type=\"button\">\r\n                    {Labels.addAccount}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>{Labels.selectItems}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    name: '',\r\n    nationality: '',\r\n    occupation: '',\r\n    settaxPayerRegistry: () => { },\r\n    setname: () => { },\r\n    setnationality: () => { },\r\n    setoccupation: () => { }\r\n}\r\n\r\nexport const PPERelatedsContext = createContext(InitialState);\r\n\r\nexport const PPERelatedsProvider = (props) => {\r\n    const { _Json_PPERelateds } = useContext(FormContext)\r\n\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [name, setname] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n\r\n    const reqJson = {\r\n        taxPayerRegistry: taxPayerRegistry,\r\n        name: name,\r\n        nationality: nationality,\r\n        occupation: occupation\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(name && taxPayerRegistry && occupation && nationality) _Json_PPERelateds(reqJson)\r\n    }, [name,taxPayerRegistry,occupation,nationality])\r\n\r\n    return (\r\n        <PPERelatedsContext.Provider\r\n            value={{\r\n                taxPayerRegistry,\r\n                name,\r\n                nationality,\r\n                occupation,\r\n                settaxPayerRegistry,\r\n                setname,\r\n                setnationality,\r\n                setoccupation\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PPERelatedsContext.Provider>\r\n    );\r\n};\r\n","function ValidCPF(cpf) {\r\n    var Soma;\r\n    var Resto;\r\n    Soma = 0;\r\n    if (cpf === \"00000000000\") return false;\r\n    if (cpf === \"11111111111\") return false;\r\n    if (cpf === \"22222222222\") return false;\r\n    if (cpf === \"33333333333\") return false;\r\n    if (cpf === \"44444444444\") return false;\r\n    if (cpf === \"55555555555\") return false;\r\n    if (cpf === \"66666666666\") return false;\r\n    if (cpf === \"77777777777\") return false;\r\n    if (cpf === \"88888888888\") return false;\r\n\r\n    for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n    if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n    Soma = 0;\r\n    for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n    if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n    return true;\r\n}\r\n\r\nfunction validarCNPJ(cnpj) {\r\n    cnpj = cnpj.replace(/[^\\d]+/g,'');\r\n    if(cnpj == '') return false;\r\n    if (cnpj.length != 14)\r\n        return false;\r\n    // Elimina CNPJs invalidos conhecidos\r\n    if (cnpj == \"00000000000000\" || \r\n        cnpj == \"11111111111111\" || \r\n        cnpj == \"22222222222222\" || \r\n        cnpj == \"33333333333333\" || \r\n        cnpj == \"44444444444444\" || \r\n        cnpj == \"55555555555555\" || \r\n        cnpj == \"66666666666666\" || \r\n        cnpj == \"77777777777777\" || \r\n        cnpj == \"88888888888888\" || \r\n        cnpj == \"99999999999999\")\r\n        return false;\r\n    // Valida DVs\r\n    let tamanho = cnpj.length - 2\r\n    let numeros = cnpj.substring(0,tamanho);\r\n    let digitos = cnpj.substring(tamanho);\r\n    let soma = 0;\r\n    let pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(0))\r\n        return false;\r\n    tamanho = tamanho + 1;\r\n    numeros = cnpj.substring(0,tamanho);\r\n    soma = 0;\r\n    pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(1))\r\n          return false;\r\n           \r\n    return true;\r\n}\r\n\r\nexport {\r\n    ValidCPF, validarCNPJ\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { PPERelatedsContext } from '../../contexts/PPERelatedsContext';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport InputMask from \"react-input-mask\";\r\nimport Switch from \"react-switch\";\r\n\r\nimport {ValidCPF} from '../../utils'\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function PPERelateds(props) {\r\n    const { languagePT, _Json_PPERelateds } = useContext(FormContext)\r\n    const { name, nationality, occupation, setname, setnationality,\r\n        setoccupation, settaxPayerRegistry, taxPayerRegistry } = useContext(PPERelatedsContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n\r\n    const [PPERelated, setPPERelated] = useState(false)\r\n\r\n    const Labels = {\r\n        PPERelated: languagePT ? 'Cliente têm relacionamento com uma Pessoa Politicamente Exposta ?' : 'Customer has a relationship with a Politically Exposed Person ?',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        name: languagePT ? 'Nome da Pessoa Politicamente Exposta' : 'Politically Exposed Person\\'s Name',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'TaxPayerRegistry',\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!PPERelated) _Json_PPERelateds({})\r\n    }, [PPERelated])\r\n\r\n    function OnChangeField(e) {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"d-flex d-flexdc df-alc\">\r\n                <p className=\"inputDescription\">{Labels.PPERelated} ?</p>\r\n                <Switch\r\n                    onColor=\"#fac580\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#474e5e\"\r\n                    offHandleColor=\"#000A1E\"\r\n                    checked={PPERelated}\r\n                    onChange={cheked => setPPERelated(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={20}\r\n                    width={50}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input value={name} required={PPERelated} type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} value={nationality} required={PPERelated} type=\"text\"\r\n                    name=\"nationality\" id=\"nationality\" placeholder={Labels.nationality}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"\" : \"d-none\"}>\r\n                <div className=\"d-flex\">\r\n                    <InputMask className={PPERelated ? \"\" : \"d-none\"} value={taxPayerRegistry} required={PPERelated}\r\n                        type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\" placeholder={Labels.taxPayerRegistry}\r\n                        mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" \r\n                        title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} required={PPERelated} value={occupation} type=\"text\" name=\"occupation\" id=\"occupation\" placeholder={Labels.occupation}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setname: () => { },\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n    setHide: () => { }\r\n}\r\n\r\nexport const SpouseContext = createContext(InitialState);\r\n\r\nexport const SpouseProvider = (props) => {\r\n\r\n    const { _Json_Spouse } = useContext(FormContext)\r\n\r\n    const [spouseId, setspouseId] = useState(0)\r\n    const [name, setname] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    \r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    const [hide, setHide] = useState(false)\r\n\r\n    let reqJSON = {\r\n        spouseId: spouseId,\r\n        name: name,\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        document: {\r\n            identificationTypeId: identificationTypeId,\r\n            number: number,\r\n            emissionInssuer: emissionInssuer,\r\n            emission: emission,\r\n            stateId: stateId\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (identificationTypeId === \"40\") {\r\n            if (name && taxPayerRegistry && identificationTypeId && emissionInssuer && emission && stateId) {\r\n                const cpf = `${taxPayerRegistry.substring(0, 3)}.${taxPayerRegistry.substring(3, 6)}.${taxPayerRegistry.substring(6, 9)}-${taxPayerRegistry.substring(9, 11)}`\r\n                reqJSON.document.number = identificationTypeId === \"40\" ? cpf : number\r\n                reqJSON.taxPayerRegistry = cpf\r\n                _Json_Spouse(reqJSON)\r\n            }\r\n        }\r\n        else if (name && taxPayerRegistry && identificationTypeId && number && emissionInssuer && emission && stateId) {\r\n            const cpf = `${taxPayerRegistry.substring(0, 3)}.${taxPayerRegistry.substring(3, 6)}.${taxPayerRegistry.substring(6, 9)}-${taxPayerRegistry.substring(9, 11)}`\r\n            reqJSON.taxPayerRegistry = cpf\r\n            _Json_Spouse(reqJSON)\r\n        }\r\n\r\n    }, [hide, name, taxPayerRegistry, identificationTypeId, number, emissionInssuer, emission, stateId])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <SpouseContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                settaxPayerRegistry, taxPayerRegistry,\r\n                setnumber, setname, name,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states,\r\n                setHide\r\n            }}\r\n        >\r\n            {props.children}\r\n        </SpouseContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { SpouseContext } from '../../contexts/Spouse';\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport {ValidCPF} from '../../utils'\r\nimport './index.css'\r\n\r\nexport default function Spouse(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, setHide,\r\n        setstateId, setemissionInssuer, setnumber, setemission, number, taxPayerRegistry, settaxPayerRegistry, setname, name } = useContext(SpouseContext)\r\n    const Labels = {\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        Select: languagePT ? 'Selecionar Tipo de Identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Document UF',\r\n        emission: languagePT ? 'Data de emissão' : 'Issue date',\r\n        emissionInssuer: languagePT ? 'Orgão Emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'spousename':\r\n                setname(value)\r\n                break;\r\n            case 'spouseidentificationType':\r\n                setnumber('')\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'spouseIdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'spouseemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'spousedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'spouseemission':\r\n                const emissionDoc = `${value}T00:00:00`\r\n                setemission(emissionDoc)\r\n                break;\r\n            case 'spousedocumentcpf':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className={props.hide ? \"d-none\" : \"divSpouse\"}>\r\n            <span className=\"inputDescriptionTitle\">Informações Conjuge</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={name} required={props.required} type=\"text\" name=\"spousename\" id=\"spousename\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={props.required}\r\n                    name=\"spouseidentificationType\" id=\"spouseidentificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex\"}>\r\n                <input value={number} required={identificationTypeId !== \"40\" && props.required} type=\"text\" name=\"spousedocument\" id=\"spousedocument\" onChange={e => OnChangeField(e)}\r\n                    placeholder={Labels.documentNumber} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <InputMask value={taxPayerRegistry} required={props.required} type=\"text\" name=\"spousedocumentcpf\" id=\"spousedocumentcpf\"\r\n                        placeholder={Labels.taxPayerRegistry} mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={props.required} name=\"spouseIdtypeStateId\" id=\"spouseIdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.States}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.emission}</p>\r\n            <div className=\"d-flex\">\r\n                <input required={props.required} type=\"date\" name=\"spouseemission\" id=\"spouseemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={props.required} type=\"text\" name=\"spouseemissionInssuer\" id=\"spouseemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                    placeholder={Labels.emissionInssuer} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nimport config from \"../config\";\r\n\r\nconst InitialState = {\r\n    name: '',\r\n    taxpayerRegistry: '',\r\n    relationshipTypeId: '',\r\n    relationshipTypesId: [],\r\n    setname: () => { },\r\n    settaxpayerRegistry: () => { },\r\n    setRelationshipTypeId: () => { },\r\n    setIsRequired: () => { }\r\n}\r\nexport const LegalRepresentativeContext = createContext(InitialState);\r\n\r\nexport const LegalRepresentativeProvider = (props) => {\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [relationshipTypeId, setRelationshipTypeId] = useState('')\r\n\r\n    const [relationshipTypesId, setRelationshipTypesId] = useState([])\r\n\r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    const { _Json_LegalRepresentative, errorOnApi } = useContext(FormContext)\r\n\r\n    const legalRepresentatives = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry,\r\n        relationshipTypeId: relationshipTypeId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_LegalRepresentative({})\r\n        else if (name && taxpayerRegistry && relationshipTypeId) _Json_LegalRepresentative(legalRepresentatives)\r\n    }, [isRequired, name, taxpayerRegistry, relationshipTypeId])\r\n\r\n    useEffect(() => {\r\n            GetRelationsShipType()\r\n    }, [])\r\n\r\n    function GetRelationsShipType() {\r\n        axios.get(config._urlRelationshipType)\r\n            .then(res => { if (res.data) setRelationshipTypesId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <LegalRepresentativeContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, relationshipTypeId,\r\n                setname, settaxpayerRegistry, setRelationshipTypeId,\r\n                relationshipTypesId, setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </LegalRepresentativeContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\nimport { LegalRepresentativeContext } from '../../contexts/LegalRepresentativeContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function Work(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { age } = useContext(ClientInfoContext)\r\n    const { name, taxpayerRegistry, relationshipTypesId,\r\n        setname, settaxpayerRegistry, setRelationshipTypeId, setIsRequired } = useContext(LegalRepresentativeContext)\r\n\r\n    let required = age > 0 && age < 18 ? true : false\r\n\r\n    const Labels = {\r\n        legalRepresentativeName: languagePT ? 'Nome ao representante legal do cliente' : '',\r\n        legalRepresentativeTaxpayerRegistry: languagePT ? 'CPF ao representante legal do cliente' : '',\r\n        relationshipTypeId: languagePT ? 'Tipo do relacionamento ao representante legal' : '',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : '',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    function ValidCPF(cpf) {\r\n        var Soma;\r\n        var Resto;\r\n        Soma = 0;\r\n        if (cpf === \"00000000000\") return false;\r\n        if (cpf === \"11111111111\") return false;\r\n        if (cpf === \"22222222222\") return false;\r\n        if (cpf === \"33333333333\") return false;\r\n        if (cpf === \"44444444444\") return false;\r\n        if (cpf === \"55555555555\") return false;\r\n        if (cpf === \"66666666666\") return false;\r\n        if (cpf === \"77777777777\") return false;\r\n        if (cpf === \"88888888888\") return false;\r\n\r\n        if (cpf.includes('.')) cpf = cpf.replace(/\\./g, '')\r\n        if (cpf.includes('-')) cpf = cpf.replace(/-/g, '')\r\n        // if (cpf.includes('-')) cpf = cpf.replace(/\\-/g, '')\r\n\r\n        for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n        Soma = 0;\r\n        for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n        return true;\r\n    }\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'legalRepresentativeName':\r\n                setname(value)\r\n                break;\r\n            case 'relationshipTypeId':\r\n                setRelationshipTypeId(value)\r\n                break;\r\n            case 'legalRepresentativeTaxpayerRegistry':\r\n                settaxpayerRegistry(value)\r\n                if (value.length < 11) setErrorCpf(false)\r\n                else if (value.length === 11) {\r\n                    if (ValidCPF(value)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (value.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderRelationshipTypes() {\r\n        return (\r\n            relationshipTypesId.map(reltid => {\r\n                return (\r\n                    <option key={reltid.relationshipTypeId} value={reltid.relationshipTypeId}>{reltid.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [])\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n        if (required) {\r\n            setname('')\r\n            setRelationshipTypeId('')\r\n            settaxpayerRegistry('')\r\n        }\r\n    }, [age])\r\n\r\n    return (\r\n        <div className={required ? \"divLegalRepresentative\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">Representates legais</span>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={name} type=\"text\" name=\"legalRepresentativeName\" id=\"legalRepresentativeName\" placeholder={Labels.legalRepresentativeName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <input value={taxpayerRegistry} required={required} type=\"text\" name=\"legalRepresentativeTaxpayerRegistry\" id=\"legalRepresentativeTaxpayerRegistry\" placeholder={Labels.legalRepresentativeTaxpayerRegistry}\r\n                        pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={required}\r\n                    name=\"relationshipTypeId\" id=\"relationshipTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.relationshipTypeId}</option>\r\n                    {RenderRelationshipTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\n\r\n\r\nimport Spouse from '../Spouse'\r\nimport LegalRepresentative from '../LegalRepresentative'\r\n\r\nimport { LegalRepresentativeProvider } from '../../contexts/LegalRepresentativeContexts';\r\nimport { SpouseProvider } from '../../contexts/Spouse';\r\n\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nimport { ValidCPF } from '../../utils'\r\n\r\nimport Switch from \"react-switch\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport './index.css'\r\n\r\nexport default function ClientInfo() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const {\r\n        // States\r\n        name, shortName, birthDate, fatherName, motherName, taxPayerRegistry, genderId, gendersIds, maritalStatusId, nationality,\r\n        countriesBirthId, stateBirthId, statesBirth, professionalOccupationId, professionalOccupationsId,\r\n        residenceInOtherCountryId, residencesInOtherCountryId, otherTaxResidencesCountryId, otherTaxResidenceCountryId,\r\n        educationLevelId, educationsLevelId, ppeOccupation, usPerson, isAssociatedPerson, isAdministratorInAnotherAccount,\r\n        maritalStatus, maritalAgreements, maritalAgreementId,\r\n        // Sets\r\n        setname, setshortName, setbirthDate, setAge, setfatherName, setmotherName, settaxPayerRegistry, setgenderId, setmaritalStatusId, setmaritalAgreementId,\r\n        setnationality, setcountryBirthId, setstateBirthId, setstateBirthName, setprofessionalOccupationId, setresidenceInOtherCountryId,\r\n        setotherTaxResidenceCountryId, seteducationLevelId, setppeOccupation, setusPerson, setisAssociatedPerson, setisAdministratorInAnotherAccount\r\n    } = useContext(ClientInfoContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações do cliente' : 'Customer information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        dateInvalid: languagePT ? 'Selecione uma data valida' : 'Select a valid date',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        shortName: languagePT ? 'Apelido' : 'ShortName',\r\n        birthDate: languagePT ? 'Data de Nascimento' : 'BirthDate',\r\n        fatherName: languagePT ? 'Nome do Pai' : 'Father Name',\r\n        motherName: languagePT ? 'Nome da Mãe' : 'Mother Name',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        genderId: languagePT ? 'Genero' : 'Gender',\r\n        maritalStatusId: languagePT ? 'Estado civil' : 'Marital Status',\r\n        maritalAgreementId: languagePT ? 'Regime do estado civil' : 'Marital Agreement',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        countryBirthId: languagePT ? 'País de nascimento' : 'Country Birth',\r\n        stateBirthId: languagePT ? 'UF de nascimento do cliente' : 'State Birth',\r\n        stateBirthName: languagePT ? 'Nome UF de nascimento' : 'State Birth Name',\r\n        professionalOccupationId: languagePT ? 'Natureza da ocupação' : 'Professional Occupation',\r\n        residenceInOtherCountryId: languagePT ? 'País ao cliente que possui residencia em outros países' : 'Residence in Other Country',\r\n        otherTaxResidenceCountryId: languagePT ? 'País ao cliente que possui domicílio fiscal além do declarado' : 'Other Tax Residence Country',\r\n        residenceInOtherCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        otherTaxResidenceCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        educationLevelId: languagePT ? 'Escolaridade' : 'Education Level',\r\n        ppeOccupation: languagePT ? 'Cargo PPE do cliente, se o mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n        usPerson: languagePT ? 'Cliente considerado como USPerson' : 'Considered as USPerson',\r\n        isAssociatedPerson: languagePT ? 'Pessoa Vinculada' : 'Associated Person',\r\n        isAdministratorInAnotherAccount: languagePT ? 'Cliente realiza operações por conta de terceiros' : 'Customer performs operations on behalf of third parties',\r\n        urlCallback: languagePT ? '' : '',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador' : 'Authorizes the transmission of orders by proxy',\r\n    }\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value, selectedIndex, options } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'shortName':\r\n                setshortName(value)\r\n                break;\r\n            case 'birthDate':\r\n                setAge('')\r\n\r\n                const d = new Date()\r\n                const ano_atual = d.getFullYear()\r\n                const mes_atual = d.getMonth() + 1\r\n                const dia_atual = d.getDate()\r\n\r\n                const ano_aniversario = parseInt(value.split(\"-\")[0])\r\n                const mes_aniversario = parseInt(value.split(\"-\")[1])\r\n                const dia_aniversario = parseInt(value.split(\"-\")[2])\r\n\r\n                if (ano_aniversario >= parseInt(Min.split(\"-\")[0])) {\r\n                    let Qtd_Anos = ano_atual - ano_aniversario\r\n                    if (mes_atual < mes_aniversario || mes_atual === mes_aniversario && dia_atual < dia_aniversario) {\r\n                        Qtd_Anos--\r\n                    }\r\n                    setAge(Qtd_Anos)\r\n                }\r\n                setbirthDate(value)\r\n                break;\r\n            case 'fatherName':\r\n                setfatherName(value)\r\n                break;\r\n            case 'motherName':\r\n                setmotherName(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'gender':\r\n                setgenderId(value)\r\n                break;\r\n            case 'maritalStatusId':\r\n                setmaritalStatusId(value)\r\n                if (value !== '2') setmaritalAgreementId('')\r\n                break;\r\n            case 'maritalAgreementId':\r\n                setmaritalAgreementId(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            case 'countryBirthId':\r\n                setcountryBirthId(value)\r\n                break;\r\n            case 'statesBirth':\r\n                const stateNameBirth = options[selectedIndex].getAttribute('statename')\r\n                // console.log(stateNameBirth)\r\n                setstateBirthId(value)\r\n                setstateBirthName(stateNameBirth)\r\n                break;\r\n            case 'professionalOccupationId':\r\n                setprofessionalOccupationId(value)\r\n                break;\r\n            case 'residenceInOtherCountryId':\r\n                setresidenceInOtherCountryId(value)\r\n                break;\r\n            case 'otherTaxResidenceCountryId':\r\n                setotherTaxResidenceCountryId(value)\r\n                break;\r\n            case 'educationLevel':\r\n                seteducationLevelId(value)\r\n                break;\r\n            case 'ppeOccupation':\r\n                setppeOccupation(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderGenders() {\r\n        return (\r\n            gendersIds.map(g => {\r\n                return (\r\n                    <option key={g.genderId} value={g.genderId}>{g.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalStatus() {\r\n        return (\r\n            maritalStatus.map(m => {\r\n                return (\r\n                    <option key={m.maritalStatusId} value={m.maritalStatusId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalAgreementId() {\r\n        return (\r\n            maritalAgreements.map(m => {\r\n                return (\r\n                    <option key={m.maritalAgreementId} value={m.maritalAgreementId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderCountriesBirth() {\r\n        return (\r\n            countriesBirthId.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            statesBirth.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderProfessionalOccupations() {\r\n        return (\r\n            professionalOccupationsId.map(pot => {\r\n                return (\r\n                    <option key={pot.professionalOccupationId} value={pot.professionalOccupationId}>{pot.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderResidencesInOtherCountry() {\r\n        return (\r\n            residencesInOtherCountryId.map(roc => {\r\n                return (\r\n                    <option key={roc.countryId} value={roc.countryId}>{roc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderOtherTaxResidencesCountry() {\r\n        return (\r\n            otherTaxResidencesCountryId.map(otrc => {\r\n                return (\r\n                    <option key={otrc.countryId} value={otrc.countryId}>{otrc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderEducationLevel() {\r\n        return (\r\n            educationsLevelId.map(ed => {\r\n                return (\r\n                    <option key={ed.educationLevelId} value={ed.educationLevelId}>{ed.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientInfo\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <input value={name} required type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={shortName} required type=\"text\" name=\"shortName\" id=\"shortName\" placeholder={Labels.shortName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.birthDate}</p>\r\n            <div className=\"d-flex\">\r\n                <input value={birthDate} required type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                    min={Min} max={Max} title={Labels.onlyLettersTitle} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <LegalRepresentativeProvider>\r\n                <LegalRepresentative />\r\n            </LegalRepresentativeProvider>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={fatherName} required type=\"text\" name=\"fatherName\" id=\"fatherName\" placeholder={Labels.fatherName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={motherName} required type=\"text\" name=\"motherName\" id=\"motherName\" placeholder={Labels.motherName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <InputMask value={taxPayerRegistry} required type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\" placeholder={Labels.taxPayerRegistry}\r\n                        mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeFields(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={genderId} required className=\"clSelect\" name=\"gender\" id=\"gender\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.genderId}</option>\r\n                    {RenderGenders()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={maritalStatusId} required className=\"clSelect\" name=\"maritalStatusId\" id=\"maritalStatusId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.maritalStatusId}</option>\r\n                    {RenderMaritalStatus()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <SpouseProvider>\r\n                <Spouse hide={maritalStatusId === '2' ? false : true} required={maritalStatusId === '2' ? true : false}>\r\n\r\n                    <div className={maritalStatusId === '2' ? \"d-flex\" : \"d-none\"}>\r\n                        <select value={maritalAgreementId} required={maritalStatusId === '2'} className=\"clSelect\" name=\"maritalAgreementId\" id=\"maritalAgreementId\" onChange={e => OnChangeFields(e)}>\r\n                            <option defaultValue value=\"\">{Labels.maritalAgreementId}</option>\r\n                            {RenderMaritalAgreementId()}\r\n                        </select>\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </Spouse>\r\n            </SpouseProvider>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={nationality} required type=\"text\" name=\"nationality\" id=\"nationality\" placeholder={Labels.nationality}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required className=\"clSelect\" name=\"countryBirthId\" id=\"countryBirthId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.countryBirthId}</option>\r\n                    {RenderCountriesBirth()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={stateBirthId} required className=\"clSelect\" name=\"statesBirth\" id=\"statesBirth\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.stateBirthName}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={professionalOccupationId} required className=\"clSelect\" name=\"professionalOccupationId\" id=\"professionalOccupationId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.professionalOccupationId}</option>\r\n                    {RenderProfessionalOccupations()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={educationLevelId} required className=\"clSelect\" name=\"educationLevel\" id=\"educationLevel\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.educationLevelId}</option>\r\n                    {RenderEducationLevel()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.residenceInOtherCountryId}</p>\r\n            <select value={residenceInOtherCountryId} className=\"clSelect\" name=\"residenceInOtherCountryId\" id=\"residenceInOtherCountryId\" onChange={e => OnChangeFields(e)}>\r\n                <option defaultValue value=\"\">{Labels.residenceInOtherCountryIdSelect}</option>\r\n                {RenderResidencesInOtherCountry()}\r\n            </select>\r\n\r\n            <p className=\"inputDescription\">{Labels.otherTaxResidenceCountryId}</p>\r\n            <select value={otherTaxResidenceCountryId} className=\"clSelect\" name=\"otherTaxResidenceCountryId\" id=\"otherTaxResidenceCountryId\" onChange={e => OnChangeFields(e)}>\r\n                <option defaultValue value=\"\">{Labels.otherTaxResidenceCountryIdSelect}</option>\r\n                {RenderOtherTaxResidencesCountry()}\r\n            </select>\r\n\r\n\r\n\r\n            <div>\r\n                <p className=\"inputDescription\">{Labels.ppeOccupation}</p>\r\n                <input value={ppeOccupation} type=\"text\" name=\"ppeOccupation\" id=\"ppeOccupation\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex df-jcspb d-flexdc\">\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.usPerson} ?</p>\r\n                    <Switch\r\n                        onColor=\"#fac580\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#474e5e\"\r\n                        offHandleColor=\"#000A1E\"\r\n                        checked={usPerson}\r\n                        onChange={cheked => setusPerson(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isAssociatedPerson} ?</p>\r\n                    <Switch\r\n                        onColor=\"#fac580\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#474e5e\"\r\n                        offHandleColor=\"#000A1E\"\r\n                        checked={isAssociatedPerson}\r\n                        onChange={cheked => setisAssociatedPerson(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isAdministratorInAnotherAccount} ?</p>\r\n                    <Switch\r\n                        onColor=\"#fac580\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#474e5e\"\r\n                        offHandleColor=\"#000A1E\"\r\n                        checked={isAdministratorInAnotherAccount}\r\n                        onChange={cheked => setisAdministratorInAnotherAccount(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { createContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    questions:[],\r\n    answers:[]\r\n}\r\n\r\nexport const FormSuityContext = createContext(InitialState);\r\n\r\nexport const FormSuityProvider = (props) => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState([])\r\n\r\n    useEffect(() => {\r\n        GetQuestions()\r\n        GetAnswers()\r\n    }, [])\r\n\r\n    function GetQuestions() {\r\n        axios.get(config._urlQuestions)\r\n            .then(res => { if (res.data) setQuestions(res.data) })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    function GetAnswers() {\r\n        axios.get(config._urlAnswers)\r\n            .then(res => { if (res.data) setAnswers(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <FormSuityContext.Provider\r\n            value={{\r\n                questions, answers\r\n            }}\r\n        >\r\n            {props.children}\r\n        </FormSuityContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { FormSuityContext } from \"../../contexts/FormSuity\";\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT, _Json_FormSuity } = useContext(FormContext)\r\n    const { answers, questions } = useContext(FormSuityContext)\r\n\r\n    const Labels = {\r\n        answers: languagePT ? 'Selecionar uma resposta para a pergunta' : '',\r\n    }\r\n\r\n    let questionsAnswers = []\r\n\r\n    function OnChangeField(e) {\r\n        const { id, value } = e.target\r\n        const req = {\r\n            questionId: parseInt(id),\r\n            answerId: parseInt(value)\r\n        }\r\n        questionsAnswers = questionsAnswers.filter(q => q.questionId !== parseInt(id))\r\n        questionsAnswers.push(req)\r\n        _Json_FormSuity(questionsAnswers)\r\n    }\r\n\r\n    function RenderQuestions() {\r\n        return (\r\n            questions.map(q => {\r\n                return (\r\n                    <div className=\"div-question-answer\" key={q.suityQuestionId} id={q.suityQuestionId}>\r\n                        <span className=\"inputDescriptionTitle\">{q.question}</span>\r\n                        <div className=\"d-flex\">\r\n                            <select required name={q.suityQuestionId} id={q.suityQuestionId} onChange={e => OnChangeField(e)}>\r\n                                <option defaultValue value=\"\">{Labels.answers}</option>\r\n                                {RenderAnswers(q.suityQuestionId)}\r\n                            </select>\r\n                            <p className=\"required\">*</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    function RenderAnswers(QuestionId) {\r\n        const answersFiltered = answers.filter(a => a.suityQuestionId === QuestionId)\r\n        return (\r\n            answersFiltered.map(a => {\r\n                return (\r\n                    <option key={a.suityAnswerId} value={a.suityAnswerId} >{a.answer}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (RenderQuestions())\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nimport Switch from \"react-switch\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport {ValidCPF} from '../../utils'\r\n\r\n\r\nexport default function Attorney() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Dados do procurador' : 'Attorney information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador ?' : 'Do you authorize the transmission of orders by a Attorney?',\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        birthDate: languagePT ? 'Nascimento' : 'BirthDate',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        actionDescription: languagePT ? 'Descrição dos poderes' : 'Description of powers',\r\n        isPEP: languagePT ? 'O mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n    }\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode,\r\n        isAcceptedOrderAttorney, setisAcceptedOrderAttorney, name, taxpayerRegistry,\r\n        isPEP, setisPEP, actionDescription, setactionDescription, setname, settaxpayerRegistry, setbirthDate } = useContext(AttorneyContext)\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'birthDate':\r\n                const birthDate = `${value}T00:00:00`\r\n                console.log(birthDate)\r\n                setbirthDate(birthDate)\r\n                break;\r\n            case 'taxpayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxpayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'actionDescription':\r\n                setactionDescription(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Attorney\">\r\n\r\n            <div className=\"d-flex d-flexdc df-alc\">\r\n                <p className=\"inputDescription\">{Labels.isAcceptedOrderAttorney} ?</p>\r\n                <Switch\r\n                    onColor=\"#fac580\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#474e5e\"\r\n                    offHandleColor=\"#000A1E\"\r\n                    checked={isAcceptedOrderAttorney}\r\n                    onChange={cheked => setisAcceptedOrderAttorney(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={20}\r\n                    width={50}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n            </div>\r\n\r\n            <div className={isAcceptedOrderAttorney ? \"d-flex d-flexdc\" : \"d-none\"}>\r\n                <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n\r\n                <div className=\"d-flex\">\r\n                    <input value={name} required={isAcceptedOrderAttorney} type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                        pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex\">\r\n                        <InputMask value={taxpayerRegistry} required={isAcceptedOrderAttorney} type=\"text\" name=\"taxpayerRegistry\" id=\"taxpayerRegistry\" \r\n                        placeholder={Labels.taxPayerRegistry} mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} \r\n                        onChange={e => OnChangeFields(e)} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                    <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <input required={isAcceptedOrderAttorney} type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                        min={Min} max={Max} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isPEP} ?</p>\r\n                    <Switch\r\n                        onColor=\"#fac580\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#474e5e\"\r\n                        offHandleColor=\"#000A1E\"\r\n                        checked={isPEP}\r\n                        onChange={cheked => setisPEP(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex\">\r\n                        <input required={isAcceptedOrderAttorney} value={actionDescription} type=\"text\" name=\"actionDescription\" id=\"actionDescription\"\r\n                            pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} placeholder={Labels.actionDescription} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"d-flex\">\r\n                    <Countries onSelectCountry={onSelectCountry} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <States onSelectState={onSelectState} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <Cities onSelectCity={onSelectCity} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <AdressUtils ClientAdress={false} Attorney={true}>\r\n                    <div className=\"d-flex\">\r\n                        <CEP onCollectCep={onCollectCep} ClientAdress={false} Attorney={true} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </AdressUtils>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { EmailContext } from '../../contexts/EmailContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function EmailType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { emailTypes, setType, setMail } = useContext(EmailContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Tipo de Email' : 'Select Email Type',\r\n        Email: languagePT ? 'Formato aceitado: example@domain.com' : 'Format accepted: example@domain.com'\r\n    }\r\n\r\n    function SelectTypeEmail(e) {\r\n        const { value } = e.target\r\n        setType(value)\r\n    }\r\n    function SetMail(e){\r\n        const { value } = e.target\r\n        setMail(value)\r\n    }\r\n    function RenderEmailType() {\r\n        return (\r\n            emailTypes.map(em => {\r\n                return (\r\n                    <option key={em.emailTypeId} value={em.emailTypeId}>{em.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divEmailTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">E-mail</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"emailType\" id=\"emailType\" onChange={e => SelectTypeEmail(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderEmailType()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required type=\"email\" placeholder=\"example@domain.com\"\r\n                    pattern=\"^[\\w._\\-]+@\\w+.com(.br)?\" title={Labels.Email} onChange={e => SetMail(e)}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WealthsTypeContext } from '../../contexts/Wealths';\r\n\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport CurrencyInput from 'react-currency-masked-input'\r\n\r\nimport './index.css'\r\n\r\nexport default function Wealths(props) {\r\n    const { languagePT, _Json_Wealths } = useContext(FormContext)\r\n\r\n    const { typeWealthId, value, description, settypeWealthId, setvalue, setdescription, typesWealthId } = useContext(WealthsTypeContext)\r\n    const { professionalOccupationId } = useContext(ClientInfoContext)\r\n    const [error, setError] = useState(false)\r\n\r\n    const [clientWealths, setClientWealths] = useState([])\r\n\r\n    const Labels = {\r\n        SelectWealthTypeId: languagePT ? 'Selecione tipo de bens/finanças para cadastro' : 'Select type of wealth/finances to register',\r\n        inputDescriptionTitle: languagePT ? 'Informações de bens/finanças para cadastro' : 'Wealths/Finances information for registration',\r\n        description: languagePT ? 'Descrição do bem/finança' : 'Wealths/Finances Description',\r\n        value: languagePT ? 'Valor do bem/finança' : 'Wealths/Finances Value',\r\n        addButtonDescription: languagePT ? 'CLIQUE PARA ADICIONAR O BEM/FINANÇA' : 'CLICK TO ADD A WEALTH/FINANCE'\r\n    }\r\n\r\n    let required = professionalOccupationId === \"8\" || professionalOccupationId === \"9\" ||\r\n        professionalOccupationId === \"\" ? false : true\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'wealthTypeId':\r\n                settypeWealthId(value)\r\n                break;\r\n            case 'wealthDescription':\r\n                setdescription(value)\r\n                break;\r\n            case 'wealthValue':\r\n                let valor = value + '';\r\n                valor = parseInt(valor.replace(/[\\D]+/g, ''));\r\n                valor = valor + '';\r\n                valor = valor.replace(/([0-9]{2})$/g, \".$1\");\r\n                setvalue(valor)\r\n                if (valor == 'NaN') setvalue('') \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderWealthTypes() {\r\n        return (\r\n            typesWealthId.map(tw => {\r\n                return (\r\n                    <option key={tw.wealthTypeId} value={tw.wealthTypeId}>{tw.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderClientWealths() {\r\n        return (\r\n            clientWealths.map((cw, index) => {\r\n                return (\r\n                    <div className=\"wealth\" key={`${cw.description}${index}`}>\r\n                        <div className=\"d-flex d-flexdc\">\r\n                            <span className=\"inputDescription\">Descrição: {cw.description}</span>\r\n                            <span className=\"inputDescription\">Valor: {cw.value}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeClientWealth(index)}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addClientWealth() {\r\n        if (!typeWealthId || !description || !value) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            let wealth = {\r\n                typeWealthId: parseInt(typeWealthId),\r\n                value: parseFloat(value).toFixed(2),\r\n                description: description\r\n            }\r\n            setClientWealths([...clientWealths, wealth])\r\n            setdescription('')\r\n            setvalue('')\r\n        }\r\n    }\r\n    function removeClientWealth(i) {\r\n        setClientWealths(clientWealths.filter((c, index) => index !== i))\r\n    }\r\n\r\n    useEffect(() => {\r\n        required = professionalOccupationId === \"8\" || professionalOccupationId === \"9\" ||\r\n        professionalOccupationId === \"\" ? false : true\r\n        if(!required) _Json_Wealths([])\r\n    }, [professionalOccupationId])\r\n    useEffect(() => {\r\n        _Json_Wealths(clientWealths)\r\n    }, [clientWealths])\r\n\r\n    return (\r\n        <div className={required ? \"divWealthTypes\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">{Labels.inputDescriptionTitle}</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={required && clientWealths.length === 0} name=\"wealthTypeId\" id=\"wealthTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.SelectWealthTypeId}</option>\r\n                    {RenderWealthTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={required && clientWealths.length === 0} value={description} type=\"text\" name=\"wealthDescription\" id=\"wealthDescription\" placeholder={Labels.description}\r\n                    onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.value}</p>\r\n            {/* <div className=\"d-flex\"> */}\r\n            <div className=\"d-flex\">\r\n                <input type=\"text\" value={value} required={required && clientWealths.length === 0} name=\"wealthValue\" id=\"wealthValue\"\r\n                    placeholder=\"$0\" onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            {/* </div> */}\r\n\r\n            <div className=\"wealths\">\r\n                {RenderClientWealths()}\r\n            </div>\r\n            <div className=\"addButton\">\r\n                <button type=\"button\" onClick={() => addClientWealth()}>\r\n                    {Labels.addButtonDescription}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>Selecione um item da lista e Preencha os campos</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { PhonesContext } from \"../../contexts/PhonesContexts\";\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function PhoneType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { phoneTypes, setPhoneTypeId, phoneTypeId, setCountryCode,setNumber,setStateCode } = useContext(PhonesContext)\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Número de Telefone' : 'Phone number',\r\n        Select: languagePT ? 'Selecionar Tipo de Telefone' : 'Select Phone Type',\r\n        SelectError: languagePT ? 'Erro ao consultar Tipos de Telefone' : 'Error querying Phone Type',\r\n        Celnumber: languagePT ? 'Formato exigido: +DDI (DDD) 9XXXX-XXXX' : '',\r\n        Resnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : '',\r\n        Comnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : ''\r\n    }\r\n\r\n    function SelectTypePhone(e) {\r\n        const { value } = e.target\r\n        setPhoneTypeId(value)\r\n    }\r\n\r\n    function SetPhoneNumber(e){\r\n        const { value } = e.target\r\n        if(value.length >= 18){\r\n            const CountryCode = value.split(\" \")[0].replace(\"+\",\"\")\r\n            const StateCode = value.split(\" \")[1].replace(\"(\",\"\").replace(\")\",\"\")\r\n            const _Number = value.split(\" \")[2].replace(\"-\",\"\")\r\n            setCountryCode(CountryCode)\r\n            setStateCode(StateCode)\r\n            setNumber(_Number)\r\n        }\r\n    }\r\n\r\n    function RenderPhoneType() {\r\n        return (\r\n            phoneTypes.map(ph => {\r\n                return (\r\n                    <option key={ph.phoneTypeId} value={ph.phoneTypeId}>{ph.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divPhoneTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"phoneType\" id=\"phoneType\" onChange={e => SelectTypePhone(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderPhoneType()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <InputMask name=\"ResidencialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '1'} maskChar=\"\" title={Labels.Resnumber}\r\n            className={phoneTypeId === '1' ? '' : 'd-none'} mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\"/>\r\n\r\n            <InputMask name=\"ComercialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '2'} maskChar=\"\" title={Labels.Comnumber}\r\n            className={phoneTypeId === '2' ? '' : 'd-none'} mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\"/>\r\n\r\n            <InputMask name=\"CelNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '3'} maskChar=\"\" title={Labels.Celnumber}\r\n            className={phoneTypeId === '3' ? '' : 'd-none'} mask=\"+99 (99) 99999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{5}[-]\\d{4}\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WorkContext } from '../../contexts/Work';\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport {validarCNPJ} from '../../utils'\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport './index.css'\r\n\r\nexport default function Work(props) {\r\n    const [errorCNPJ, setErrorCNPJ] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setinstitutionName, setprofession, setoccupation, setcorporateTaxpayerRegistry,\r\n        institutionName, profession, occupation, corporateTaxpayerRegistry, setIsRequired } = useContext(WorkContext)\r\n    const { professionalOccupationId } = useContext(ClientInfoContext)\r\n\r\n    const required = professionalOccupationId === \"3\" || professionalOccupationId === \"6\" ||\r\n        professionalOccupationId === \"8\" || professionalOccupationId === \"9\" || professionalOccupationId === \"\" ? false : true\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [required])\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações Instituição de Trabalho' : 'Work Institution Information',\r\n        institutionName: languagePT ? 'Nome da instituição' : 'Institution Name',\r\n        onlyLettersAndNumbersTitle: languagePT ? 'Somente letras e numeros' : 'Only letters and numbers',\r\n        profession: languagePT ? 'Profissão' : 'Profession',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        corporateTaxpayerRegistry: languagePT ? 'CNPJ da instituição de trabalho' : 'CNPJ of the work institution',\r\n        cnpjTitle: languagePT ? 'Digite um cnpj valido' : 'Enter a valid cnpj',\r\n    }\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'institutionName':\r\n                setinstitutionName(value)\r\n                break;\r\n            case 'profession':\r\n                setprofession(value)\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'corporateTaxpayerRegistry':\r\n                setcorporateTaxpayerRegistry(value)\r\n                const cnpj = value.replace(/[^\\d]+/g, '');\r\n\r\n                if (cnpj.length < 14) setErrorCNPJ(false)\r\n                else if (cnpj.length === 14) {\r\n                    if (validarCNPJ(cnpj)) {\r\n                        setErrorCNPJ(false)\r\n                        setcorporateTaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        setcorporateTaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCNPJ(true)\r\n                    }\r\n                }\r\n                else if (cnpj.length > 14) {\r\n                    setErrorCNPJ(true)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={required ? \"divWork\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={institutionName} type=\"text\" name=\"institutionName\" id=\"institutionName\" placeholder={Labels.institutionName}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={profession} type=\"text\" name=\"profession\" id=\"profession\" placeholder={Labels.profession}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={occupation} type=\"text\" name=\"occupation\" id=\"occupation\" placeholder={Labels.occupation}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <InputMask required={required} value={corporateTaxpayerRegistry} type=\"text\" name=\"corporateTaxpayerRegistry\" id=\"corporateTaxpayerRegistry\" \r\n                    placeholder={Labels.corporateTaxpayerRegistry} pattern=\"^\\d{2}\\.?\\d{3}\\.?\\d{3}\\/?\\d{4}-?\\d{2}$\" mask=\"99.999.999/9999-99\" title={Labels.cnpjTitle} \r\n                    onChange={e => OnChangeField(e)} />\r\n\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCNPJ ? 'errorCNPJ' : 'd-none'}>{Labels.cnpjTitle}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport { IdentificationTypeProvider } from './contexts/IdentificationTypeContexts';\r\nimport { FormContext } from './contexts/FormContexts';\r\nimport { AttorneyProvider } from './contexts/AttorneyContexts';\r\nimport { AdressesProvider } from './contexts/AdressesContexts'\r\nimport { BankAccountsProvider } from './contexts/BankContexts'\r\nimport { PhonesProvider } from './contexts/PhonesContexts';\r\nimport { EmailProvider } from './contexts/EmailContexts';\r\nimport { WealthsTypeProvider } from './contexts/Wealths';\r\nimport { WorkProvider } from './contexts/Work';\r\n\r\n\r\n\r\nimport IdentificationType from './components/IdentificationType';\r\nimport ClientAdress from './components/ClientAdress'\r\nimport BankAccounts from './components/BankAccounts';\r\nimport PPERelateds from './components/PPE Related';\r\nimport ClientInfo from './components/ClientInfo';\r\nimport FormSuity from './components/FormSuity';\r\nimport Attorney from './components/Attorney';\r\nimport EmailType from './components/Email';\r\nimport Wealths from './components/Wealths';\r\nimport Phones from './components/Phones';\r\nimport Work from './components/Work';\r\n\r\nimport './Global.css';\r\nimport { FormSuityProvider } from './contexts/FormSuity';\r\nimport { PPERelatedsProvider } from './contexts/PPERelatedsContext';\r\n\r\nimport { FaAngleLeft } from \"react-icons/fa\";\r\n\r\nfunction App() {\r\n    const { saveClient,languagePT } = useContext(FormContext)\r\n\r\n    const Labels = {\r\n        HeaderTitle: languagePT ? \"Cadastro de Cliente\" : \"Customer registration\",\r\n        BackToSite: languagePT ? \"Voltar ao Site\" : \"Back to site\",\r\n        ButtonSave: languagePT ? \"Salvar\" : \"Save\"\r\n    }\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault()\r\n        saveClient()\r\n    }\r\n    return (\r\n        <>\r\n            <header>\r\n                <a href=\"https://flow2pay.com.br/\"><FaAngleLeft/>{Labels.BackToSite}</a>\r\n                <span>{Labels.HeaderTitle}</span>\r\n            </header>\r\n            <form onSubmit={e => onSubmit(e)} action=\"\" method=\"\" autoComplete=\"off\">\r\n                <div className=\"div-infos\">\r\n\r\n                    <div className=\"div-client\">\r\n                        <ClientInfo />\r\n                        <div className=\"div-client-1\">\r\n                            <PhonesProvider>\r\n                                <Phones />\r\n                            </PhonesProvider>\r\n\r\n                            <IdentificationTypeProvider>\r\n                                <IdentificationType />\r\n                            </IdentificationTypeProvider>\r\n\r\n                            <EmailProvider>\r\n                                <EmailType />\r\n                            </EmailProvider>\r\n\r\n                            <AdressesProvider>\r\n                                <ClientAdress />\r\n                            </AdressesProvider>\r\n\r\n                            <PPERelatedsProvider>\r\n                                <PPERelateds />\r\n                            </PPERelatedsProvider>\r\n\r\n                            <WorkProvider>\r\n                                <Work />\r\n                            </WorkProvider>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"div-wealthsType\">\r\n                        <BankAccountsProvider>\r\n                            <BankAccounts />\r\n                        </BankAccountsProvider>\r\n\r\n                        <WealthsTypeProvider>\r\n                            <Wealths />\r\n                        </WealthsTypeProvider>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"div-attorney\">\r\n                        <AttorneyProvider>\r\n                            <Attorney />\r\n                        </AttorneyProvider>\r\n                    </div>\r\n\r\n                    <div className=\"div-formsuity\">\r\n                        <FormSuityProvider>\r\n                            <FormSuity />\r\n                        </FormSuityProvider>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"div-footer\">\r\n                    <button type=\"submit\">{Labels.ButtonSave}</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { FormProvider } from './contexts/FormContexts';\nimport { ClientInfoProvider } from './contexts/ClientInfoContexts';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Form from './form'\n\nimport './Global.css';\n\nfunction App() {\n  return (\n    <FormProvider>\n      <ClientInfoProvider>\n        <ToastContainer\n          position=\"top-right\" autoClose={2500}\n          hideProgressBar={false} newestOnTop={false}\n          closeOnClick rtl={false} pauseOnHover={false}\n          pauseOnVisibilityChange draggable\n          pauseOnFocusLoss={false}\n        />\n        <Form />\n      </ClientInfoProvider>\n    </FormProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}