{"version":3,"sources":["config.js","components/Toastify/index.jsx","components/Toastify/Toastify.js","contexts/FormContexts.jsx","contexts/ClientInfoContexts.jsx","contexts/IdentificationTypeContexts.jsx","contexts/AttorneyContexts.jsx","contexts/AdressesContexts.jsx","contexts/BankContexts.jsx","contexts/PhonesContexts.jsx","contexts/EmailContexts.jsx","contexts/Wealths.jsx","contexts/Work.jsx","components/IdentificationType/index.jsx","components/Countries/index.jsx","components/State/index.jsx","components/City/index.jsx","components/AdressType/index.jsx","components/Cep/index.jsx","components/AdressUtils/index.jsx","components/ClientAdress/index.jsx","components/BankAccounts/index.jsx","contexts/PPERelatedsContext.jsx","components/PPE Related/index.jsx","contexts/Spouse.jsx","components/Spouse/index.jsx","contexts/LegalRepresentativeContexts.jsx","components/LegalRepresentative/index.jsx","components/ClientInfo/index.jsx","contexts/FormSuity.jsx","components/FormSuity/index.jsx","components/Attorney/index.jsx","components/Email/index.jsx","components/Wealths/index.jsx","components/Phones/index.jsx","components/Work/index.jsx","form.js","App.js","index.js"],"names":["proxy","config","_urlCountries","_urlStates","_urlCities","_urlAdressType","_urlPhoneType","_urlGenders","_urlMaritalStatus","_urlMaritalAgreement","_urlProfessionalOccupation","_urlEducation","_urlEmailType","_urlIdentificationType","_urlWealthType","_urlRelationshipType","_urlBankAccountType","_urlBankGetByCode","_urlBankGetById","_urlBank","_urlQuestions","_urlAnswers","_urlSaveClient","_urlGetPluralAccount","Toastify","className","this","props","description","Component","Error","id","text","autoClose","draggable","icon","toast","isActive","error","toastId","Warn","warn","InitialState","languagePT","Boolean","errorOnApi","_Json_ClientAddresses","obj","_Json_ClientInfo","_Json_AttorneyInfo","_Json_PhoneInfo","_Json_EmailInfo","_Json_ClientIdentification","_Json_Spouse","_Json_Work","_Json_Wealths","_Json_FormSuity","_Json_BankAccounts","_Json_LegalRepresentative","_Json_PPERelateds","saveClient","reqJSON","clientId","name","shortName","taxPayerRegistry","birthDate","fatherName","genderId","maritalStatusId","maritalAgreementId","motherName","nationality","countryBirthId","stateBirthId","stateBirthName","professionalOccupationId","residenceInOtherCountryId","otherTaxResidenceCountryId","educationLevelId","ppeOccupation","usPerson","isAssociatedPerson","urlCallback","isAcceptedOrderAttorney","isAdministratorInAnotherAccount","attorneys","spouse","document","work","phones","emails","bankAccounts","wealths","addresses","ppeRelateds","formSuity","legalRepresentatives","authentication","login","password","FormContext","createContext","FormProvider","useState","setLanguagePT","setCodeClient","useEffect","window","location","pathname","split","filter","i","length","Provider","value","console","log","JSON","stringify","axios","post","then","res","data","code","clientCode","interval","setInterval","get","success","Success","clearInterval","catch","err","response","innerMessage","request","message","CheckClient","children","String","setname","setshortName","settaxPayerRegistry","setbirthDate","age","setAge","setfatherName","setgenderId","gendersIds","setmaritalStatusId","maritalStatus","maritalAgreements","setmotherName","getCountriesBirthId","setppeOccupation","setusPerson","setisAssociatedPerson","setisAdministratorInAnotherAccount","ClientInfoContext","ClientInfoProvider","useContext","setnationality","setgendersIds","setMaritalStatus","setmaritalAgreementId","setmaritalAgreements","setcountryBirthId","countriesBirthId","setcountriesBirthId","setstateBirthId","setstateBirthName","statesBirth","setstatesBirth","setprofessionalOccupationId","professionalOccupationsId","setprofessionalOccupationsId","setresidenceInOtherCountryId","residencesInOtherCountryId","setresidencesInOtherCountryId","setotherTaxResidenceCountryId","otherTaxResidencesCountryId","setotherTaxResidencesCountryId","seteducationLevelId","educationsLevelId","seteducationsLevelId","parseInt","identificationTypeId","number","emissionInssuer","emission","stateId","identificationTypes","setidentificationTypeId","setnumber","setemissionInssuer","setemission","setstateId","IdentificationTypeContext","IdentificationTypeProvider","setIdentificationTypes","states","setStates","taxpayerRegistry","settaxpayerRegistry","isPEP","setisPEP","actionDescription","setactionDescription","countryId","setCountryId","setStateId","stateName","setStateName","cityId","setCityId","cityName","setCityName","neighborhood","setneighborhood","setdescription","zipCode","setZipCode","complement","setcomplement","typeAddressId","setTypeAddressId","countries","AttorneyContext","AttorneyProvider","setisAcceptedOrderAttorney","address","setNeighborhood","setDescription","zipcode","setNumber","setComplement","AdressesContext","AdressesProvider","AdressJson","bankId","agency","account","digit","typeAccountId","bankAccountTypes","banks","setbankId","setagency","setaccount","setdigit","settypeAccountId","BankAccountsContext","BankAccountsProvider","setBankAccountTypes","setBanks","phoneTypes","phoneTypeId","countryCode","stateCode","setPhoneTypeId","setCountryCode","setStateCode","PhonesContext","PhonesProvider","setPhoneTypes","type","mail","isCorrespondency","emailTypes","setMail","setType","setIsCorrespondency","EmailContext","EmailProvider","setEmailTypes","typeWealthId","typesWealthId","settypeWealthId","setvalue","WealthsTypeContext","WealthsTypeProvider","settypesWealthId","institutionName","occupation","profession","corporateTaxpayerRegistry","setinstitutionName","setoccupation","setprofession","setcorporateTaxpayerRegistry","setIsRequired","WorkContext","WorkProvider","isRequired","IdentificationType","Labels","componentTitle","Select","States","documentNumber","Max","Date","toISOString","Min","OnChangeField","e","target","required","onChange","defaultValue","map","idt","identifycationTypeId","placeholder","s","statename","min","max","Countries","setCountries","Atctx","SelectError","Attorney","ClientAdress","onSelectCountry","c","Adctx","getStates","_countryId","onSelectState","Cities","cities","setCities","setError","getCities","_stateId","disabled","onSelectCity","cityname","AdressType","adressType","setAdressType","onSelectTypeAddress","adt","addressTypeId","CEP","CollectCep","maxLength","Cep","onCollectCep","test","ValidateCEP","AdressUtils","setInput","Adresses","selectedIndex","options","getAttribute","cep","BankAccounts","clientBankAccounts","setclientBankAccounts","selectItems","SelecttypeAccountId","SelectbankId","addAccount","bat","bankAccountTypeId","bank","index","find","b","onClick","addBankAccount","PPERelatedsContext","PPERelatedsProvider","reqJson","PPERelateds","errorCpf","setErrorCpf","PPERelated","setPPERelated","cpfTitle","onlyLettersTitle","cpf","Soma","Resto","includes","replace","substring","ValidCPF","onColor","offColor","onHandleColor","offHandleColor","checked","cheked","handleDiameter","boxShadow","activeBoxShadow","height","width","pattern","title","onlyLettersAndNumbersTitle","setHide","SpouseContext","SpouseProvider","spouseId","hide","Spouse","emissionDoc","relationshipTypeId","relationshipTypesId","setRelationshipTypeId","LegalRepresentativeContext","LegalRepresentativeProvider","setRelationshipTypesId","Work","legalRepresentativeName","legalRepresentativeTaxpayerRegistry","reltid","ClientInfo","dateInvalid","residenceInOtherCountryIdSelect","otherTaxResidenceCountryIdSelect","OnChangeFields","d","ano_atual","getFullYear","mes_atual","getMonth","dia_atual","getDate","ano_aniversario","mes_aniversario","dia_aniversario","Qtd_Anos","stateNameBirth","g","m","pot","ed","roc","otrc","questions","answers","FormSuityContext","FormSuityProvider","setQuestions","setAnswers","questionsAnswers","q","suityQuestionId","question","req","questionId","answerId","push","QuestionId","a","suityAnswerId","answer","EmailType","Email","SelectTypeEmail","em","emailTypeId","SetMail","Wealths","clientWealths","setClientWealths","SelectWealthTypeId","inputDescriptionTitle","addButtonDescription","tw","wealthTypeId","cw","wealth","addClientWealth","PhoneType","Celnumber","Resnumber","Comnumber","SetPhoneNumber","CountryCode","StateCode","_Number","SelectTypePhone","ph","maskChar","mask","errorCNPJ","setErrorCNPJ","cnpjTitle","cnpj","tamanho","numeros","digitos","soma","pos","charAt","resultado","validarCNPJ","App","onSubmit","preventDefault","action","method","autoComplete","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnHover","pauseOnVisibilityChange","pauseOnFocusLoss","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ed522731.chunk.js","sourcesContent":["const proxy = \"https://8790072319b7.ngrok.io/\"\r\n// const proxy = \"http://localhost:2525/\"\r\n// const proxy = \"https://cors-anywhere.herokuapp.com/\"\r\n\r\nconst config = {\r\n    _urlCountries: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Country\",\r\n    _urlStates: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/State/GetByCountryId/\",\r\n    _urlCities: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/City/GetByStateId/\",\r\n    _urlAdressType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/AddressType\",\r\n    _urlPhoneType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/PhoneType\",\r\n    _urlGenders: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Gender\",\r\n    _urlMaritalStatus: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/MaritalStatus\",\r\n    _urlMaritalAgreement: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/MaritalAgreement\",\r\n    _urlProfessionalOccupation: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/ProfessionalOccupation\",\r\n    _urlEducation: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Education\",\r\n    _urlEmailType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/EmailType\",\r\n    _urlIdentificationType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/IdentificationType\",\r\n    _urlWealthType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/WealthType\",\r\n    _urlRelationshipType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/RelationshipType\",\r\n    _urlBankAccountType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/BankAccountType\",\r\n    _urlBankGetByCode: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Bank/GetByCode/\",\r\n    _urlBankGetById: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Bank/GetById/\",\r\n    _urlBank: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Bank\",\r\n    _urlQuestions: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Suity/Questions\",\r\n    _urlAnswers: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Suity/Answers\",\r\n    _urlSaveClient: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/Save\",\r\n    _urlGetPluralAccount: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/GetPluralAccount/\"\r\n}\r\n\r\nexport default config","/* eslint-disable no-empty */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Toastify extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex df-jcspb\">\r\n                <div className=\"mr-3\">\r\n                <i className={this.props.className} />\r\n                </div>\r\n                <span> {this.props.description}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport Toastify from \"./index\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction Success(id,text,autoClose=2500,draggable = true,icon = 'fas fa-check'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.success(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable  }\r\n          );\r\n    }\r\n}\r\nfunction Error(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-triangle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.error(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\nfunction Warn(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-circle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.warn(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\n\r\nexport { Success, Error, Warn }","import { createContext, useEffect, useState, errorOnApi } from \"react\"\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\n\r\nimport { Error, Success, Warn } from '../components/Toastify/Toastify'\r\n\r\nconst InitialState = {\r\n  languagePT: Boolean,\r\n  errorOnApi: Boolean,\r\n  _Json_ClientAddresses: (obj) => { },\r\n  _Json_ClientInfo: (obj) => { },\r\n  _Json_AttorneyInfo: (obj) => { },\r\n  _Json_PhoneInfo: (obj) => { },\r\n  _Json_EmailInfo: (obj) => { },\r\n  _Json_ClientIdentification: (obj) => { },\r\n  _Json_Spouse: (obj) => { },\r\n  _Json_Work: (obj) => { },\r\n  _Json_Wealths: (obj) => { },\r\n  _Json_FormSuity: (obj) => { },\r\n  _Json_BankAccounts: (obj) => { },\r\n  _Json_LegalRepresentative: (obj) => { },\r\n  _Json_PPERelateds: (obj) => { },\r\n  saveClient: () => { }\r\n}\r\n\r\nlet reqJSON = {\r\n  clientId: 0,\r\n  name: '',\r\n  shortName: '',\r\n  taxPayerRegistry: '',\r\n  birthDate: '',\r\n  fatherName: '',\r\n  genderId: 0,\r\n  maritalStatusId: 0,\r\n  maritalAgreementId: 0,\r\n  motherName: '',\r\n  nationality: '',\r\n  countryBirthId: 0,\r\n  stateBirthId: 0,\r\n  stateBirthName: '',\r\n  professionalOccupationId: 0,\r\n  residenceInOtherCountryId: 0,\r\n  otherTaxResidenceCountryId: 0,\r\n  educationLevelId: 0,\r\n  ppeOccupation: '',\r\n  usPerson: false,\r\n  isAssociatedPerson: false,\r\n  urlCallback: '',\r\n  isAcceptedOrderAttorney: false,\r\n  isAdministratorInAnotherAccount: false,\r\n  attorneys: [],\r\n  spouse: {},\r\n  document: {},\r\n  work: {},\r\n  phones: [],\r\n  emails: [],\r\n  bankAccounts: [],\r\n  wealths: [],\r\n  addresses: [],\r\n  ppeRelateds: [],\r\n  formSuity: [],\r\n  legalRepresentatives: [],\r\n  authentication: {\r\n    login: 'APITEST',\r\n    password: 'APITEST'\r\n  }\r\n}\r\n\r\nexport const FormContext = createContext(InitialState);\r\n\r\nexport const FormProvider = (props) => {\r\n  const [languagePT, setLanguagePT] = useState(true)\r\n  const [errorOnApi, setErrorOnApi] = useState(true)\r\n  const [error, setError] = useState(false)\r\n\r\n  const [codeClient, setCodeClient] = useState('')\r\n\r\n  useEffect(() => {\r\n    const url = window.location.pathname.split(\"/\")\r\n    const enUS = url.filter(i => i === 'en')\r\n    if (enUS.length > 0) setLanguagePT(false)\r\n    else setLanguagePT(true)\r\n  }, [])\r\n\r\n\r\n\r\n  function _Json_ClientAddresses(obj) {\r\n    reqJSON.addresses = [obj]\r\n  }\r\n  function _Json_ClientInfo(obj) {\r\n    reqJSON = { ...reqJSON, ...obj }\r\n  }\r\n  function _Json_AttorneyInfo(obj) {\r\n    reqJSON.attorneys = [obj]\r\n  }\r\n  function _Json_PhoneInfo(obj) {\r\n    reqJSON.phones = [obj]\r\n  }\r\n  function _Json_EmailInfo(obj) {\r\n    reqJSON.emails = [obj]\r\n  }\r\n  function _Json_ClientIdentification(obj) {\r\n    reqJSON.document = obj\r\n  }\r\n  function _Json_Spouse(obj) {\r\n    reqJSON.spouse = obj\r\n  }\r\n  function _Json_Work(obj) {\r\n    reqJSON.work = obj\r\n  }\r\n  function _Json_Wealths(obj) {\r\n    reqJSON.wealths = obj\r\n  }\r\n  function _Json_FormSuity(obj) {\r\n    reqJSON.formSuity = obj\r\n  }\r\n  function _Json_PPERelateds(obj) {\r\n    reqJSON.ppeRelateds = [obj]\r\n  }\r\n  function _Json_BankAccounts(obj) {\r\n    reqJSON.bankAccounts = obj\r\n  }\r\n  function _Json_LegalRepresentative(obj) {\r\n    reqJSON.legalRepresentatives = [obj]\r\n  }\r\n  function saveClient() {\r\n    if (reqJSON.bankAccounts.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione uma conta bancaria' : 'Add a bank account'\r\n      Warn(\r\n        \"Addbankaccount\",\r\n        ErrorMessage,\r\n        5000,\r\n        false\r\n      );\r\n    }\r\n    else if (reqJSON.wealths.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione um bem/finança' : 'Add a wealth / finance'\r\n      Warn(\r\n        \"Addwealth/finance\",\r\n        ErrorMessage,\r\n        5000,\r\n        false\r\n      );\r\n    }\r\n    else {\r\n      console.log(JSON.stringify(reqJSON))\r\n      axios.post(config._urlSaveClient, reqJSON)\r\n        .then(res => {\r\n          if (res.data) {\r\n            // console.log(res.data)\r\n            setCodeClient(res.data.code)\r\n            CheckClient(res.data.code)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (err.request || err.response) {\r\n            // The request was made but no response was received\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              5000,\r\n              false\r\n            );\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              5000,\r\n              false\r\n            );\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  function CheckClient(clientCode) {\r\n    const interval = setInterval(() => {\r\n      axios.get(`${config._urlGetPluralAccount}${clientCode}`)\r\n        .then(res => {\r\n          if (res.data.clientCode) {\r\n            // Cliente cadastrado com sucesso\r\n            const SuccessMessage = languagePT ? 'Cadastro Concluido com Sucesso' : 'Registration Completed Successfully'\r\n            Success('ClientCreated', SuccessMessage, 5000, false)\r\n            clearInterval(interval)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (err.response) {\r\n            // Request made and server responded\r\n            if (err.response.data.innerMessage) {\r\n              const WarnMessage = languagePT ? 'O cadastro está na fila de análise/aprovação interna' : 'The registration is in the internal review / approval queue'\r\n              Warn(\r\n                \"RegistryInQueue\",\r\n                WarnMessage,\r\n                5000,\r\n                false\r\n              );\r\n            }\r\n          }\r\n          else if (error.request) {\r\n            // The request was made but no response was received\r\n            console.log(error.request);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              5000,\r\n              false\r\n            );\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              5000,\r\n              false\r\n            );\r\n          }\r\n        })\r\n    }, 5000);\r\n\r\n  }\r\n\r\n  return (\r\n    <FormContext.Provider\r\n      value={{\r\n        languagePT,\r\n        _Json_ClientAddresses,\r\n        _Json_ClientInfo,\r\n        _Json_AttorneyInfo,\r\n        _Json_PhoneInfo,\r\n        _Json_EmailInfo,\r\n        _Json_ClientIdentification,\r\n        _Json_Spouse,\r\n        _Json_Work,\r\n        _Json_Wealths,\r\n        _Json_LegalRepresentative,\r\n        _Json_BankAccounts,\r\n        _Json_FormSuity,\r\n        _Json_PPERelateds,\r\n        saveClient,\r\n        errorOnApi\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FormContext.Provider>\r\n  );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    name: String,\r\n    setname: () => { },\r\n    shortName: String,\r\n    setshortName: () => { },\r\n    taxPayerRegistry: String,\r\n    settaxPayerRegistry: () => { },\r\n    birthDate: String,\r\n    setbirthDate: () => { },\r\n    age: String,\r\n    setAge: () => { },\r\n    fatherName: String,\r\n    setfatherName: () => { },\r\n    genderId: String,\r\n    setgenderId: () => { },\r\n    gendersIds: [],\r\n    maritalStatusId: String,\r\n    setmaritalStatusId: () => { },\r\n    maritalStatus: [],\r\n    maritalAgreementId: String,\r\n    maritalAgreements: [],\r\n    motherName: String,\r\n    setmotherName: () => { },\r\n    nationality: String,\r\n    countryBirthId: String,\r\n    getCountriesBirthId: () => { },\r\n    stateBirthId: String,\r\n    stateBirthName: String,\r\n    professionalOccupationId: String,\r\n    residenceInOtherCountryId: String,\r\n    otherTaxResidenceCountryId: String,\r\n    educationLevelId: String,\r\n    ppeOccupation: String,\r\n    setppeOccupation: () => { },\r\n    usPerson: String,\r\n    setusPerson: () => { },\r\n    isAssociatedPerson: String,\r\n    setisAssociatedPerson: () => { },\r\n    urlCallback: String,\r\n    isAcceptedOrderAttorney: String,\r\n    isAdministratorInAnotherAccount: String,\r\n    setisAdministratorInAnotherAccount: () => { }\r\n}\r\nexport const ClientInfoContext = createContext(InitialState);\r\n\r\nexport const ClientInfoProvider = (props) => {\r\n    const {_Json_ClientInfo, errorOnApi} = useContext(FormContext)\r\n\r\n    //#region States\r\n\r\n    const [clientId, setclientId] = useState('')\r\n    const [name, setname] = useState('')\r\n    const [shortName, setshortName] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [age, setAge] = useState('')\r\n    const [fatherName, setfatherName] = useState('')\r\n    const [motherName, setmotherName] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    //! Gender variables\r\n    const [genderId, setgenderId] = useState('')\r\n    const [gendersIds, setgendersIds] = useState([])\r\n    //! Marital variables\r\n    const [maritalStatusId, setmaritalStatusId] = useState('')\r\n    const [maritalStatus, setMaritalStatus] = useState([])\r\n    const [maritalAgreementId, setmaritalAgreementId] = useState('')\r\n    const [maritalAgreements, setmaritalAgreements] = useState([])\r\n    //! Country and state birth variables\r\n    const [countryBirthId, setcountryBirthId] = useState('')\r\n    const [countriesBirthId, setcountriesBirthId] = useState([])\r\n    const [stateBirthId, setstateBirthId] = useState('')\r\n    const [stateBirthName, setstateBirthName] = useState('')\r\n    const [statesBirth, setstatesBirth] = useState([])\r\n    //! Professional ocupation variables\r\n    const [professionalOccupationId, setprofessionalOccupationId] = useState('')\r\n    const [professionalOccupationsId, setprofessionalOccupationsId] = useState([])\r\n    //! Residence in other country variables\r\n    const [residenceInOtherCountryId, setresidenceInOtherCountryId] = useState('')\r\n    const [residencesInOtherCountryId, setresidencesInOtherCountryId] = useState([])\r\n    //! Other tax residence in other country variables\r\n    const [otherTaxResidenceCountryId, setotherTaxResidenceCountryId] = useState('')\r\n    const [otherTaxResidencesCountryId, setotherTaxResidencesCountryId] = useState([])\r\n    //! Education level variables\r\n    const [educationLevelId, seteducationLevelId] = useState('')\r\n    const [educationsLevelId, seteducationsLevelId] = useState([])\r\n    const [ppeOccupation, setppeOccupation] = useState('')\r\n    const [usPerson, setusPerson] = useState(false)\r\n    const [isAssociatedPerson, setisAssociatedPerson] = useState(false)\r\n    const [isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount] = useState(false)\r\n\r\n    //#endregion\r\n\r\n    const reqJSON = {\r\n        clientId: 0,\r\n        name: name,\r\n        shortName: shortName,\r\n        taxPayerRegistry: taxPayerRegistry,\r\n        birthDate: `${birthDate}T00:00:00`,\r\n        fatherName: fatherName,\r\n        genderId: parseInt(genderId),\r\n        maritalStatusId: parseInt(maritalStatusId),\r\n        maritalAgreementId: maritalAgreementId ? parseInt(maritalAgreementId) : 0,\r\n        motherName: motherName,\r\n        nationality: nationality,\r\n        countryBirthId: parseInt(countryBirthId),\r\n        stateBirthId: parseInt(stateBirthId),\r\n        stateBirthName: stateBirthName,\r\n        professionalOccupationId: parseInt(professionalOccupationId),\r\n        residenceInOtherCountryId: parseInt(residenceInOtherCountryId),\r\n        otherTaxResidenceCountryId: parseInt(otherTaxResidenceCountryId),\r\n        educationLevelId: parseInt(educationLevelId),\r\n        ppeOccupation: ppeOccupation,\r\n        usPerson: usPerson,\r\n        isAssociatedPerson: isAssociatedPerson,\r\n        isAdministratorInAnotherAccount: isAdministratorInAnotherAccount,\r\n    }\r\n\r\n    // Campos não obrigatórios\r\n    useEffect(() => {\r\n        _Json_ClientInfo(reqJSON)\r\n    }, [usPerson, isAssociatedPerson,ppeOccupation, maritalAgreementId, otherTaxResidenceCountryId,residenceInOtherCountryId])\r\n\r\n    // Campos obrigatórios\r\n    useEffect(() => {\r\n        if (name && shortName && birthDate && fatherName && motherName && taxPayerRegistry && genderId && maritalStatusId && nationality && countryBirthId &&\r\n            stateBirthId && stateBirthName && professionalOccupationId  && educationLevelId) {\r\n            _Json_ClientInfo(reqJSON)\r\n        }\r\n    }, [name, shortName, birthDate, fatherName, motherName, taxPayerRegistry, genderId, maritalStatusId, nationality, countryBirthId,\r\n        stateBirthId, stateBirthName, professionalOccupationId, educationLevelId])\r\n\r\n\r\n    useEffect(() => {\r\n            getGendersIds()\r\n            getMaritalStatus()\r\n            getMaritalAgreements()\r\n            getCountries()\r\n            getProfessionalOccupations()\r\n            getEducation()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(countryBirthId === '') setstatesBirth([])\r\n        else getStatesBirth() \r\n    }, [countryBirthId])\r\n\r\n\r\n    function getGendersIds() {\r\n        axios.get(config._urlGenders)\r\n            .then(res => setgendersIds(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalStatus() {\r\n        axios.get(config._urlMaritalStatus)\r\n            .then(res => setMaritalStatus(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalAgreements() {\r\n        axios.get(config._urlMaritalAgreement)\r\n            .then(res => setmaritalAgreements(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => {\r\n                setcountriesBirthId(res.data)\r\n                setresidencesInOtherCountryId(res.data)\r\n                setotherTaxResidencesCountryId(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getStatesBirth() {\r\n        axios.get(`${config._urlStates}${countryBirthId}`)\r\n            .then(res => setstatesBirth(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getProfessionalOccupations() {\r\n        axios.get(config._urlProfessionalOccupation)\r\n            .then(res => setprofessionalOccupationsId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getEducation() {\r\n        axios.get(config._urlEducation)\r\n            .then(res => seteducationsLevelId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <ClientInfoContext.Provider\r\n            value={{\r\n                name, setname,\r\n                shortName, setshortName,\r\n                taxPayerRegistry, settaxPayerRegistry,\r\n                birthDate, setbirthDate, age, setAge,\r\n                fatherName, setfatherName,\r\n                motherName, setmotherName,\r\n                genderId, setgenderId, gendersIds,\r\n                maritalStatusId, setmaritalStatusId, maritalStatus,\r\n                maritalAgreements, setmaritalAgreementId,\r\n                nationality, setnationality,\r\n                setcountryBirthId, countriesBirthId,\r\n                setstateBirthId, setstateBirthName, statesBirth,\r\n                setprofessionalOccupationId, professionalOccupationsId,professionalOccupationId,\r\n                residencesInOtherCountryId, setresidenceInOtherCountryId,\r\n                otherTaxResidencesCountryId, setotherTaxResidenceCountryId,\r\n                seteducationLevelId, educationsLevelId,\r\n                ppeOccupation,setppeOccupation,\r\n                usPerson, setusPerson,\r\n                isAssociatedPerson, setisAssociatedPerson,\r\n                isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ClientInfoContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from '../contexts/FormContexts'\r\nimport { ClientInfoContext } from \"./ClientInfoContexts\"\r\n\r\nconst InitialState = {\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n}\r\n\r\nexport const IdentificationTypeContext = createContext(InitialState);\r\n\r\nexport const IdentificationTypeProvider = (props) => {\r\n\r\n    const { _Json_ClientIdentification, errorOnApi } = useContext(FormContext)\r\n    const { taxPayerRegistry } = useContext(ClientInfoContext)\r\n\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    let reqJSON = {\r\n        identificationTypeId: parseInt(identificationTypeId),\r\n        number: number,\r\n        emissionInssuer: emissionInssuer,\r\n        emission: `${emission}T00:00:00`,\r\n        stateId: parseInt(stateId),\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (identificationTypeId && emissionInssuer && emission && stateId) {\r\n            if (identificationTypeId === \"40\") {\r\n                setnumber(taxPayerRegistry)\r\n                _Json_ClientIdentification(reqJSON)\r\n            }\r\n            else if (number) _Json_ClientIdentification(reqJSON)\r\n        }\r\n    }, [identificationTypeId, number, emissionInssuer, emission, stateId,taxPayerRegistry])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <IdentificationTypeContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                setnumber,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states\r\n            }}\r\n        >\r\n            {props.children}\r\n        </IdentificationTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    isAcceptedOrderAttorney: false,\r\n    name: '',\r\n    setname: () => { },\r\n    taxpayerRegistry: '',\r\n    settaxpayerRegistry: () => { },\r\n    birthDate: '',\r\n    setbirthDate: () => { },\r\n    isPEP: false,\r\n    setisPEP: () => { },\r\n    actionDescription: '',\r\n    setactionDescription: () => { },\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setneighborhood: () => { },\r\n    description: '',\r\n    setdescription: () => { },\r\n    zipCode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setnumber: () => { },\r\n    complement: '',\r\n    setcomplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { },\r\n    countries: [],\r\n    countryId: '',\r\n}\r\nexport const AttorneyContext = createContext(InitialState);\r\n\r\nexport const AttorneyProvider = (props) => {\r\n    const [isAcceptedOrderAttorney, setisAcceptedOrderAttorney] = useState(false)\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [isPEP, setisPEP] = useState(false)\r\n    const [actionDescription, setactionDescription] = useState('')\r\n    const [countryId, setCountryId] = useState('')\r\n    const [countries, setCountries] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setneighborhood] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const [zipCode, setZipCode] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [complement, setcomplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_AttorneyInfo } = useContext(FormContext)\r\n\r\n    const attorneys = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry,\r\n        birthDate: birthDate,\r\n        isPEP: isPEP,\r\n        actionDescription: actionDescription,\r\n        address: {\r\n            countryId: countryId,\r\n            stateId: stateId,\r\n            stateName: stateName,\r\n            cityId: cityId,\r\n            cityName: cityName,\r\n            neighborhood: neighborhood,\r\n            description: description,\r\n            zipCode: zipCode,\r\n            number: number,\r\n            complement: complement,\r\n            typeAddressId: typeAddressId\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(!isAcceptedOrderAttorney) _Json_AttorneyInfo({})\r\n        else if (isAcceptedOrderAttorney && name && taxpayerRegistry && birthDate && actionDescription && countryId && stateId && stateName && cityId && cityName &&\r\n            neighborhood && description && zipCode && number && complement && typeAddressId) {\r\n            _Json_AttorneyInfo(attorneys)\r\n        }\r\n    }, [isAcceptedOrderAttorney, name, taxpayerRegistry, birthDate, isPEP, actionDescription, countryId, stateId, stateName, cityId, cityName,\r\n        neighborhood, description, zipCode, number, complement, typeAddressId])\r\n\r\n    return (\r\n        <AttorneyContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, birthDate, isPEP, actionDescription,\r\n                countries, countryId, isAcceptedOrderAttorney, stateId,\r\n                setisAcceptedOrderAttorney, setname, settaxpayerRegistry,\r\n                setbirthDate, setisPEP, setactionDescription,\r\n                setCountryId, setStateId, setStateName, setCityId, setneighborhood,\r\n                setCityName, setTypeAddressId, setZipCode, setdescription, setnumber, setcomplement\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AttorneyContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setNeighborhood: () => { },\r\n    description: '',\r\n    setDescription: () => { },\r\n    zipcode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setNumber: () => { },\r\n    complement: '',\r\n    setComplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { }\r\n}\r\nexport const AdressesContext = createContext(InitialState);\r\n\r\nexport const AdressesProvider = (props) => {\r\n    const [countryId, setCountryId] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [zipcode, setZipCode] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setNeighborhood] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [complement, setComplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_ClientAddresses } = useContext(FormContext)\r\n\r\n    const AdressJson = {\r\n        \"countryId\": countryId,\r\n        \"stateId\": stateId,\r\n        \"stateName\": stateName,\r\n        \"cityId\": cityId,\r\n        \"cityName\": cityName,\r\n        \"neighborhood\": neighborhood,\r\n        \"description\": description,\r\n        \"zipCode\": zipcode,\r\n        \"number\": number,\r\n        \"complement\": complement,\r\n        \"typeAddressId\": typeAddressId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cityId && cityName && complement && countryId && description && neighborhood && number && stateId && stateName && typeAddressId && zipcode) {\r\n            _Json_ClientAddresses(AdressJson)\r\n        }\r\n    }, [cityId, cityName, complement, countryId, description, neighborhood, number, stateId, stateName, typeAddressId, zipcode])\r\n\r\n    return (\r\n        <AdressesContext.Provider\r\n            value={{\r\n                countryId,\r\n                setCountryId,\r\n                stateId,\r\n                setStateId,\r\n                setStateName,\r\n                cityId,\r\n                setCityId,\r\n                setCityName,\r\n                zipcode,\r\n                setZipCode,\r\n                stateName,\r\n                cityName,\r\n                neighborhood,\r\n                setNeighborhood,\r\n                description,\r\n                setDescription,\r\n                number,\r\n                setNumber,\r\n                complement,\r\n                setComplement,\r\n                typeAddressId,\r\n                setTypeAddressId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AdressesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport { FormContext } from './FormContexts'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    bankId: '',\r\n    agency: '',\r\n    account: '',\r\n    digit: '',\r\n    typeAccountId: '',\r\n    bankAccountTypes: [],\r\n    banks: [],\r\n    setbankId: () => {},\r\n    setagency: () => {},\r\n    setaccount: () => {},\r\n    setdigit: () => {},\r\n    settypeAccountId: () => {}\r\n}\r\n\r\nexport const BankAccountsContext = createContext(InitialState);\r\n\r\nexport const BankAccountsProvider = (props) => {\r\n    const [bankId, setbankId] = useState('')\r\n    const [agency, setagency] = useState('')\r\n    const [account, setaccount] = useState('')\r\n    const [digit, setdigit] = useState('')\r\n    const [typeAccountId, settypeAccountId] = useState('')\r\n\r\n\r\n    const [bankAccountTypes, setBankAccountTypes] = useState([])\r\n    const [banks, setBanks] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        GetAccountTypes()\r\n        GetBanks()\r\n    }, [])\r\n\r\n    function GetAccountTypes() {\r\n        axios.get(config._urlBankAccountType)\r\n            .then(res => { if (res.data) setBankAccountTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function GetBanks() {\r\n        axios.get(config._urlBank)\r\n            .then(res => { if (res.data) setBanks(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <BankAccountsContext.Provider\r\n            value={{\r\n                bankAccountTypes, banks,\r\n                bankId, setbankId,\r\n                agency, setagency,\r\n                account, setaccount,\r\n                digit, setdigit,\r\n                typeAccountId, settypeAccountId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </BankAccountsContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    phoneTypes: [],\r\n    phoneTypeId: '',\r\n    countryCode: '',\r\n    stateCode: '',\r\n    number: '',\r\n    setPhoneTypeId: () => { },\r\n    setCountryCode: () => { },\r\n    setStateCode: () => { },\r\n    setNumber: () => { },\r\n}\r\n\r\n\r\n\r\nexport const PhonesContext = createContext(InitialState);\r\n\r\nexport const PhonesProvider = (props) => {\r\n    const { _Json_PhoneInfo, errorOnApi } = useContext(FormContext)\r\n    const [phoneTypeId, setPhoneTypeId] = useState('')\r\n    const [countryCode, setCountryCode] = useState('')\r\n    const [stateCode, setStateCode] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [phoneTypes, setPhoneTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        countryCode: countryCode,\r\n        stateCode: stateCode,\r\n        number: number,\r\n        type: parseInt(phoneTypeId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (countryCode && stateCode && number && phoneTypeId) _Json_PhoneInfo(reqJSON)\r\n    }, [countryCode, stateCode, number, phoneTypeId])\r\n\r\n    useEffect(() => {\r\n            getPhoneTypes()\r\n    }, [])\r\n\r\n\r\n    function getPhoneTypes() {\r\n        axios.get(config._urlPhoneType)\r\n            .then(res => {\r\n                if (res.data) setPhoneTypes(res.data)\r\n            })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    return (\r\n        <PhonesContext.Provider\r\n            value={{\r\n                phoneTypes, setPhoneTypeId, phoneTypeId,\r\n                countryCode, setCountryCode,\r\n                stateCode, setStateCode,\r\n                number, setNumber\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PhonesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    mail: '',\r\n    type: '',\r\n    isCorrespondency: true,\r\n    emailTypes: [],\r\n    setMail: () => { },\r\n    setType: () => { },\r\n    setIsCorrespondency: () => { },\r\n}\r\n\r\nexport const EmailContext = createContext(InitialState);\r\n\r\nexport const EmailProvider = (props) => {\r\n    const { _Json_EmailInfo, errorOnApi } = useContext(FormContext)\r\n    const [mail, setMail] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [isCorrespondency, setIsCorrespondency] = useState(true)\r\n    const [emailTypes, setEmailTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        mail: mail,\r\n        type: parseInt(type),\r\n        isCorrespondency: true\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (mail && type) _Json_EmailInfo(reqJSON)\r\n    }, [mail, type])\r\n\r\n    useEffect(() => {\r\n            getEmailTypes()\r\n    }, [])\r\n\r\n\r\n    function getEmailTypes() {\r\n        axios.get(config._urlEmailType)\r\n            .then(res => {\r\n                if (res.data) setEmailTypes(res.data)\r\n            })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    return (\r\n        <EmailContext.Provider\r\n            value={{\r\n                emailTypes,\r\n                setIsCorrespondency, isCorrespondency,\r\n                setType, setMail\r\n            }}\r\n        >\r\n            {props.children}\r\n        </EmailContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport { FormContext } from './FormContexts'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    typeWealthId: '',\r\n    value: '',\r\n    description: '',\r\n    typesWealthId: [],\r\n    settypeWealthId: () => { },\r\n    setvalue: () => { },\r\n    setdescription: () => { },\r\n}\r\n\r\nexport const WealthsTypeContext = createContext(InitialState);\r\n\r\nexport const WealthsTypeProvider = (props) => {\r\n\r\n    const [typeWealthId, settypeWealthId] = useState('')\r\n    const [value, setvalue] = useState('')\r\n    const [description, setdescription] = useState('')\r\n\r\n    const [typesWealthId, settypesWealthId] = useState([])\r\n\r\n    const {errorOnApi} = useContext(FormContext)\r\n\r\n    useEffect(() => {\r\n            GetWealthTypes()\r\n    }, [])\r\n\r\n    function GetWealthTypes() {\r\n        axios.get(config._urlWealthType)\r\n            .then(res => { if (res.data) settypesWealthId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <WealthsTypeContext.Provider\r\n            value={{\r\n                typeWealthId, value, description,\r\n                settypeWealthId, setvalue, setdescription,\r\n                typesWealthId,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WealthsTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    institutionName: '',\r\n    occupation: '',\r\n    profession: '',\r\n    corporateTaxpayerRegistry: '',\r\n    setinstitutionName: () => { },\r\n    setoccupation: () => { },\r\n    setprofession: () => { },\r\n    setcorporateTaxpayerRegistry: () => { },\r\n    setIsRequired: () => { }\r\n}\r\n\r\nexport const WorkContext = createContext(InitialState);\r\n\r\nexport const WorkProvider = (props) => {\r\n\r\n    const { _Json_Work } = useContext(FormContext)\r\n\r\n    const [institutionName, setinstitutionName] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n    const [profession, setprofession] = useState('')\r\n    const [corporateTaxpayerRegistry, setcorporateTaxpayerRegistry] = useState('')\r\n    \r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    let reqJSON = {\r\n        institutionName: institutionName,\r\n        occupation: occupation,\r\n        profession: profession,\r\n        corporateTaxpayerRegistry: corporateTaxpayerRegistry\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_Work({})\r\n        else if (institutionName && occupation && profession && corporateTaxpayerRegistry){\r\n            _Json_Work(reqJSON)\r\n        }\r\n    }, [isRequired,institutionName, occupation, profession, corporateTaxpayerRegistry])\r\n\r\n\r\n    return (\r\n        <WorkContext.Provider\r\n            value={{\r\n                institutionName, setinstitutionName,\r\n                occupation, setoccupation,\r\n                profession, setprofession,\r\n                corporateTaxpayerRegistry, setcorporateTaxpayerRegistry,\r\n                setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WorkContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { IdentificationTypeContext } from '../../contexts/IdentificationTypeContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function IdentificationType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, \r\n        setstateId,setemissionInssuer, setnumber, setemission, emission } = useContext(IdentificationTypeContext)\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Identificação' : 'Identification',\r\n        Select: languagePT ? 'Selecionar Tipo de Identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Document UF',\r\n        emission: languagePT ? 'Data de emissão' : 'Issue date',\r\n        emissionInssuer: languagePT ? 'Orgão Emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    function OnChangeField(e) {\r\n        const {value, id} = e.target \r\n        switch (id) {\r\n            case 'identificationType':\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'IdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'identificationTypeemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'identificationTypedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'identificationTypeemission':\r\n                setemission(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divIdentificationTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"identificationType\" id=\"identificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex\"}>\r\n                <input required={identificationTypeId !== \"40\"} type=\"text\" name=\"identificationTypedocument\" id=\"identificationTypedocument\" onChange={e => OnChangeField(e)}\r\n                placeholder={Labels.documentNumber}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required name=\"IdtypeStateId\" id=\"IdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.States}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescriptionTitle\">{Labels.emission}</p>\r\n            <div className=\"d-flex\">\r\n                <input value={emission} required type=\"date\" name=\"identificationTypeemission\" id=\"identificationTypeemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required type=\"text\" name=\"identificationTypeemissionInssuer\" id=\"identificationTypeemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                placeholder={Labels.emissionInssuer}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nexport default function Countries(props) {\r\n    const [countries, setCountries] = useState([])\r\n    const { languagePT, errorOnApi } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n\r\n    const [error, setError] = useState(false)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar País' : 'Select Country',\r\n        SelectError: languagePT ? 'Erro ao consultar países' : 'Error querying countries'\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n            getCountries()\r\n    }, [])\r\n\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => {\r\n                if (res.data) setCountries(res.data)\r\n            })\r\n            .catch(err => console.log(Labels.SelectError))\r\n    }\r\n    function RenderCountries() {\r\n        return (\r\n            countries.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"countries\" id=\"countries\" onChange={props.onSelectCountry}>\r\n            <option defaultValue value=\"\">{Labels.Select}</option>\r\n            {RenderCountries()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { AdressesContext } from \"../../contexts/AdressesContexts\";\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const Atctx = useContext(AttorneyContext)\r\n    const Adctx = useContext(AdressesContext)\r\n\r\n    const [states, setStates] = useState([])\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Estado' : 'Select State',\r\n        SelectError: languagePT ? 'Erro ao consultar estados' : 'Error querying states'\r\n    }\r\n\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if(Atctx.isAcceptedOrderAttorney) required = true\r\n        else if(!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n\r\n    useEffect(() => {\r\n        if(props.ClientAdress) {\r\n            if (Adctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n        else if (props.Attorney){\r\n            if (Atctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n    }, [Atctx.countryId, Adctx.countryId])\r\n\r\n    function getStates() {\r\n        const _countryId = props.ClientAdress ? Adctx.countryId : Atctx.countryId\r\n        axios.get(`${config._urlStates}${_countryId}`)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    setStates(res.data)\r\n                }\r\n                else {\r\n                    console.log(Labels.SelectError)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(Labels.SelectError)\r\n            })\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"states\" id=\"states\" onChange={props.onSelectState}>\r\n            <option defaultValue value=\"\">{Labels.Select}</option>\r\n            {RenderStates()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function Cities(props) {\r\n    const Adctx = useContext(AdressesContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const [cities, setCities] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Cidade' : 'Select City',\r\n        SelectError: languagePT ? 'Erro ao consultar cidades' : 'Error querying cities'\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if(Atctx.isAcceptedOrderAttorney) required = true\r\n        else if(!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n        if(props.ClientAdress) {\r\n            if (Adctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n        else if (props.Attorney){\r\n            if (Atctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n    }, [Atctx.stateId, Adctx.stateId])\r\n\r\n    function getCities() {\r\n        const _stateId = props.ClientAdress ? Adctx.stateId : Atctx.stateId\r\n\r\n            axios.get(`${config._urlCities}${_stateId}`)\r\n                .then(res => {\r\n                    if (res.data) {\r\n                        setCities(res.data)\r\n                        setError(false)\r\n                    }\r\n                    else {\r\n                        console.log(Labels.SelectError)\r\n                        setError(true)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(Labels.SelectError)\r\n                    setError(true)\r\n                })\r\n    }\r\n    function RenderCities() {\r\n        return (\r\n            cities.map(c => {\r\n                return (\r\n                    <option key={c.cityId} value={c.cityId} cityname={c.name}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divCitiesSelect\">\r\n            <select required={required} disabled={error} className={error ? \"error\" : \"\"} name=\"cities\" id=\"cities\" onChange={props.onSelectCity}>\r\n                <option defaultValue value=\"\">{Labels.Select}</option>\r\n                {RenderCities()}\r\n            </select>\r\n            <p className={error ? \"msgError\" : \"d-none\"}>{Labels.SelectError}</p>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport config from \"../../config\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function AdressType(props) {\r\n    const [adressType, setAdressType] = useState([])\r\n    const { languagePT, errorOnApi } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const [error, setError] = useState(false)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Tipo de Endereço' : 'Select Address Type',\r\n        SelectError: languagePT ? 'Erro ao consultar Tipos de Endereço' : 'Error querying Address Type'\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n            getAdressType()\r\n    }, [])\r\n\r\n    function getAdressType() {\r\n        axios.get(config._urlAdressType)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    setAdressType(res.data)\r\n                    setError(false)\r\n                }\r\n                else {\r\n                    console.log(Labels.SelectError)\r\n                    setError(true)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(Labels.SelectError)\r\n                setError(true)\r\n\r\n            })\r\n    }\r\n    function RenderAdressType() {\r\n        return (\r\n            adressType.map(adt => {\r\n                return (\r\n                    <option key={adt.addressTypeId} value={adt.addressTypeId}>{adt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divAddressTypeSelect\">\r\n            <select required={required} name=\"addressType\" id=\"addressType\" onChange={props.onSelectTypeAddress}>\r\n                <option defaultValue value=\"\">{Labels.Select}</option>\r\n                {RenderAdressType()}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function CEP(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const [error, setError] = useState(false)\r\n    const Labels = {\r\n        CollectCep: languagePT ? 'Digite seu cep' : 'Type your ZIP Code',\r\n        Error: languagePT ? 'CEP Invalido' : 'Invalid ZIP Code'\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    function ValidateCEP(e) {\r\n        const Cep = e.target.value\r\n        if (Cep.length === 0) {\r\n            setError(false)\r\n            props.onCollectCep('')\r\n        }\r\n        const validacep = /^[0-9]{5,8}$/;\r\n        if (validacep.test(Cep)) {\r\n            setError(false)\r\n            props.onCollectCep(Cep)\r\n        }\r\n        else {\r\n            props.onCollectCep('')\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"divCollectCep\">\r\n            <input required={required} className={error ? \"error\" : \"\"} placeholder={Labels.CollectCep} type=\"text\" name=\"cep\" id=\"cep\"\r\n                maxLength=\"8\" onChange={e => ValidateCEP(e)} />\r\n            <p className={error ? \"msgError\" : \"d-none\"}>{Labels.Error}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts';\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function AdressUtils(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setComplement, setDescription, setNeighborhood, setNumber } = useContext(AdressesContext)\r\n    const { setcomplement, setdescription, setneighborhood, setnumber, isAcceptedOrderAttorney } = useContext(AttorneyContext)\r\n    const Labels = {\r\n        neighborhood: languagePT ? 'Bairro' : 'Neighborhood',\r\n        description: languagePT ? 'Rua' : 'Street',\r\n        number: languagePT ? 'Número' : 'Number',\r\n        complement: languagePT ? 'Complemento' : 'Complement',\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if(isAcceptedOrderAttorney) required = true\r\n        else if(!isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n    \r\n\r\n    function setInput(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'neighborhood':\r\n                if (props.Attorney) setneighborhood(value)\r\n                else if (props.ClientAdress) setNeighborhood(value)\r\n                break;\r\n            case 'description':\r\n                if (props.Attorney) setdescription(value)\r\n                else if (props.ClientAdress) setDescription(value)\r\n                break;\r\n            case 'number':\r\n                if (props.Attorney) setnumber(value)\r\n                else if (props.ClientAdress) setNumber(value)\r\n                break;\r\n            case 'complement':\r\n                if (props.Attorney) setcomplement(value)\r\n                else if (props.ClientAdress) setComplement(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"divCollectUtilsAdress\">\r\n            {props.children}\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"neighborhood\" id=\"neighborhood\" placeholder={Labels.neighborhood} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"description\" id=\"description\" placeholder={Labels.description} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" maxLength=\"20\" name=\"number\" id=\"number\" placeholder={Labels.number} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"complement\" id=\"complement\" placeholder={Labels.complement} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nexport default function Adresses(props) {\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode } = useContext(AdressesContext)\r\n    const {languagePT} = useContext(FormContext)\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Endereço' : 'Address',\r\n    }\r\n\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientAdress\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <Countries onSelectCountry={onSelectCountry} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <States onSelectState={onSelectState} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <Cities onSelectCity={onSelectCity} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <AdressUtils ClientAdress={true} Attorney={false}>\r\n                <div className=\"d-flex\">\r\n                    <CEP onCollectCep={onCollectCep} ClientAdress={true} Attorney={false}/>\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n            </AdressUtils>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\nimport { BankAccountsContext } from '../../contexts/BankContexts';\r\nimport { FaTrash, FaPlusSquare } from \"react-icons/fa\";\r\n\r\n\r\nexport default function BankAccounts(props) {\r\n    const [error, setError] = useState(false)\r\n\r\n    const { languagePT, _Json_BankAccounts } = useContext(FormContext)\r\n    const { bankAccountTypes, banks,\r\n        bankId, setbankId,\r\n        agency, setagency,\r\n        account, setaccount,\r\n        digit, setdigit,\r\n        typeAccountId, settypeAccountId } = useContext(BankAccountsContext)\r\n\r\n    const [clientBankAccounts, setclientBankAccounts] = useState([])\r\n\r\n    const Labels = {\r\n        selectItems: languagePT ? 'Selecione um item da lista e Preencha os campos' : 'Select an item from the list and fill the fields',\r\n        SelecttypeAccountId: languagePT ? 'Tipo de conta bancária' : 'Bank account type',\r\n        SelectbankId: languagePT ? 'Selecione o seu banco' : 'Select your bank',\r\n        account: languagePT ? 'Número da conta bancária' : 'Bank account number',\r\n        digit: languagePT ? 'Digito' : 'Digit',\r\n        agency: languagePT ? 'Agência' : 'Agency',\r\n        description: languagePT ? 'Contas bancarias' : 'Bank accounts',\r\n        addAccount: languagePT ? 'CLIQUE PARA ADICIONAR CONTA BANCARIA' : 'CLICK TO ADD BANK ACCOUNT'\r\n    }\r\n\r\n\r\n    function RenderBankAccountTypes() {\r\n        return (\r\n            bankAccountTypes.map(bat => {\r\n                return (\r\n                    <option key={bat.bankAccountTypeId} value={bat.bankAccountTypeId}>{bat.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderBanks() {\r\n        return (\r\n            banks.map(bank => {\r\n                return (\r\n                    <option key={bank.bankId} value={bank.bankId} code={bank.code}>{bank.code} | {bank.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderclientBankAccounts() {\r\n        return (\r\n            clientBankAccounts.map((bat, index) => {\r\n                return (\r\n                    <div className=\"account\" key={index}>\r\n                        <div className=\"d-flex d-flexdc\">\r\n                            <span className=\"inputDescription\">{banks.find(b => b.bankId === bat.bankId).name}</span>\r\n                            <span className=\"inputDescription\">Agencia: {bat.agency}</span>\r\n                            <span className=\"inputDescription\">Conta: {bat.account}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeBankAccount(index)}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addBankAccount() {\r\n        if (!account || !agency || !bankId || !digit || !typeAccountId) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            let bank = {\r\n                bankId: parseInt(bankId),\r\n                agency: parseInt(agency),\r\n                account: parseInt(account),\r\n                digit: parseInt(digit),\r\n                typeAccountId: parseInt(typeAccountId)\r\n            }\r\n            setclientBankAccounts([...clientBankAccounts, bank])\r\n            setaccount('')\r\n            setdigit('')\r\n            setagency('')\r\n        }\r\n    }\r\n    function removeBankAccount(i) {\r\n        setclientBankAccounts(clientBankAccounts.filter((c, index) => index !== i))\r\n    }\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'typeAccountId':\r\n                settypeAccountId(value)\r\n                break;\r\n            case 'account':\r\n                setaccount(value)\r\n                break;\r\n            case 'digit':\r\n                setdigit(value)\r\n                break;\r\n            case 'agency':\r\n                setagency(value)\r\n                break;\r\n            case 'bankId':\r\n                setbankId(value)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        _Json_BankAccounts(clientBankAccounts)\r\n    }, [clientBankAccounts])\r\n\r\n    return (\r\n        <div className=\"divBankAccounts\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.description}</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={clientBankAccounts.length === 0} name=\"typeAccountId\" id=\"typeAccountId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.SelecttypeAccountId}</option>\r\n                    {RenderBankAccountTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <select required={clientBankAccounts.length === 0} name=\"bankId\" id=\"bankId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.SelectbankId}</option>\r\n                    {RenderBanks()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={account} type=\"text\" name=\"account\" id=\"account\"\r\n                    placeholder={Labels.account} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={digit} type=\"text\" name=\"digit\" id=\"digit\"\r\n                    placeholder={Labels.digit} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={agency} type=\"text\" name=\"agency\" id=\"agency\"\r\n                    placeholder={Labels.agency} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"bankAccounts\">\r\n                {RenderclientBankAccounts()}\r\n            </div>\r\n            <div className=\"addAccount\">\r\n                <button onClick={() => addBankAccount()} type=\"button\">\r\n                    {Labels.addAccount}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>{Labels.selectItems}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    name: '',\r\n    nationality: '',\r\n    occupation: '',\r\n    settaxPayerRegistry: () => { },\r\n    setname: () => { },\r\n    setnationality: () => { },\r\n    setoccupation: () => { }\r\n}\r\n\r\nexport const PPERelatedsContext = createContext(InitialState);\r\n\r\nexport const PPERelatedsProvider = (props) => {\r\n    const { _Json_PPERelateds } = useContext(FormContext)\r\n\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [name, setname] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n\r\n    const reqJson = {\r\n        taxPayerRegistry: taxPayerRegistry,\r\n        name: name,\r\n        nationality: nationality,\r\n        occupation: occupation\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(name && taxPayerRegistry && occupation && nationality) _Json_PPERelateds(reqJson)\r\n    }, [name,taxPayerRegistry,occupation,nationality])\r\n\r\n    return (\r\n        <PPERelatedsContext.Provider\r\n            value={{\r\n                taxPayerRegistry,\r\n                name,\r\n                nationality,\r\n                occupation,\r\n                settaxPayerRegistry,\r\n                setname,\r\n                setnationality,\r\n                setoccupation\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PPERelatedsContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { PPERelatedsContext } from '../../contexts/PPERelatedsContext';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport Switch from \"react-switch\";\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function PPERelateds(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { name, nationality, occupation, setname, setnationality,\r\n        setoccupation, settaxPayerRegistry, taxPayerRegistry } = useContext(PPERelatedsContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n\r\n    const [PPERelated, setPPERelated] = useState(false)\r\n\r\n    const Labels = {\r\n        PPERelated: languagePT ? 'Cliente têm relacionamento com uma Pessoa Politicamente Exposta ?' : 'Customer has a relationship with a Politically Exposed Person ?',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        name: languagePT ? 'Nome da Pessoa Politicamente Exposta' : 'Politically Exposed Person\\'s Name',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'TaxPayerRegistry',\r\n\r\n    }\r\n\r\n    function ValidCPF(cpf) {\r\n        var Soma;\r\n        var Resto;\r\n        Soma = 0;\r\n        if (cpf === \"00000000000\") return false;\r\n        if (cpf === \"11111111111\") return false;\r\n        if (cpf === \"22222222222\") return false;\r\n        if (cpf === \"33333333333\") return false;\r\n        if (cpf === \"44444444444\") return false;\r\n        if (cpf === \"55555555555\") return false;\r\n        if (cpf === \"66666666666\") return false;\r\n        if (cpf === \"77777777777\") return false;\r\n        if (cpf === \"88888888888\") return false;\r\n\r\n        if (cpf.includes('.')) cpf = cpf.replace(/\\./g, '')\r\n        if (cpf.includes('-')) cpf = cpf.replace(/-/g, '')\r\n        // if (cpf.includes('-')) cpf = cpf.replace(/\\-/g, '')\r\n\r\n        for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n        Soma = 0;\r\n        for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n        return true;\r\n    }\r\n\r\n    function OnChangeField(e) {\r\n        const { id, value } = e.target\r\n\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                settaxPayerRegistry(value)\r\n                if (value.length < 11) setErrorCpf(false)\r\n                else if (value.length === 11) {\r\n                    if (ValidCPF(value)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (value.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"d-flex d-flexdc df-alc\">\r\n                <p className=\"inputDescription\">{Labels.PPERelated} ?</p>\r\n                <Switch\r\n                    onColor=\"#4B4B4B\"\r\n                    offColor=\"#bdbbbb\"\r\n                    onHandleColor=\"#bdbbbb\"\r\n                    offHandleColor=\"#4B4B4B\"\r\n                    checked={PPERelated}\r\n                    onChange={cheked => setPPERelated(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={20}\r\n                    width={50}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input value={name} required={PPERelated} type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} value={nationality} required={PPERelated} type=\"text\" \r\n                name=\"nationality\" id=\"nationality\" placeholder={Labels.nationality}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"\" : \"d-none\"}>\r\n                <div className=\"d-flex\">\r\n                    <input className={PPERelated ? \"\" : \"d-none\"} value={taxPayerRegistry} required={PPERelated} \r\n                    type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\" placeholder={Labels.taxPayerRegistry}\r\n                        pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} required={PPERelated} value={occupation} type=\"text\" name=\"occupation\" id=\"occupation\" placeholder={Labels.occupation}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setname: () => { },\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n    setHide: () => { }\r\n}\r\n\r\nexport const SpouseContext = createContext(InitialState);\r\n\r\nexport const SpouseProvider = (props) => {\r\n\r\n    const { _Json_Spouse, errorOnApi } = useContext(FormContext)\r\n\r\n    const [spouseId, setspouseId] = useState('')\r\n    const [name, setname] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    \r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    const [hide, setHide] = useState(false)\r\n\r\n    let reqJSON = {\r\n        spouseId: spouseId,\r\n        name: name,\r\n        taxPayerRegistry: taxPayerRegistry,\r\n        document: {\r\n            identificationTypeId: identificationTypeId,\r\n            number: number,\r\n            emissionInssuer: emissionInssuer,\r\n            emission: emission,\r\n            stateId: stateId\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(hide) _Json_Spouse({})\r\n        else if (identificationTypeId === \"40\") {\r\n            if (name && taxPayerRegistry && identificationTypeId && emissionInssuer && emission && stateId) {\r\n                const cpf = `${taxPayerRegistry.substring(0, 3)}.${taxPayerRegistry.substring(3, 6)}.${taxPayerRegistry.substring(6, 9)}-${taxPayerRegistry.substring(9, 11)}`\r\n                reqJSON.document.number = identificationTypeId === \"40\" ? cpf : number\r\n                reqJSON.taxPayerRegistry = cpf\r\n                _Json_Spouse(reqJSON)\r\n            }\r\n        }\r\n        else if (name && taxPayerRegistry && identificationTypeId && number && emissionInssuer && emission && stateId) {\r\n            const cpf = `${taxPayerRegistry.substring(0, 3)}.${taxPayerRegistry.substring(3, 6)}.${taxPayerRegistry.substring(6, 9)}-${taxPayerRegistry.substring(9, 11)}`\r\n            reqJSON.taxPayerRegistry = cpf\r\n            _Json_Spouse(reqJSON)\r\n        }\r\n\r\n    }, [hide, name, taxPayerRegistry, identificationTypeId, number, emissionInssuer, emission, stateId])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <SpouseContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                settaxPayerRegistry, taxPayerRegistry,\r\n                setnumber, setname, name,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states,\r\n                setHide\r\n            }}\r\n        >\r\n            {props.children}\r\n        </SpouseContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { SpouseContext } from '../../contexts/Spouse';\r\n\r\nimport './index.css'\r\n\r\nexport default function Spouse(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, setHide,\r\n        setstateId, setemissionInssuer, setnumber, setemission, number, taxPayerRegistry, settaxPayerRegistry, setname, name } = useContext(SpouseContext)\r\n    const Labels = {\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        Select: languagePT ? 'Selecionar Tipo de Identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Select State',\r\n        emission: languagePT ? 'Data de emissão' : 'Select State',\r\n        emissionInssuer: languagePT ? 'Orgão Emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Only letters',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    useEffect(() => {\r\n        setHide(props.hide)\r\n    }, [])\r\n\r\n    function ValidCPF(cpf) {\r\n        var Soma;\r\n        var Resto;\r\n        Soma = 0;\r\n        if (cpf === \"00000000000\") return false;\r\n        if (cpf === \"11111111111\") return false;\r\n        if (cpf === \"22222222222\") return false;\r\n        if (cpf === \"33333333333\") return false;\r\n        if (cpf === \"44444444444\") return false;\r\n        if (cpf === \"55555555555\") return false;\r\n        if (cpf === \"66666666666\") return false;\r\n        if (cpf === \"77777777777\") return false;\r\n        if (cpf === \"88888888888\") return false;\r\n\r\n        if (cpf.includes('.')) cpf = cpf.replace(/\\./g, '')\r\n        if (cpf.includes('-')) cpf = cpf.replace(/-/g, '')\r\n        // if (cpf.includes('-')) cpf = cpf.replace(/\\-/g, '')\r\n\r\n        for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n        Soma = 0;\r\n        for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n        return true;\r\n    }\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'spousename':\r\n                setname(value)\r\n                break;\r\n            case 'spouseidentificationType':\r\n                setnumber('')\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'spouseIdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'spouseemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'spousedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'spouseemission':\r\n                const emissionDoc = `${value}T00:00:00`\r\n                setemission(emissionDoc)\r\n                break;\r\n            case 'spousedocumentcpf':\r\n                settaxPayerRegistry(value)\r\n                if (value.length < 11) setErrorCpf(false)\r\n                else if (value.length === 11) {\r\n                    if (ValidCPF(value)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className={props.hide ? \"d-none\" : \"divSpouse\"}>\r\n            <span className=\"inputDescriptionTitle\">Informações Conjuge</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={name} required={props.required} type=\"text\" name=\"spousename\" id=\"spousename\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={props.required}\r\n                    name=\"spouseidentificationType\" id=\"spouseidentificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex\"}>\r\n                <input value={number} required={identificationTypeId !== \"40\" && props.required} type=\"text\" name=\"spousedocument\" id=\"spousedocument\" onChange={e => OnChangeField(e)}\r\n                    placeholder={Labels.documentNumber} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <input value={taxPayerRegistry} required={props.required} type=\"text\" name=\"spousedocumentcpf\" id=\"spousedocumentcpf\"\r\n                        placeholder={Labels.taxPayerRegistry} pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={props.required} name=\"spouseIdtypeStateId\" id=\"spouseIdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.States}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.emission}</p>\r\n            <div className=\"d-flex\">\r\n                <input required={props.required} type=\"date\" name=\"spouseemission\" id=\"spouseemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={props.required} type=\"text\" name=\"spouseemissionInssuer\" id=\"spouseemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                    placeholder={Labels.emissionInssuer} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nimport config from \"../config\";\r\n\r\nconst InitialState = {\r\n    name: '',\r\n    taxpayerRegistry: '',\r\n    relationshipTypeId: '',\r\n    relationshipTypesId: [],\r\n    setname: () => { },\r\n    settaxpayerRegistry: () => { },\r\n    setRelationshipTypeId: () => { },\r\n    setIsRequired: () => { }\r\n}\r\nexport const LegalRepresentativeContext = createContext(InitialState);\r\n\r\nexport const LegalRepresentativeProvider = (props) => {\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [relationshipTypeId, setRelationshipTypeId] = useState('')\r\n\r\n    const [relationshipTypesId, setRelationshipTypesId] = useState([])\r\n\r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    const { _Json_LegalRepresentative, errorOnApi } = useContext(FormContext)\r\n\r\n    const legalRepresentatives = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry,\r\n        relationshipTypeId: relationshipTypeId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_LegalRepresentative({})\r\n        else if (name && taxpayerRegistry && relationshipTypeId) _Json_LegalRepresentative(legalRepresentatives)\r\n    }, [isRequired, name, taxpayerRegistry, relationshipTypeId])\r\n\r\n    useEffect(() => {\r\n            GetRelationsShipType()\r\n    }, [])\r\n\r\n    function GetRelationsShipType() {\r\n        axios.get(config._urlRelationshipType)\r\n            .then(res => { if (res.data) setRelationshipTypesId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <LegalRepresentativeContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, relationshipTypeId,\r\n                setname, settaxpayerRegistry, setRelationshipTypeId,\r\n                relationshipTypesId, setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </LegalRepresentativeContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\nimport { LegalRepresentativeContext } from '../../contexts/LegalRepresentativeContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function Work(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { age } = useContext(ClientInfoContext)\r\n    const { name, taxpayerRegistry, relationshipTypeId, relationshipTypesId,\r\n        setname, settaxpayerRegistry, setRelationshipTypeId, setIsRequired } = useContext(LegalRepresentativeContext)\r\n\r\n    let required = age > 0 && age < 18 ? true : false\r\n\r\n    const Labels = {\r\n        legalRepresentativeName: languagePT ? 'Nome ao representante legal do cliente' : '',\r\n        legalRepresentativeTaxpayerRegistry: languagePT ? 'CPF ao representante legal do cliente' : '',\r\n        relationshipTypeId: languagePT ? 'Tipo do relacionamento ao representante legal' : '',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : '',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    function ValidCPF(cpf) {\r\n        var Soma;\r\n        var Resto;\r\n        Soma = 0;\r\n        if (cpf === \"00000000000\") return false;\r\n        if (cpf === \"11111111111\") return false;\r\n        if (cpf === \"22222222222\") return false;\r\n        if (cpf === \"33333333333\") return false;\r\n        if (cpf === \"44444444444\") return false;\r\n        if (cpf === \"55555555555\") return false;\r\n        if (cpf === \"66666666666\") return false;\r\n        if (cpf === \"77777777777\") return false;\r\n        if (cpf === \"88888888888\") return false;\r\n\r\n        if (cpf.includes('.')) cpf = cpf.replace(/\\./g, '')\r\n        if (cpf.includes('-')) cpf = cpf.replace(/-/g, '')\r\n        // if (cpf.includes('-')) cpf = cpf.replace(/\\-/g, '')\r\n\r\n        for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n        Soma = 0;\r\n        for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n        return true;\r\n    }\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'legalRepresentativeName':\r\n                setname(value)\r\n                break;\r\n            case 'relationshipTypeId':\r\n                setRelationshipTypeId(value)\r\n                break;\r\n            case 'legalRepresentativeTaxpayerRegistry':\r\n                settaxpayerRegistry(value)\r\n                if (value.length < 11) setErrorCpf(false)\r\n                else if (value.length === 11) {\r\n                    if (ValidCPF(value)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (value.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderRelationshipTypes() {\r\n        return (\r\n            relationshipTypesId.map(reltid => {\r\n                return (\r\n                    <option key={reltid.relationshipTypeId} value={reltid.relationshipTypeId}>{reltid.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [])\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n        if (required) {\r\n            setname('')\r\n            setRelationshipTypeId('')\r\n            settaxpayerRegistry('')\r\n        }\r\n    }, [age])\r\n\r\n    return (\r\n        <div className={required ? \"divLegalRepresentative\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">Representates legais</span>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={name} type=\"text\" name=\"legalRepresentativeName\" id=\"legalRepresentativeName\" placeholder={Labels.legalRepresentativeName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <input value={taxpayerRegistry} required={required} type=\"text\" name=\"legalRepresentativeTaxpayerRegistry\" id=\"legalRepresentativeTaxpayerRegistry\" placeholder={Labels.legalRepresentativeTaxpayerRegistry}\r\n                        pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={required}\r\n                    name=\"relationshipTypeId\" id=\"relationshipTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.relationshipTypeId}</option>\r\n                    {RenderRelationshipTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport Switch from \"react-switch\";\r\n\r\nimport Spouse from '../Spouse'\r\nimport LegalRepresentative from '../LegalRepresentative'\r\n\r\nimport { LegalRepresentativeProvider } from '../../contexts/LegalRepresentativeContexts';\r\nimport { SpouseProvider } from '../../contexts/Spouse';\r\n\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function ClientInfo() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const {\r\n        // States\r\n        name, shortName, age, birthDate, fatherName, motherName, taxPayerRegistry, genderId, gendersIds, maritalStatusId, nationality,\r\n        countryBirthId, countriesBirthId, stateBirthId, stateBirthName, statesBirth, professionalOccupationId, professionalOccupationsId,\r\n        residenceInOtherCountryId, residencesInOtherCountryId, otherTaxResidencesCountryId, otherTaxResidenceCountryId,\r\n        educationLevelId, educationsLevelId, ppeOccupation, usPerson, isAssociatedPerson, isAdministratorInAnotherAccount,\r\n        maritalStatus, maritalAgreements, maritalAgreementId,\r\n        // Sets\r\n        setname, setshortName, setbirthDate, setAge, setfatherName, setmotherName, settaxPayerRegistry, setgenderId, setmaritalStatusId, setmaritalAgreementId,\r\n        setnationality, setcountryBirthId, setstateBirthId, setstateBirthName, setprofessionalOccupationId, setresidenceInOtherCountryId,\r\n        setotherTaxResidenceCountryId, seteducationLevelId, setppeOccupation, setusPerson, setisAssociatedPerson, setisAdministratorInAnotherAccount\r\n    } = useContext(ClientInfoContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações do cliente' : 'Customer information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        dateInvalid: languagePT ? 'Selecione uma data valida' : 'Only letters',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Only letters',\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        shortName: languagePT ? 'Apelido' : 'ShortName',\r\n        birthDate: languagePT ? 'Data de Nascimento' : 'BirthDate',\r\n        fatherName: languagePT ? 'Nome do Pai' : 'Father Name',\r\n        motherName: languagePT ? 'Nome da Mãe' : 'Mother Name',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        genderId: languagePT ? 'Genero' : 'Gender',\r\n        maritalStatusId: languagePT ? 'Estado civil' : 'Marital Status',\r\n        maritalAgreementId: languagePT ? 'Regime do estado civil' : 'Marital Agreement',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        countryBirthId: languagePT ? 'País de nascimento' : 'Country Birth',\r\n        stateBirthId: languagePT ? 'UF de nascimento do cliente' : 'State Birth',\r\n        stateBirthName: languagePT ? 'Nome UF de nascimento' : 'State Birth Name',\r\n        professionalOccupationId: languagePT ? 'Natureza da ocupação' : 'Professional Occupation',\r\n        residenceInOtherCountryId: languagePT ? 'País ao cliente que possui residencia em outros países' : 'Residence in Other Country',\r\n        otherTaxResidenceCountryId: languagePT ? 'País ao cliente que possui domicílio fiscal além do declarado' : 'Other Tax Residence Country',\r\n        residenceInOtherCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        otherTaxResidenceCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        educationLevelId: languagePT ? 'Escolaridade' : 'Education Level',\r\n        ppeOccupation: languagePT ? 'Cargo PPE do cliente, se o mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n        usPerson: languagePT ? 'Cliente considerado como USPerson' : 'Considered as USPerson',\r\n        isAssociatedPerson: languagePT ? 'Pessoa Vinculada' : 'Associated Person',\r\n        isAdministratorInAnotherAccount: languagePT ? 'Cliente realiza operações por conta de terceiros' : 'Customer performs operations on behalf of third parties',\r\n        urlCallback: languagePT ? '' : '',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador' : 'Authorizes the transmission of orders by proxy',\r\n    }\r\n\r\n    function ValidCPF(cpf) {\r\n        var Soma;\r\n        var Resto;\r\n        Soma = 0;\r\n        if (cpf === \"00000000000\") return false;\r\n        if (cpf === \"11111111111\") return false;\r\n        if (cpf === \"22222222222\") return false;\r\n        if (cpf === \"33333333333\") return false;\r\n        if (cpf === \"44444444444\") return false;\r\n        if (cpf === \"55555555555\") return false;\r\n        if (cpf === \"66666666666\") return false;\r\n        if (cpf === \"77777777777\") return false;\r\n        if (cpf === \"88888888888\") return false;\r\n\r\n        if (cpf.includes('.')) cpf = cpf.replace(/\\./g, '')\r\n        if (cpf.includes('-')) cpf = cpf.replace(/-/g, '')\r\n        // if (cpf.includes('-')) cpf = cpf.replace(/\\-/g, '')\r\n\r\n        for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n        Soma = 0;\r\n        for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n        return true;\r\n    }\r\n    function OnChangeFields(e) {\r\n        const { id, value, selectedIndex, options } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'shortName':\r\n                setshortName(value)\r\n                break;\r\n            case 'birthDate':\r\n                setAge('')\r\n\r\n                const d = new Date()\r\n                const ano_atual = d.getFullYear()\r\n                const mes_atual = d.getMonth() + 1\r\n                const dia_atual = d.getDate()\r\n\r\n                const ano_aniversario = parseInt(value.split(\"-\")[0])\r\n                const mes_aniversario = parseInt(value.split(\"-\")[1])\r\n                const dia_aniversario = parseInt(value.split(\"-\")[2])\r\n\r\n                if (ano_aniversario >= parseInt(Min.split(\"-\")[0])) {\r\n                    let Qtd_Anos = ano_atual - ano_aniversario\r\n                    if (mes_atual < mes_aniversario || mes_atual === mes_aniversario && dia_atual < dia_aniversario) {\r\n                        Qtd_Anos--\r\n                    }\r\n                    setAge(Qtd_Anos)\r\n                }\r\n                setbirthDate(value)\r\n                break;\r\n            case 'fatherName':\r\n                setfatherName(value)\r\n                break;\r\n            case 'motherName':\r\n                setmotherName(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                settaxPayerRegistry(value)\r\n                if (value.length < 11) setErrorCpf(false)\r\n                else if (value.length === 11) {\r\n                    if (ValidCPF(value)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (value.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'gender':\r\n                setgenderId(value)\r\n                break;\r\n            case 'maritalStatusId':\r\n                setmaritalStatusId(value)\r\n                if (value !== '2') setmaritalAgreementId('')\r\n                break;\r\n            case 'maritalAgreementId':\r\n                setmaritalAgreementId(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            case 'countryBirthId':\r\n                setcountryBirthId(value)\r\n                break;\r\n            case 'statesBirth':\r\n                const stateNameBirth = options[selectedIndex].getAttribute('statename')\r\n                // console.log(stateNameBirth)\r\n                setstateBirthId(value)\r\n                setstateBirthName(stateNameBirth)\r\n                break;\r\n            case 'professionalOccupationId':\r\n                setprofessionalOccupationId(value)\r\n                break;\r\n            case 'residenceInOtherCountryId':\r\n                setresidenceInOtherCountryId(value)\r\n                break;\r\n            case 'otherTaxResidenceCountryId':\r\n                setotherTaxResidenceCountryId(value)\r\n                break;\r\n            case 'educationLevel':\r\n                seteducationLevelId(value)\r\n                break;\r\n            case 'ppeOccupation':\r\n                setppeOccupation(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderGenders() {\r\n        return (\r\n            gendersIds.map(g => {\r\n                return (\r\n                    <option key={g.genderId} value={g.genderId}>{g.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalStatus() {\r\n        return (\r\n            maritalStatus.map(m => {\r\n                return (\r\n                    <option key={m.maritalStatusId} value={m.maritalStatusId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalAgreementId() {\r\n        return (\r\n            maritalAgreements.map(m => {\r\n                return (\r\n                    <option key={m.maritalAgreementId} value={m.maritalAgreementId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderCountriesBirth() {\r\n        return (\r\n            countriesBirthId.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            statesBirth.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderProfessionalOccupations() {\r\n        return (\r\n            professionalOccupationsId.map(pot => {\r\n                return (\r\n                    <option key={pot.professionalOccupationId} value={pot.professionalOccupationId}>{pot.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderResidencesInOtherCountry() {\r\n        return (\r\n            residencesInOtherCountryId.map(roc => {\r\n                return (\r\n                    <option key={roc.countryId} value={roc.countryId}>{roc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderOtherTaxResidencesCountry() {\r\n        return (\r\n            otherTaxResidencesCountryId.map(otrc => {\r\n                return (\r\n                    <option key={otrc.countryId} value={otrc.countryId}>{otrc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderEducationLevel() {\r\n        return (\r\n            educationsLevelId.map(ed => {\r\n                return (\r\n                    <option key={ed.educationLevelId} value={ed.educationLevelId}>{ed.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientInfo\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <input value={name} required type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={shortName} required type=\"text\" name=\"shortName\" id=\"shortName\" placeholder={Labels.shortName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.birthDate}</p>\r\n            <div className=\"d-flex\">\r\n                <input value={birthDate} required type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                    min={Min} max={Max} title={Labels.onlyLettersTitle} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <LegalRepresentativeProvider>\r\n                <LegalRepresentative />\r\n            </LegalRepresentativeProvider>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={fatherName} required type=\"text\" name=\"fatherName\" id=\"fatherName\" placeholder={Labels.fatherName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={motherName} required type=\"text\" name=\"motherName\" id=\"motherName\" placeholder={Labels.motherName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <input value={taxPayerRegistry} required type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\" placeholder={Labels.taxPayerRegistry}\r\n                        pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeFields(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={genderId} required className=\"clSelect\" name=\"gender\" id=\"gender\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.genderId}</option>\r\n                    {RenderGenders()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={maritalStatusId} required className=\"clSelect\" name=\"maritalStatusId\" id=\"maritalStatusId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.maritalStatusId}</option>\r\n                    {RenderMaritalStatus()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <SpouseProvider>\r\n                <Spouse hide={maritalStatusId === '2' ? false : true} required={maritalStatusId === '2' ? true : false}>\r\n\r\n                    <div className={maritalStatusId === '2' ? \"d-flex\" : \"d-none\"}>\r\n                        <select value={maritalAgreementId} required={maritalStatusId === '2'} className=\"clSelect\" name=\"maritalAgreementId\" id=\"maritalAgreementId\" onChange={e => OnChangeFields(e)}>\r\n                            <option defaultValue value=\"\">{Labels.maritalAgreementId}</option>\r\n                            {RenderMaritalAgreementId()}\r\n                        </select>\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </Spouse>\r\n            </SpouseProvider>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={nationality} required type=\"text\" name=\"nationality\" id=\"nationality\" placeholder={Labels.nationality}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required className=\"clSelect\" name=\"countryBirthId\" id=\"countryBirthId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.countryBirthId}</option>\r\n                    {RenderCountriesBirth()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={stateBirthId} required className=\"clSelect\" name=\"statesBirth\" id=\"statesBirth\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.stateBirthName}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={professionalOccupationId} required className=\"clSelect\" name=\"professionalOccupationId\" id=\"professionalOccupationId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.professionalOccupationId}</option>\r\n                    {RenderProfessionalOccupations()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={educationLevelId} required className=\"clSelect\" name=\"educationLevel\" id=\"educationLevel\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.educationLevelId}</option>\r\n                    {RenderEducationLevel()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.residenceInOtherCountryId}</p>\r\n            <select value={residenceInOtherCountryId} className=\"clSelect\" name=\"residenceInOtherCountryId\" id=\"residenceInOtherCountryId\" onChange={e => OnChangeFields(e)}>\r\n                <option defaultValue value=\"\">{Labels.residenceInOtherCountryIdSelect}</option>\r\n                {RenderResidencesInOtherCountry()}\r\n            </select>\r\n\r\n            <p className=\"inputDescription\">{Labels.otherTaxResidenceCountryId}</p>\r\n            <select value={otherTaxResidenceCountryId} className=\"clSelect\" name=\"otherTaxResidenceCountryId\" id=\"otherTaxResidenceCountryId\" onChange={e => OnChangeFields(e)}>\r\n                <option defaultValue value=\"\">{Labels.otherTaxResidenceCountryIdSelect}</option>\r\n                {RenderOtherTaxResidencesCountry()}\r\n            </select>\r\n\r\n\r\n\r\n            <div>\r\n                <p className=\"inputDescription\">{Labels.ppeOccupation}</p>\r\n                <input value={ppeOccupation} type=\"text\" name=\"ppeOccupation\" id=\"ppeOccupation\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex df-jcspb d-flexdc\">\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.usPerson} ?</p>\r\n                    <Switch\r\n                        onColor=\"#4B4B4B\"\r\n                        offColor=\"#bdbbbb\"\r\n                        onHandleColor=\"#bdbbbb\"\r\n                        offHandleColor=\"#4B4B4B\"\r\n                        checked={usPerson}\r\n                        onChange={cheked => setusPerson(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isAssociatedPerson} ?</p>\r\n                    <Switch\r\n                        onColor=\"#4B4B4B\"\r\n                        offColor=\"#bdbbbb\"\r\n                        onHandleColor=\"#bdbbbb\"\r\n                        offHandleColor=\"#4B4B4B\"\r\n                        checked={isAssociatedPerson}\r\n                        onChange={cheked => setisAssociatedPerson(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isAdministratorInAnotherAccount} ?</p>\r\n                    <Switch\r\n                        onColor=\"#4B4B4B\"\r\n                        offColor=\"#bdbbbb\"\r\n                        onHandleColor=\"#bdbbbb\"\r\n                        offHandleColor=\"#4B4B4B\"\r\n                        checked={isAdministratorInAnotherAccount}\r\n                        onChange={cheked => setisAdministratorInAnotherAccount(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { createContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    questions:[],\r\n    answers:[]\r\n}\r\n\r\nexport const FormSuityContext = createContext(InitialState);\r\n\r\nexport const FormSuityProvider = (props) => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState([])\r\n\r\n    useEffect(() => {\r\n        GetQuestions()\r\n        GetAnswers()\r\n    }, [])\r\n\r\n    function GetQuestions() {\r\n        axios.get(config._urlQuestions)\r\n            .then(res => { if (res.data) setQuestions(res.data) })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    function GetAnswers() {\r\n        axios.get(config._urlAnswers)\r\n            .then(res => { if (res.data) setAnswers(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <FormSuityContext.Provider\r\n            value={{\r\n                questions, answers\r\n            }}\r\n        >\r\n            {props.children}\r\n        </FormSuityContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { FormSuityContext } from \"../../contexts/FormSuity\";\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT, _Json_FormSuity } = useContext(FormContext)\r\n    const { answers, questions } = useContext(FormSuityContext)\r\n\r\n    const Labels = {\r\n        answers: languagePT ? 'Selecionar uma resposta para a pergunta' : '',\r\n    }\r\n\r\n    let questionsAnswers = []\r\n\r\n    function OnChangeField(e) {\r\n        const { id, value } = e.target\r\n        const req = {\r\n            questionId: parseInt(id),\r\n            answerId: parseInt(value)\r\n        }\r\n        questionsAnswers = questionsAnswers.filter(q => q.questionId !== parseInt(id))\r\n        questionsAnswers.push(req)\r\n        _Json_FormSuity(questionsAnswers)\r\n    }\r\n\r\n    function RenderQuestions() {\r\n        return (\r\n            questions.map(q => {\r\n                return (\r\n                    <div className=\"div-question-answer\" key={q.suityQuestionId} id={q.suityQuestionId}>\r\n                        <span className=\"inputDescriptionTitle\">{q.question}</span>\r\n                        <div className=\"d-flex\">\r\n                            <select required name={q.suityQuestionId} id={q.suityQuestionId} onChange={e => OnChangeField(e)}>\r\n                                <option defaultValue value=\"\">{Labels.answers}</option>\r\n                                {RenderAnswers(q.suityQuestionId)}\r\n                            </select>\r\n                            <p className=\"required\">*</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    function RenderAnswers(QuestionId) {\r\n        const answersFiltered = answers.filter(a => a.suityQuestionId === QuestionId)\r\n        return (\r\n            answersFiltered.map(a => {\r\n                return (\r\n                    <option key={a.suityAnswerId} value={a.suityAnswerId} >{a.answer}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (RenderQuestions())\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nimport Switch from \"react-switch\";\r\n\r\n\r\nexport default function Attorney() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Dados do procurador' : 'Attorney information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador ?' : 'Do you authorize the transmission of orders by a Attorney?',\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        birthDate: languagePT ? 'Nascimento' : 'BirthDate',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        actionDescription: languagePT ? 'Descrição dos poderes' : 'Description of powers',\r\n        isPEP: languagePT ? 'O mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n    }\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode,\r\n        isAcceptedOrderAttorney, setisAcceptedOrderAttorney, name, taxpayerRegistry,\r\n        birthDate, isPEP, setisPEP, actionDescription,setactionDescription, setname, settaxpayerRegistry, setbirthDate } = useContext(AttorneyContext)\r\n\r\n    function ValidCPF(cpf) {\r\n        var Soma;\r\n        var Resto;\r\n        Soma = 0;\r\n        if (cpf === \"00000000000\") return false;\r\n        if (cpf === \"11111111111\") return false;\r\n        if (cpf === \"22222222222\") return false;\r\n        if (cpf === \"33333333333\") return false;\r\n        if (cpf === \"44444444444\") return false;\r\n        if (cpf === \"55555555555\") return false;\r\n        if (cpf === \"66666666666\") return false;\r\n        if (cpf === \"77777777777\") return false;\r\n        if (cpf === \"88888888888\") return false;\r\n\r\n        if (cpf.includes('.')) cpf = cpf.replace(/\\./g, '')\r\n        if (cpf.includes('-')) cpf = cpf.replace(/-/g, '')\r\n        // if (cpf.includes('-')) cpf = cpf.replace(/\\-/g, '')\r\n\r\n        for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n        Soma = 0;\r\n        for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n        return true;\r\n    }\r\n    function OnChangeFields(e) {\r\n        const { id, value, selectedIndex, options } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'birthDate':\r\n                const birthDate = `${value}T00:00:00`\r\n                console.log(birthDate)\r\n                setbirthDate(birthDate)\r\n                break;\r\n            case 'taxpayerRegistry':\r\n                settaxpayerRegistry(value)\r\n                if (value.length < 11) setErrorCpf(false)\r\n                else if (value.length === 11) {\r\n                    if (ValidCPF(value)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (value.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'actionDescription':\r\n                setactionDescription(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Attorney\">\r\n\r\n            <div className=\"d-flex d-flexdc df-alc\">\r\n                <p className=\"inputDescription\">{Labels.isAcceptedOrderAttorney} ?</p>\r\n                <Switch\r\n                    onColor=\"#4B4B4B\"\r\n                    offColor=\"#bdbbbb\"\r\n                    onHandleColor=\"#bdbbbb\"\r\n                    offHandleColor=\"#4B4B4B\"\r\n                    checked={isAcceptedOrderAttorney}\r\n                    onChange={cheked => setisAcceptedOrderAttorney(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={20}\r\n                    width={50}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n            </div>\r\n\r\n            <div className={isAcceptedOrderAttorney ? \"d-flex d-flexdc\" : \"d-none\"}>\r\n                <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n\r\n                <div className=\"d-flex\">\r\n                    <input value={name} required={isAcceptedOrderAttorney} type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                        pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex\">\r\n                        <input value={taxpayerRegistry} required={isAcceptedOrderAttorney} type=\"text\" name=\"taxpayerRegistry\" id=\"taxpayerRegistry\" placeholder={Labels.taxPayerRegistry}\r\n                            pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeFields(e)} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                    <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <input required={isAcceptedOrderAttorney} type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                        min={Min} max={Max}/>\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isPEP} ?</p>\r\n                    <Switch\r\n                        onColor=\"#4B4B4B\"\r\n                        offColor=\"#bdbbbb\"\r\n                        onHandleColor=\"#bdbbbb\"\r\n                        offHandleColor=\"#4B4B4B\"\r\n                        checked={isPEP}\r\n                        onChange={cheked => setisPEP(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex\">\r\n                        <input required={isAcceptedOrderAttorney} value={actionDescription} type=\"text\" name=\"actionDescription\" id=\"actionDescription\"\r\n                            pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} placeholder={Labels.actionDescription} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"d-flex\">\r\n                    <Countries onSelectCountry={onSelectCountry} ClientAdress={false} Attorney={true}/>\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <States onSelectState={onSelectState} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <Cities onSelectCity={onSelectCity} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={false} Attorney={true}/>\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <AdressUtils ClientAdress={false} Attorney={true}>\r\n                    <div className=\"d-flex\">\r\n                        <CEP onCollectCep={onCollectCep} ClientAdress={false} Attorney={true}/>\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </AdressUtils>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { EmailContext } from '../../contexts/EmailContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function EmailType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { emailTypes, setType, setMail } = useContext(EmailContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Tipo de Email' : 'Select Email Type',\r\n        Email: languagePT ? 'Formato aceitado: example@domain.com' : 'Format accepted: example@domain.com'\r\n    }\r\n\r\n    function SelectTypeEmail(e) {\r\n        const { value } = e.target\r\n        setType(value)\r\n    }\r\n    function SetMail(e){\r\n        const { value } = e.target\r\n        setMail(value)\r\n    }\r\n    function RenderEmailType() {\r\n        return (\r\n            emailTypes.map(em => {\r\n                return (\r\n                    <option key={em.emailTypeId} value={em.emailTypeId}>{em.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divEmailTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">E-mail</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"emailType\" id=\"emailType\" onChange={e => SelectTypeEmail(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderEmailType()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required type=\"email\" placeholder=\"example@domain.com\"\r\n                    pattern=\"^[\\w._\\-]+@\\w+.com(.br)?\" title={Labels.Email} onChange={e => SetMail(e)}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WealthsTypeContext } from '../../contexts/Wealths';\r\n\r\nimport { FaTrash, FaPlusSquare } from \"react-icons/fa\";\r\nimport './index.css'\r\n\r\nexport default function Wealths(props) {\r\n    const { languagePT, _Json_Wealths } = useContext(FormContext)\r\n\r\n    const { typeWealthId, value, description, settypeWealthId, setvalue, setdescription, typesWealthId } = useContext(WealthsTypeContext)\r\n    const { professionalOccupationId } = useContext(ClientInfoContext)\r\n    const [error, setError] = useState(false)\r\n\r\n    const [clientWealths, setClientWealths] = useState([])\r\n\r\n    const Labels = {\r\n        SelectWealthTypeId: languagePT ? 'Selecione tipo de bens/finanças para cadastro' : 'Select type of wealth/finances to register',\r\n        inputDescriptionTitle: languagePT ? 'Informações de bens/finanças para cadastro' : 'Wealths/Finances information for registration',\r\n        description: languagePT ? 'Descrição do bem/finança' : 'Wealths/Finances Description',\r\n        value: languagePT ? 'Valor do bem/finança' : 'Wealths/Finances Value',\r\n        addButtonDescription: languagePT ? 'CLIQUE PARA ADICIONAR O BEM/FINANÇA' : 'CLICK TO ADD A WEALTH/FINANCE'\r\n    }\r\n\r\n    const required = professionalOccupationId === \"8\" || professionalOccupationId === \"9\" ||\r\n        professionalOccupationId === \"\" ? false : true\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'wealthTypeId':\r\n                settypeWealthId(value)\r\n                break;\r\n            case 'wealthDescription':\r\n                setdescription(value)\r\n                break;\r\n            case 'wealthValue':\r\n                setvalue(value)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderWealthTypes() {\r\n        return (\r\n            typesWealthId.map(tw => {\r\n                return (\r\n                    <option key={tw.wealthTypeId} value={tw.wealthTypeId}>{tw.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderClientWealths() {\r\n        return (\r\n            clientWealths.map((cw, index) => {\r\n                return (\r\n                    <div className=\"wealth\" key={`${cw.description}${index}`}>\r\n                        <div className=\"d-flex d-flexdc\">\r\n                            <span className=\"inputDescription\">Descrição: {cw.description}</span>\r\n                            <span className=\"inputDescription\">Valor: {cw.value}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeClientWealth(index)}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addClientWealth() {\r\n        if (!typeWealthId || !description || !value) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            let wealth = {\r\n                typeWealthId: parseInt(typeWealthId),\r\n                value: parseInt(value),\r\n                description: description\r\n            }\r\n            setClientWealths([...clientWealths, wealth])\r\n            setdescription('')\r\n            setvalue('')\r\n        }\r\n    }\r\n    function removeClientWealth(i) {\r\n        setClientWealths(clientWealths.filter((c, index) => index !== i))\r\n    }\r\n\r\n    useEffect(() => {\r\n        _Json_Wealths(clientWealths)\r\n    }, [clientWealths])\r\n\r\n    return (\r\n        <div className={required ? \"divWealthTypes\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">{Labels.inputDescriptionTitle}</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={required && clientWealths.length === 0} name=\"wealthTypeId\" id=\"wealthTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.SelectWealthTypeId}</option>\r\n                    {RenderWealthTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={required && clientWealths.length === 0} value={description} type=\"text\" name=\"wealthDescription\" id=\"wealthDescription\" placeholder={Labels.description}\r\n                    onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={required && clientWealths.length === 0} value={value} type=\"text\" name=\"wealthValue\" id=\"wealthValue\" placeholder={Labels.value}\r\n                    onChange={e => OnChangeField(e)} pattern=\"^[0-9\\.\\,]+$\" />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"wealths\">\r\n            {RenderClientWealths()}\r\n            </div>\r\n            <div className=\"addButton\">\r\n                <button type=\"button\" onClick={() => addClientWealth()}>\r\n                    {Labels.addButtonDescription}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>Selecione um item da lista e Preencha os campos</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useContext, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { PhonesContext } from \"../../contexts/PhonesContexts\";\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function PhoneType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { phoneTypes, setPhoneTypeId, phoneTypeId, setCountryCode,setNumber,setStateCode } = useContext(PhonesContext)\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Número de Telefone' : 'Phone number',\r\n        Select: languagePT ? 'Selecionar Tipo de Telefone' : 'Select Phone Type',\r\n        SelectError: languagePT ? 'Erro ao consultar Tipos de Telefone' : 'Error querying Phone Type',\r\n        Celnumber: languagePT ? 'Formato exigido: +DDI (DDD) 9XXXX-XXXX' : '',\r\n        Resnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : '',\r\n        Comnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : ''\r\n    }\r\n\r\n    function SelectTypePhone(e) {\r\n        const { value } = e.target\r\n        setPhoneTypeId(value)\r\n    }\r\n\r\n    function SetPhoneNumber(e){\r\n        const { value } = e.target\r\n        if(value.length >= 18){\r\n            const CountryCode = value.split(\" \")[0].replace(\"+\",\"\")\r\n            const StateCode = value.split(\" \")[1].replace(\"(\",\"\").replace(\")\",\"\")\r\n            const _Number = value.split(\" \")[2].replace(\"-\",\"\")\r\n            setCountryCode(CountryCode)\r\n            setStateCode(StateCode)\r\n            setNumber(_Number)\r\n        }\r\n    }\r\n\r\n    function RenderPhoneType() {\r\n        return (\r\n            phoneTypes.map(ph => {\r\n                return (\r\n                    <option key={ph.phoneTypeId} value={ph.phoneTypeId}>{ph.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divPhoneTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"phoneType\" id=\"phoneType\" onChange={e => SelectTypePhone(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderPhoneType()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <InputMask name=\"ResidencialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '1'} maskChar=\"\" title={Labels.Resnumber}\r\n            className={phoneTypeId === '1' ? '' : 'd-none'} mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\"/>\r\n\r\n            <InputMask name=\"ComercialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '2'} maskChar=\"\" title={Labels.Comnumber}\r\n            className={phoneTypeId === '2' ? '' : 'd-none'} mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\"/>\r\n\r\n            <InputMask name=\"CelNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '3'} maskChar=\"\" title={Labels.Celnumber}\r\n            className={phoneTypeId === '3' ? '' : 'd-none'} mask=\"+99 (99) 99999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{5}[-]\\d{4}\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WorkContext } from '../../contexts/Work';\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function Work(props) {\r\n    const [errorCNPJ, setErrorCNPJ] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setinstitutionName, setprofession, setoccupation, setcorporateTaxpayerRegistry,\r\n        institutionName, profession, occupation, corporateTaxpayerRegistry, setIsRequired } = useContext(WorkContext)\r\n    const {professionalOccupationId} = useContext(ClientInfoContext)\r\n\r\n    const required = professionalOccupationId === \"3\" || professionalOccupationId === \"6\" || \r\n    professionalOccupationId === \"8\" || professionalOccupationId === \"9\" || professionalOccupationId === \"\" ? false : true\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [required])\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações Instituição de Trabalho' : 'Work Institution Information',\r\n        institutionName: languagePT ? 'Nome da instituição' : 'Institution Name',\r\n        onlyLettersAndNumbersTitle: languagePT ? 'Somente letras e numeros' : 'Only letters and numbers',\r\n        profession: languagePT ? 'Profissão' : 'Profession',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        corporateTaxpayerRegistry: languagePT ? 'CNPJ da instituição de trabalho' : 'CNPJ of the work institution',\r\n        cnpjTitle: languagePT ? 'Digite um cnpj valido, sem caracteres especiais (xxxxxxxxxxxxxx)' : 'Enter a valid cnpj, without special characters (xxxxxxxxxxxxxx)',\r\n    }\r\n    function validarCNPJ(cnpj) {\r\n        cnpj = cnpj.replace(/[^\\d]+/g, '');\r\n        if (cnpj == '') return false;\r\n        if (cnpj.length != 14)\r\n            return false;\r\n        // Elimina CNPJs invalidos conhecidos\r\n        if (cnpj == \"00000000000000\" ||\r\n            cnpj == \"11111111111111\" ||\r\n            cnpj == \"22222222222222\" ||\r\n            cnpj == \"33333333333333\" ||\r\n            cnpj == \"44444444444444\" ||\r\n            cnpj == \"55555555555555\" ||\r\n            cnpj == \"66666666666666\" ||\r\n            cnpj == \"77777777777777\" ||\r\n            cnpj == \"88888888888888\" ||\r\n            cnpj == \"99999999999999\")\r\n            return false;\r\n\r\n        // Valida DVs\r\n        let tamanho = cnpj.length - 2\r\n        let numeros = cnpj.substring(0, tamanho);\r\n        let digitos = cnpj.substring(tamanho);\r\n        let soma = 0;\r\n        let pos = tamanho - 7;\r\n        for (let i = tamanho; i >= 1; i--) {\r\n            soma += numeros.charAt(tamanho - i) * pos--;\r\n            if (pos < 2)\r\n                pos = 9;\r\n        }\r\n        let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n        if (resultado != digitos.charAt(0))\r\n            return false;\r\n\r\n        tamanho = tamanho + 1;\r\n        numeros = cnpj.substring(0, tamanho);\r\n        soma = 0;\r\n        pos = tamanho - 7;\r\n        for (let i = tamanho; i >= 1; i--) {\r\n            soma += numeros.charAt(tamanho - i) * pos--;\r\n            if (pos < 2)\r\n                pos = 9;\r\n        }\r\n        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n        if (resultado != digitos.charAt(1))\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'institutionName':\r\n                setinstitutionName(value)\r\n                break;\r\n            case 'profession':\r\n                setprofession(value)\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'corporateTaxpayerRegistry':\r\n                setcorporateTaxpayerRegistry(value)\r\n                if (value.length < 14) setErrorCNPJ(false)\r\n                else {\r\n                    if (validarCNPJ(value)) {\r\n                        setErrorCNPJ(false)\r\n                        setcorporateTaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        setcorporateTaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCNPJ(true)\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={required ? \"divWork\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={institutionName} type=\"text\" name=\"institutionName\" id=\"institutionName\" placeholder={Labels.institutionName}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={profession} type=\"text\" name=\"profession\" id=\"profession\" placeholder={Labels.profession}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={occupation} type=\"text\" name=\"occupation\" id=\"occupation\" placeholder={Labels.occupation}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <input required={required} value={corporateTaxpayerRegistry} type=\"text\" name=\"corporateTaxpayerRegistry\" id=\"corporateTaxpayerRegistry\" placeholder={Labels.corporateTaxpayerRegistry}\r\n                        pattern=\"([\\d]{14})\" title={Labels.cnpjTitle} onChange={e => OnChangeField(e)} maxLength=\"14\" />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCNPJ ? 'errorCNPJ' : 'd-none'}>{Labels.cnpjTitle}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport { IdentificationTypeProvider } from './contexts/IdentificationTypeContexts';\r\nimport { FormContext } from './contexts/FormContexts';\r\nimport { AttorneyProvider } from './contexts/AttorneyContexts';\r\nimport { AdressesProvider } from './contexts/AdressesContexts'\r\nimport { BankAccountsProvider } from './contexts/BankContexts'\r\nimport { PhonesProvider } from './contexts/PhonesContexts';\r\nimport { EmailProvider } from './contexts/EmailContexts';\r\nimport { WealthsTypeProvider } from './contexts/Wealths';\r\nimport { WorkProvider } from './contexts/Work';\r\n\r\n\r\n\r\nimport IdentificationType from './components/IdentificationType';\r\nimport ClientAdress from './components/ClientAdress'\r\nimport BankAccounts from './components/BankAccounts';\r\nimport PPERelateds from './components/PPE Related';\r\nimport ClientInfo from './components/ClientInfo';\r\nimport FormSuity from './components/FormSuity';\r\nimport Attorney from './components/Attorney';\r\nimport EmailType from './components/Email';\r\nimport Wealths from './components/Wealths';\r\nimport Phones from './components/Phones';\r\nimport Work from './components/Work';\r\n\r\nimport './Global.css';\r\nimport { FormSuityProvider } from './contexts/FormSuity';\r\nimport { PPERelatedsProvider } from './contexts/PPERelatedsContext';\r\n\r\nfunction App() {\r\n    const { saveClient } = useContext(FormContext)\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault()\r\n        saveClient()\r\n    }\r\n    return (\r\n        <form onSubmit={e => onSubmit(e)} action=\"\" method=\"\" autoComplete=\"off\">\r\n\r\n            <div className=\"div-infos\">\r\n\r\n                <div className=\"div-client\">\r\n                    <ClientInfo />\r\n                    <div className=\"div-client-1\">\r\n                        <PhonesProvider>\r\n                            <Phones />\r\n                        </PhonesProvider>\r\n\r\n                        <IdentificationTypeProvider>\r\n                            <IdentificationType />\r\n                        </IdentificationTypeProvider>\r\n\r\n                        <EmailProvider>\r\n                            <EmailType />\r\n                        </EmailProvider>\r\n\r\n                        <AdressesProvider>\r\n                            <ClientAdress />\r\n                        </AdressesProvider>\r\n\r\n                        <PPERelatedsProvider>\r\n                            <PPERelateds />\r\n                        </PPERelatedsProvider>\r\n\r\n                        <WorkProvider>\r\n                            <Work />\r\n                        </WorkProvider>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"div-wealthsType\">\r\n                    <BankAccountsProvider>\r\n                        <BankAccounts />\r\n                    </BankAccountsProvider>\r\n\r\n                    <WealthsTypeProvider>\r\n                        <Wealths />\r\n                    </WealthsTypeProvider>\r\n                </div>\r\n\r\n\r\n                <div className=\"div-attorney\">\r\n                    <AttorneyProvider>\r\n                        <Attorney />\r\n                    </AttorneyProvider>\r\n                </div>\r\n\r\n                <div className=\"div-formsuity\">\r\n                    <FormSuityProvider>\r\n                        <FormSuity />\r\n                    </FormSuityProvider>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"div-footer\">\r\n                <button type=\"submit\">CADASTRAR</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { FormProvider } from './contexts/FormContexts';\nimport { ClientInfoProvider } from './contexts/ClientInfoContexts';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Form from './form'\n\nimport './Global.css';\n\nfunction App() {\n  return (\n    <FormProvider>\n      <ClientInfoProvider>\n        <ToastContainer\n          position=\"top-right\" autoClose={2500}\n          hideProgressBar={false} newestOnTop={false}\n          closeOnClick rtl={false} pauseOnHover={false}\n          pauseOnVisibilityChange draggable\n          pauseOnFocusLoss={false}\n        />\n        <Form />\n      </ClientInfoProvider>\n    </FormProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}