{"version":3,"sources":["config.js","components/Toastify/index.jsx","components/Toastify/Toastify.js","contexts/FormContexts.jsx","contexts/ClientInfoContexts.jsx","contexts/IdentificationTypeContexts.jsx","contexts/AttorneyContexts.jsx","contexts/AdressesContexts.jsx","contexts/BankContexts.jsx","contexts/PhonesContexts.jsx","contexts/EmailContexts.jsx","contexts/Wealths.jsx","contexts/Work.jsx","components/IdentificationType/index.jsx","components/Countries/index.jsx","components/State/index.jsx","components/City/index.jsx","components/AdressType/index.jsx","components/Cep/index.jsx","components/AdressUtils/index.jsx","components/ClientAdress/index.jsx","components/BankAccounts/index.jsx","contexts/PPERelatedsContext.jsx","utils.js","components/PPE Related/index.jsx","contexts/Spouse.jsx","components/Spouse/index.jsx","contexts/LegalRepresentativeContexts.jsx","components/LegalRepresentative/index.jsx","components/ClientInfo/index.jsx","contexts/FormSuity.jsx","components/FormSuity/index.jsx","components/Attorney/index.jsx","components/Email/index.jsx","components/Wealths/index.jsx","components/Phones/index.jsx","components/Work/index.jsx","form.js","App.js","index.js"],"names":["proxy","config","_urlCountries","_urlStates","_urlCities","_urlAdressType","_urlPhoneType","_urlGenders","_urlMaritalStatus","_urlMaritalAgreement","_urlProfessionalOccupation","_urlEducation","_urlEmailType","_urlIdentificationType","_urlWealthType","_urlRelationshipType","_urlBankAccountType","_urlBankGetByCode","_urlBankGetById","_urlBank","_urlQuestions","_urlAnswers","_urlSaveClient","_urlGetPluralAccount","Toastify","className","this","props","description","Component","Error","id","text","autoClose","draggable","icon","toast","isActive","error","toastId","Warn","warn","InitialState","languagePT","Clicked","_Json_ClientAddresses","obj","_Json_ClientInfo","_Json_AttorneyInfo","_Json_PhoneInfo","_Json_EmailInfo","_Json_ClientIdentification","_Json_Spouse","_Json_Work","_Json_Wealths","_Json_FormSuity","_Json_BankAccounts","_Json_LegalRepresentative","_Json_PPERelateds","saveClient","reqJSON","clientId","name","shortName","taxPayerRegistry","birthDate","fatherName","genderId","maritalStatusId","maritalAgreementId","motherName","nationality","countryBirthId","stateBirthId","stateBirthName","professionalOccupationId","residenceInOtherCountryId","otherTaxResidenceCountryId","educationLevelId","ppeOccupation","usPerson","isAssociatedPerson","urlCallback","isAcceptedOrderAttorney","isAdministratorInAnotherAccount","attorneys","spouse","document","work","phones","emails","bankAccounts","wealths","addresses","ppeRelateds","formSuity","legalRepresentatives","authentication","login","password","FormContext","createContext","FormProvider","useState","setLanguagePT","setClicked","useEffect","window","location","pathname","split","filter","i","length","Provider","value","required","console","log","JSON","stringify","axios","post","headers","then","res","data","clientCode","interval","setInterval","get","clearInterval","SuccessMessage","success","Success","catch","err","response","innerMessage","request","message","CheckClient","code","children","String","setname","setshortName","settaxPayerRegistry","setbirthDate","age","setAge","setfatherName","setgenderId","gendersIds","setmaritalStatusId","maritalStatus","maritalAgreements","setmotherName","getCountriesBirthId","setppeOccupation","setusPerson","setisAssociatedPerson","setisAdministratorInAnotherAccount","ClientInfoContext","ClientInfoProvider","useContext","setnationality","setgendersIds","setMaritalStatus","setmaritalAgreementId","setmaritalAgreements","setcountryBirthId","countriesBirthId","setcountriesBirthId","setstateBirthId","setstateBirthName","statesBirth","setstatesBirth","setprofessionalOccupationId","professionalOccupationsId","setprofessionalOccupationsId","setresidenceInOtherCountryId","residencesInOtherCountryId","setresidencesInOtherCountryId","setotherTaxResidenceCountryId","otherTaxResidencesCountryId","setotherTaxResidencesCountryId","seteducationLevelId","educationsLevelId","seteducationsLevelId","replace","parseInt","identificationTypeId","number","emissionInssuer","emission","stateId","identificationTypes","setidentificationTypeId","setnumber","setemissionInssuer","setemission","setstateId","IdentificationTypeContext","IdentificationTypeProvider","setIdentificationTypes","states","setStates","cpf","taxpayerRegistry","settaxpayerRegistry","isPEP","setisPEP","actionDescription","setactionDescription","countryId","setCountryId","setStateId","stateName","setStateName","cityId","setCityId","cityName","setCityName","neighborhood","setneighborhood","setdescription","zipCode","setZipCode","complement","setcomplement","typeAddressId","setTypeAddressId","AttorneyContext","AttorneyProvider","setisAcceptedOrderAttorney","address","setNeighborhood","setDescription","zipcode","setNumber","setComplement","AdressesContext","AdressesProvider","AdressJson","bankId","agency","account","digit","typeAccountId","bankAccountTypes","banks","setbankId","setagency","setaccount","setdigit","settypeAccountId","BankAccountsContext","BankAccountsProvider","setBankAccountTypes","setBanks","newBanks","map","bank","push","GetBanks","phoneTypes","phoneTypeId","countryCode","stateCode","setPhoneTypeId","setCountryCode","setStateCode","PhonesContext","PhonesProvider","setPhoneTypes","type","mail","isCorrespondency","emailTypes","setMail","setType","setIsCorrespondency","EmailContext","EmailProvider","setEmailTypes","typeWealthId","typesWealthId","settypeWealthId","setvalue","WealthsTypeContext","WealthsTypeProvider","settypesWealthId","institutionName","occupation","profession","corporateTaxpayerRegistry","setinstitutionName","setoccupation","setprofession","setcorporateTaxpayerRegistry","setIsRequired","WorkContext","WorkProvider","isRequired","IdentificationType","Labels","componentTitle","Select","States","documentNumber","Max","Date","toISOString","Min","OnChangeField","e","target","onChange","defaultValue","idt","identifycationTypeId","placeholder","s","statename","min","max","Countries","countries","setCountries","Atctx","Attorney","ClientAdress","onSelectCountry","c","Adctx","SelectError","getStates","_countryId","onSelectState","Cities","cities","setCities","getCities","_stateId","onSelectCity","cityname","AdressType","adressType","setAdressType","onSelectTypeAddress","adt","addressTypeId","CEP","setError","CollectCep","maxLength","Cep","onCollectCep","test","ValidateCEP","AdressUtils","setInput","Adresses","selectedIndex","options","getAttribute","cep","BankAccounts","clientBankAccounts","setclientBankAccounts","selectItems","SelecttypeAccountId","SelectbankId","addAccount","bat","bankAccountTypeId","SelectSearch","search","filterOptions","fuse","Fuse","keys","threshold","array","item","emptyMessage","printOptions","closeOnSelect","index","find","b","toString","onClick","addBankAccount","PPERelatedsContext","PPERelatedsProvider","reqJson","ValidCPF","Soma","Resto","substring","PPERelateds","errorCpf","setErrorCpf","PPERelated","setPPERelated","cpfTitle","onlyLettersTitle","onColor","onHandleColor","offColor","offHandleColor","checked","cheked","handleDiameter","boxShadow","activeBoxShadow","height","width","pattern","title","mask","onlyLettersAndNumbersTitle","setHide","SpouseContext","SpouseProvider","spouseId","hide","Spouse","emissionDoc","relationshipTypeId","relationshipTypesId","setRelationshipTypeId","LegalRepresentativeContext","LegalRepresentativeProvider","setRelationshipTypesId","errorOnApi","Work","legalRepresentativeName","legalRepresentativeTaxpayerRegistry","includes","reltid","ClientInfo","dateInvalid","residenceInOtherCountryIdSelect","otherTaxResidenceCountryIdSelect","OnChangeFields","d","ano_atual","getFullYear","mes_atual","getMonth","dia_atual","getDate","ano_aniversario","mes_aniversario","dia_aniversario","Qtd_Anos","stateNameBirth","g","m","pot","ed","roc","otrc","questions","answers","FormSuityContext","FormSuityProvider","setQuestions","setAnswers","questionsAnswers","q","suityQuestionId","question","req","questionId","answerId","QuestionId","a","suityAnswerId","answer","EmailType","Email","SelectTypeEmail","em","emailTypeId","SetMail","Wealths","clientWealths","setClientWealths","SelectWealthTypeId","inputDescriptionTitle","addButtonDescription","valor","tw","wealthTypeId","cw","parseFloat","wealth","addClientWealth","PhoneType","Celnumber","Resnumber","Comnumber","SetPhoneNumber","CountryCode","StateCode","_Number","SelectTypePhone","ph","maskChar","errorCNPJ","setErrorCNPJ","cnpjTitle","cnpj","tamanho","numeros","digitos","soma","pos","charAt","resultado","validarCNPJ","App","HeaderTitle","BackToSite","ButtonSave","href","onSubmit","preventDefault","action","method","autoComplete","disabled","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnHover","pauseOnVisibilityChange","pauseOnFocusLoss","ReactDOM","render","getElementById"],"mappings":"gkBAAMA,EAAQ,iCA4BCC,EAzBA,CACXC,cAAeF,EAAQ,4DACvBG,WAAYH,EAAQ,0EACpBI,WAAYJ,EAAQ,uEACpBK,eAAgBL,EAAQ,gEACxBM,cAAeN,EAAQ,8DACvBO,YAAaP,EAAQ,2DACrBQ,kBAAmBR,EAAQ,kEAC3BS,qBAAsBT,EAAQ,qEAC9BU,2BAA4BV,EAAQ,2EACpCW,cAAeX,EAAQ,8DACvBY,cAAeZ,EAAQ,8DACvBa,uBAAwBb,EAAQ,uEAChCc,eAAgBd,EAAQ,+DACxBe,qBAAsBf,EAAQ,qEAC9BgB,oBAAqBhB,EAAQ,oEAC7BiB,kBAAmBjB,EAAQ,oEAC3BkB,gBAAiBlB,EAAQ,kEACzBmB,SAAUnB,EAAQ,yDAClBoB,cAAepB,EAAQ,oEACvBqB,YAAarB,EAAQ,kEACrBsB,eAAgBtB,EAAQ,sEACxBuB,qBAAsBvB,EAAQ,oF,qCCrBbwB,E,4JACjB,WACI,OACI,sBAAKC,UAAU,kBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,mBAAGA,UAAWC,KAAKC,MAAMF,cAE7B,qCAAQC,KAAKC,MAAMC,sB,GAPGC,a,QCatC,SAASC,EAAMC,EAAGC,GAA2E,IAAtEC,EAAqE,uDAA3D,KAAKC,IAAsD,yDAArCC,EAAqC,uDAA9B,8BACtDC,IAAMC,SAASN,IAEfK,IAAME,MACF,cAAC,EAAD,CACEb,UAAWU,EACXP,YAAaI,IAEf,CAAEO,QAASR,EAAIE,YAAWC,cAItC,SAASM,EAAKT,EAAGC,GAAyE,IAApEC,EAAmE,uDAAzD,KAAKC,IAAoD,yDAAnCC,EAAmC,uDAA5B,4BACrDC,IAAMC,SAASN,IAEfK,IAAMK,KACF,cAAC,EAAD,CACEhB,UAAWU,EACXP,YAAaI,IAEf,CAAEO,QAASR,EAAIE,YAAWC,cC/BtC,IAAMQ,EAAe,CACnBC,YAAY,EACZC,SAAS,EACTC,sBAAuB,SAACC,KACxBC,iBAAkB,SAACD,KACnBE,mBAAoB,SAACF,KACrBG,gBAAiB,SAACH,KAClBI,gBAAiB,SAACJ,KAClBK,2BAA4B,SAACL,KAC7BM,aAAc,SAACN,KACfO,WAAY,SAACP,KACbQ,cAAe,SAACR,KAChBS,gBAAiB,SAACT,KAClBU,mBAAoB,SAACV,KACrBW,0BAA2B,SAACX,KAC5BY,kBAAmB,SAACZ,KACpBa,WAAY,cAGVC,EAAU,CACZC,SAAU,EACVC,KAAM,GACNC,UAAW,GACXC,iBAAkB,GAClBC,UAAW,GACXC,WAAY,GACZC,SAAU,EACVC,gBAAiB,EACjBC,mBAAoB,EACpBC,WAAY,GACZC,YAAa,GACbC,eAAgB,EAChBC,aAAc,EACdC,eAAgB,GAChBC,yBAA0B,EAC1BC,0BAA2B,EAC3BC,2BAA4B,EAC5BC,iBAAkB,EAClBC,cAAe,GACfC,UAAU,EACVC,oBAAoB,EACpBC,YAAa,GACbC,yBAAyB,EACzBC,iCAAiC,EACjCC,UAAW,GACXC,OAAQ,GACRC,SAAU,GACVC,KAAM,GACNC,OAAQ,GACRC,OAAQ,GACRC,aAAc,GACdC,QAAS,GACTC,UAAW,GACXC,YAAa,GACbC,UAAW,GACXC,qBAAsB,GACtBC,eAAgB,CACdC,MAAO,UACPC,SAAU,YAIDC,EAAcC,wBAAc3D,GAE5B4D,EAAe,SAAC3E,GAAW,IAAD,EACD4E,oBAAS,GADR,mBAC9B5D,EAD8B,KAClB6D,EADkB,OAEPD,oBAAS,GAFF,mBAE9B3D,EAF8B,KAErB6D,EAFqB,KA4LrC,OAxLAC,qBAAU,WACIC,OAAOC,SAASC,SAASC,MAAM,KAC1BC,QAAO,SAAAC,GAAC,MAAU,OAANA,KACpBC,OAAS,EAAGT,GAAc,GAC9BA,GAAc,KAClB,IAoLD,cAACJ,EAAYc,SAAb,CACEC,MAAO,CACLxE,aACAE,sBArLN,SAA+BC,GAC7Bc,EAAQiC,UAAY,CAAC/C,IAqLjBC,iBAnLN,SAA0BD,GACxBc,EAAO,2BAAQA,GAAYd,IAmLvBE,mBAjLN,SAA4BF,GAC1Bc,EAAQyB,UAAYvC,GAiLhBG,gBA/KN,SAAyBH,GACvBc,EAAQ6B,OAAS,CAAC3C,IA+KdI,gBA7KN,SAAyBJ,GACvBc,EAAQ8B,OAAS,CAAC5C,IA6KdK,2BA3KN,SAAoCL,GAClCc,EAAQ2B,SAAWzC,GA2KfM,aAzKN,SAAsBN,GACpBc,EAAQ0B,OAASxC,GAyKbO,WAvKN,SAAoBP,GAClBc,EAAQ4B,KAAO1C,GAuKXQ,cArKN,SAAuBR,GACrBc,EAAQgC,QAAU9C,GAqKdW,0BA1JN,SAAmCX,GACjCc,EAAQoC,qBAAuBlD,GA0J3BU,mBA9JN,SAA4BV,GAC1Bc,EAAQ+B,aAAe7C,GA8JnBS,gBArKN,SAAyBT,GACvBc,EAAQmC,UAAYjD,GAqKhBY,kBAnKN,SAA2BZ,GACzBc,EAAQkC,YAAchD,GAmKlBF,UACAe,WA5JN,WACE,IAAMyD,EAAgD,IAArCxD,EAAQe,0BAAuE,IAArCf,EAAQe,yBACnE,GAAoC,IAAhCf,EAAQ+B,aAAasB,OAEvBzE,EACE,iBAFmBG,EAAa,8BAAgC,qBAIhE,KACA,QAGC,GAAIyE,GAAuC,IAA3BxD,EAAQgC,QAAQqB,OAAc,CAEjDzE,EACE,oBAFmBG,EAAa,6BAA4B,yBAI5D,KACA,OAGC,CACH8D,GAAW,GACXY,QAAQC,IAAIC,KAAKC,UAAU5D,IAK3B6D,IAAMC,KAAKzH,EAAOqB,eAAgBsC,EAAS,CAAE+D,QAJ7B,CACd,mBAAoB,MAInBC,MAAK,SAAAC,GACAA,EAAIC,MAoDhB,SAAqBC,GACnB,IAAMC,EAAWC,aAAY,WAC3BR,IAAMS,IAAN,UAAajI,EAAOsB,sBAApB,OAA2CwG,IACxCH,MAAK,SAAAC,GACJ,GAAIA,EAAIC,KAAKC,WAAY,CAEvBI,cAAcH,GACd,IAAMI,EAAiBzF,EAAa,iCAAmC,sCACvE8D,GAAW,GD5MvB,SAAiB1E,EAAGC,GAA4D,IAAvDC,EAAsD,uDAA5C,KAAKC,IAAuC,yDAAtBC,EAAsB,uDAAf,eACxDC,IAAMC,SAASN,IAEfK,IAAMiG,QACF,cAAC,EAAD,CACE5G,UAAWU,EACXP,YAAaI,IAEf,CAAEO,QAASR,EAAIE,YAAWC,cCqM1BoG,CAAQ,gBAAiBF,EAAgB,KAAM,OAMlDG,OAAM,SAAAC,GACL,GAAIA,EAAIC,SAEFD,EAAIC,SAASX,KAAKY,eACpBjC,GAAW,GAEXjE,EACE,kBAFkBG,EAAa,mEAAyD,8DAIxF,KACA,SAID,GAAI6F,EAAIG,QAAS,CACpBlC,GAAW,GAEXY,QAAQC,IAAIkB,EAAIG,SAEhB7G,EACE,sBAFmBa,EAAa,+GAA2G,2FAI3I,KACA,OAEG,CACL8D,GAAW,GAEXY,QAAQC,IAAI,QAASkB,EAAII,SAEzB9G,EACE,sBAFmBa,EAAa,+GAA2G,2FAI3I,KACA,SAIP,KAxGKkG,CAAYhB,EAAIC,KAAKgB,SAGxBP,OAAM,SAAAC,GAEL,GADA/B,GAAW,GACP+B,EAAIC,SAEFD,EAAIC,SAASX,KAAKY,aACpB5G,EACE,aACA0G,EAAIC,SAASX,KAAKY,aAClB,KACA,IAIFrB,QAAQC,IAAI,QAASkB,EAAII,SAEzB9G,EACE,sBAFmBa,EAAa,+GAA2G,2FAI3I,KACA,SAID,GAAI6F,EAAIG,SAAWH,EAAIC,SAAU,CAEpCpB,QAAQC,IAAI,QAASkB,EAAII,SAEzB9G,EACE,sBAFmBa,EAAa,+GAA2G,2FAI3I,KACA,OAEG,CAEL0E,QAAQC,IAAI,QAASkB,EAAII,SAEzB9G,EACE,sBAFmBa,EAAa,+GAA2G,2FAI3I,KACA,UAiEV,SAoBGhB,EAAMoH,YClRPrG,EAAe,CACjBoB,KAAMkF,OACNC,QAAS,aACTlF,UAAWiF,OACXE,aAAc,aACdlF,iBAAkBgF,OAClBG,oBAAqB,aACrBlF,UAAW+E,OACXI,aAAc,aACdC,IAAKL,OACLM,OAAQ,aACRpF,WAAY8E,OACZO,cAAe,aACfpF,SAAU6E,OACVQ,YAAa,aACbC,WAAY,GACZrF,gBAAiB4E,OACjBU,mBAAoB,aACpBC,cAAe,GACftF,mBAAoB2E,OACpBY,kBAAmB,GACnBtF,WAAY0E,OACZa,cAAe,aACftF,YAAayE,OACbxE,eAAgBwE,OAChBc,oBAAqB,aACrBrF,aAAcuE,OACdtE,eAAgBsE,OAChBrE,yBAA0BqE,OAC1BpE,0BAA2BoE,OAC3BnE,2BAA4BmE,OAC5BlE,iBAAkBkE,OAClBjE,cAAeiE,OACfe,iBAAkB,aAClB/E,SAAUgE,OACVgB,YAAa,aACb/E,mBAAoB+D,OACpBiB,sBAAuB,aACvB/E,YAAa8D,OACb7D,wBAAyB6D,OACzB5D,gCAAiC4D,OACjCkB,mCAAoC,cAE3BC,EAAoB9D,wBAAc3D,GAElC0H,EAAqB,SAACzI,GAAW,IAAD,EACA0I,qBAAWjE,GAA7CrD,EADkC,EAClCA,iBAAkBK,EADgB,EAChBA,aADgB,EAKTmD,mBAAS,GALA,mBAKlC1C,EALkC,aAMjB0C,mBAAS,KANQ,mBAMlCzC,EANkC,KAM5BmF,EAN4B,OAOP1C,mBAAS,IAPF,mBAOlCxC,EAPkC,KAOvBmF,EAPuB,OAQO3C,mBAAS,IARhB,mBAQlCvC,EARkC,KAQhBmF,EARgB,OASP5C,mBAAS,IATF,mBASlCtC,EATkC,KASvBmF,EATuB,OAUnB7C,mBAAS,IAVU,mBAUlC8C,EAVkC,KAU7BC,EAV6B,OAWL/C,mBAAS,IAXJ,mBAWlCrC,EAXkC,KAWtBqF,EAXsB,OAYLhD,mBAAS,IAZJ,mBAYlCjC,EAZkC,KAYtBuF,EAZsB,OAaHtD,mBAAS,IAbN,mBAalChC,EAbkC,KAarB+F,EAbqB,OAeT/D,mBAAS,IAfA,mBAelCpC,EAfkC,KAexBqF,EAfwB,OAgBLjD,mBAAS,IAhBJ,mBAgBlCkD,EAhBkC,KAgBtBc,EAhBsB,QAkBKhE,mBAAS,IAlBd,qBAkBlCnC,GAlBkC,MAkBjBsF,GAlBiB,SAmBCnD,mBAAS,IAnBV,qBAmBlCoD,GAnBkC,MAmBnBa,GAnBmB,SAoBWjE,mBAAS,IApBpB,qBAoBlClC,GApBkC,MAoBdoG,GApBc,SAqBSlE,mBAAS,IArBlB,qBAqBlCqD,GArBkC,MAqBfc,GArBe,SAuBGnE,mBAAS,IAvBZ,qBAuBlC/B,GAvBkC,MAuBlBmG,GAvBkB,SAwBOpE,mBAAS,IAxBhB,qBAwBlCqE,GAxBkC,MAwBhBC,GAxBgB,SAyBDtE,mBAAS,IAzBR,qBAyBlC9B,GAzBkC,MAyBpBqG,GAzBoB,SA0BGvE,mBAAS,IA1BZ,qBA0BlC7B,GA1BkC,MA0BlBqG,GA1BkB,SA2BHxE,mBAAS,IA3BN,qBA2BlCyE,GA3BkC,MA2BrBC,GA3BqB,SA6BuB1E,mBAAS,IA7BhC,qBA6BlC5B,GA7BkC,MA6BRuG,GA7BQ,SA8ByB3E,mBAAS,IA9BlC,qBA8BlC4E,GA9BkC,MA8BPC,GA9BO,SAgCyB7E,mBAAS,IAhClC,qBAgClC3B,GAhCkC,MAgCPyG,GAhCO,SAiC2B9E,mBAAS,IAjCpC,qBAiClC+E,GAjCkC,MAiCNC,GAjCM,SAmC2BhF,mBAAS,IAnCpC,qBAmClC1B,GAnCkC,MAmCN2G,GAnCM,SAoC6BjF,mBAAS,IApCtC,qBAoClCkF,GApCkC,MAoCLC,GApCK,SAsCOnF,mBAAS,IAtChB,qBAsClCzB,GAtCkC,MAsChB6G,GAtCgB,SAuCSpF,mBAAS,IAvClB,qBAuClCqF,GAvCkC,MAuCfC,GAvCe,SAwCCtF,mBAAS,IAxCV,qBAwClCxB,GAxCkC,MAwCnBgF,GAxCmB,SAyCTxD,oBAAS,GAzCA,qBAyClCvB,GAzCkC,MAyCxBgF,GAzCwB,SA0CWzD,oBAAS,GA1CpB,qBA0ClCtB,GA1CkC,MA0CdgF,GA1Cc,SA2CqC1D,oBAAS,GA3C9C,qBA2ClCnB,GA3CkC,MA2CD8E,GA3CC,MA+CnCtG,GAAU,CACZC,SAAUA,EACVC,KAAMA,EACNC,UAAWA,EACXC,iBAAkBA,EAAiB8H,QAAQ,UAAW,IACtD7H,UAAU,GAAD,OAAKA,EAAL,aACTC,WAAYA,EACZC,SAAU4H,SAAS5H,GACnBC,gBAAiB2H,SAAS3H,IAC1BC,mBAAoBA,GAAqB0H,SAAS1H,IAAsB,EACxEC,WAAYA,EACZC,YAAaA,EACbC,eAAgBuH,SAASvH,IACzBC,aAAcsH,SAAStH,IACvBC,eAAgBA,GAChBC,yBAA0BoH,SAASpH,IACnCC,0BAA2BmH,SAASnH,IACpCC,2BAA4BkH,SAASlH,IACrCC,iBAAkBiH,SAASjH,IAC3BC,cAAeA,GACfC,SAAUA,GACVC,mBAAoBA,GACpBG,gCAAiCA,IA4ErC,OA1EAsB,qBAAU,WACiB,MAApBtC,IAAyBhB,EAAa,MAC1C,CAACgB,KAGJsC,qBAAU,WACN3D,EAAiBa,MAClB,CAACoB,GAAUC,GAAmBF,GAAeV,GAAoBQ,GAA2BD,GAA0BQ,KAGzHsB,qBAAU,WACF5C,GAAQC,GAAaE,GAAaC,GAAcI,GAAcN,GAAoBG,GAAYC,IAAmBG,GAAeC,IAChIC,IAAgBC,IAAkBC,IAA6BG,IAC/D/B,EAAiBa,MAEtB,CAACE,EAAMC,EAAWE,EAAWC,EAAYI,EAAYN,EAAkBG,EAAUC,GAAiBG,EAAaC,GAC9GC,GAAcC,GAAgBC,GAA0BG,KAG5D4B,qBAAU,WAgBNe,IAAMS,IAAIjI,EAAOM,aACZqH,MAAK,SAAAC,GAAG,OAAI0C,EAAc1C,EAAIC,SAC9BS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,MAG9Bf,IAAMS,IAAIjI,EAAOO,mBACZoH,MAAK,SAAAC,GAAG,OAAI2C,GAAiB3C,EAAIC,SACjCS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,MAG9Bf,IAAMS,IAAIjI,EAAOQ,sBACZmH,MAAK,SAAAC,GAAG,OAAI6C,GAAqB7C,EAAIC,SACrCS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,MAG9Bf,IAAMS,IAAIjI,EAAOC,eACZ0H,MAAK,SAAAC,GACFgD,GAAoBhD,EAAIC,MACxByD,GAA8B1D,EAAIC,MAClC4D,GAA+B7D,EAAIC,SAEtCS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,MAQ9Bf,IAAMS,IAAIjI,EAAOS,4BACZkH,MAAK,SAAAC,GAAG,OAAIuD,GAA6BvD,EAAIC,SAC7CS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,MAG9Bf,IAAMS,IAAIjI,EAAOU,eACZiH,MAAK,SAAAC,GAAG,OAAIgE,GAAqBhE,EAAIC,SACrCS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,QA7C/B,IAEH9B,qBAAU,WACgB,KAAnBlC,GAAuByG,GAAe,IA8BzCxD,IAAMS,IAAN,UAAajI,EAAOE,YAApB,OAAiCqE,KAC5BoD,MAAK,SAAAC,GAAG,OAAIoD,GAAepD,EAAIC,SAC/BS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,QA9B/B,CAAChE,KA4CA,cAAC2F,EAAkBjD,SAAnB,CACIC,MAAO,CACHrD,OAAMmF,UACNlF,YAAWmF,eACXlF,mBAAkBmF,sBAClBlF,YAAWmF,eAAcC,MAAKC,SAC9BpF,aAAYqF,gBACZjF,aAAYuF,gBACZ1F,WAAUqF,cAAaC,aACvBrF,mBAAiBsF,sBAAoBC,iBACrCC,qBAAmBa,yBACnBlG,cAAa+F,iBACbK,qBAAmBC,oBACnBE,mBAAiBC,qBAAmBC,eACpCE,+BAA6BC,6BAA0BxG,4BACvD2G,8BAA4BD,gCAC5BI,+BAA6BD,iCAC7BG,uBAAqBC,qBACrB7G,iBAAcgF,oBACd/E,YAAUgF,eACV/E,sBAAoBgF,yBACpB7E,mCAAiC8E,uCArBzC,SAwBKvI,EAAMoH,YCpNbrG,G,MAAe,CACjBsJ,qBAAsB,GACtBC,OAAQ,GACRC,gBAAiB,GACjBC,SAAU,GACVC,QAAS,GACTC,oBAAqB,GACrBC,wBAAyB,aACzBC,UAAW,aACXC,mBAAoB,aACpBC,YAAa,aACbC,WAAY,eAGHC,EAA4BtG,wBAAc3D,GAE1CkK,EAA6B,SAACjL,GAAW,IAE1CwB,EAA+BkH,qBAAWjE,GAA1CjD,2BACAa,EAAqBqG,qBAAWF,GAAhCnG,iBAHyC,EAKOuC,mBAAS,IALhB,mBAK1CyF,EAL0C,KAKpBM,EALoB,OAMrB/F,mBAAS,IANY,mBAM1C0F,EAN0C,KAMlCM,EANkC,OAOHhG,mBAAS,IAPN,mBAO1C2F,EAP0C,KAOzBM,EAPyB,OAQjBjG,mBAAS,IARQ,mBAQ1C4F,EAR0C,KAQhCM,EARgC,OASnBlG,mBAAS,IATU,mBAS1C6F,EAT0C,KASjCM,EATiC,OAUKnG,mBAAS,IAVd,mBAU1C8F,EAV0C,KAUrBQ,EAVqB,OAWrBtG,mBAAS,IAXY,mBAW1CuG,EAX0C,KAWlCC,EAXkC,KAa7CnJ,EAAU,CACVoI,qBAAsBD,SAASC,GAC/BC,OAAQA,EACRC,gBAAiBA,EACjBC,SAAS,GAAD,OAAKA,EAAL,aACRC,QAASL,SAASK,IAgCtB,OA7BA1F,qBAAU,WACN,GAAIsF,GAAwBE,GAAmBC,GAAYC,EACvD,GAA6B,OAAzBJ,EAA+B,CAC/B,IAAMgB,EAAMhJ,EAAiB8H,QAAQ,UAAW,IAChDS,EAAUS,GACV7J,EAA2BS,QAEtBqI,GAAQ9I,EAA2BS,KAEjD,CAACoI,EAAsBC,EAAQC,EAAiBC,EAAUC,EAAQpI,IAErE0C,qBAAU,WAONe,IAAMS,IAAIjI,EAAOY,wBACZ+G,MAAK,SAAAC,GAAaA,EAAIC,MAAM+E,EAAuBhF,EAAIC,SACvDS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,MAI9Bf,IAAMS,IAAN,UAAajI,EAAOE,WAApB,OACKyH,MAAK,SAAAC,GAAaA,EAAIC,MAAMiF,EAAUlF,EAAIC,SAC1CS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,QAZ/B,IAgBC,cAACmE,EAA0BzF,SAA3B,CACIC,MAAO,CACHkF,sBAAqBC,0BAAyBN,uBAC9CO,YACAN,SACAO,qBACAC,cACAC,aACAI,UARR,SAWKnL,EAAMoH,YCnFbrG,EAAe,CACjByC,yBAAyB,EACzBrB,KAAM,GACNmF,QAAS,aACTgE,iBAAkB,GAClBC,oBAAqB,aACrBjJ,UAAW,GACXmF,aAAc,aACd+D,OAAO,EACPC,SAAU,aACVC,kBAAmB,GACnBC,qBAAsB,aACtBC,UAAW,GACXC,aAAc,aACdpB,QAAS,GACTqB,WAAY,aACZC,UAAW,GACXC,aAAc,aACdC,OAAQ,GACRC,UAAW,aACXC,SAAU,GACVC,YAAa,aACbC,aAAc,GACdC,gBAAiB,aACjBrM,YAAa,GACbsM,eAAgB,aAChBC,QAAS,GACTC,WAAY,aACZnC,OAAQ,GACRM,UAAW,aACX8B,WAAY,GACZC,cAAe,aACfC,cAAe,GACfC,iBAAkB,cAETC,EAAkBpI,wBAAc3D,GAEhCgM,EAAmB,SAAC/M,GAAW,IAAD,EACuB4E,oBAAS,GADhC,mBAChCpB,EADgC,KACPwJ,EADO,OAEfpI,mBAAS,IAFM,mBAEhCzC,EAFgC,KAE1BmF,EAF0B,OAGS1C,mBAAS,IAHlB,mBAGhC0G,EAHgC,KAGdC,EAHc,OAIL3G,mBAAS,IAJJ,mBAIhCtC,EAJgC,KAIrBmF,EAJqB,OAKb7C,oBAAS,GALI,mBAKhC4G,EALgC,KAKzBC,EALyB,OAMW7G,mBAAS,IANpB,mBAMhC8G,EANgC,KAMbC,EANa,OAOL/G,mBAAS,IAPJ,mBAOhCgH,EAPgC,KAOrBC,EAPqB,OAQTjH,mBAAS,IARA,mBAQhC6F,EARgC,KAQvBqB,EARuB,OASLlH,mBAAS,IATJ,mBAShCmH,EATgC,KASrBC,EATqB,OAUXpH,mBAAS,IAVE,mBAUhCqH,EAVgC,KAUxBC,EAVwB,OAWPtH,mBAAS,IAXF,mBAWhCuH,EAXgC,KAWtBC,EAXsB,OAYCxH,mBAAS,IAZV,mBAYhCyH,EAZgC,KAYlBC,EAZkB,QAaD1H,mBAAS,IAbR,qBAahC3E,GAbgC,MAanBsM,GAbmB,SAcT3H,mBAAS,IAdA,qBAchC4H,GAdgC,MAcvBC,GAduB,SAeX7H,mBAAS,IAfE,qBAehC0F,GAfgC,MAexBM,GAfwB,SAgBHhG,mBAAS,IAhBN,qBAgBhC8H,GAhBgC,MAgBpBC,GAhBoB,SAiBG/H,mBAAS,IAjBZ,qBAiBhCgI,GAjBgC,MAiBjBC,GAjBiB,MAmB/BxL,GAAuBqH,qBAAWjE,GAAlCpD,mBAEFqC,GAAY,CACdvB,KAAMA,EACNmJ,iBAAkBA,EAAiBnB,QAAQ,UAAW,IACtD7H,UAAWA,EACXkJ,MAAOA,EACPE,kBAAmBA,EACnBuB,QAAS,CACLrB,UAAWA,EACXnB,QAASA,EACTsB,UAAWA,EACXE,OAAQA,EACRE,SAAUA,EACVE,aAAcA,EACdpM,YAAaA,GACbuM,QAASA,GACTlC,OAAQA,GACRoC,WAAYA,GACZE,cAAeA,KAcvB,OATA7H,qBAAU,WACFvB,EACKA,GAA2BrB,GAAQmJ,GAAoBhJ,GAAaoJ,GAAqBE,GAAanB,GAAWsB,GAAaE,GAAUE,GAC7IE,GAAgBpM,IAAeuM,IAAWlC,IAAUoC,IAAcE,IAClEvL,GAAmB,CAACqC,KAHKrC,GAAmB,MAKjD,CAACmC,EAAyBrB,EAAMmJ,EAAkBhJ,EAAWkJ,EAAOE,EAAmBE,EAAWnB,EAASsB,EAAWE,EAAQE,EAC7HE,EAAcpM,GAAauM,GAASlC,GAAQoC,GAAYE,KAGxD,cAACE,EAAgBvH,SAAjB,CACIC,MAAO,CACHrD,OAAMmJ,mBAAkBhJ,YAAWkJ,QAAOE,oBAC1CE,YAAWpI,0BAAyBiH,UACpCuC,6BAA4B1F,UAASiE,sBACrC9D,eAAcgE,WAAUE,uBACxBE,eAAcC,aAAYE,eAAcE,YAAWI,kBACnDF,cAAaS,oBAAkBJ,cAAYF,kBAAgB3B,aAAW+B,kBAP9E,SAUK3M,EAAMoH,YCpGbrG,EAAe,CACjB6K,UAAW,GACXC,aAAc,aACdpB,QAAS,GACTqB,WAAY,aACZC,UAAW,GACXC,aAAc,aACdC,OAAQ,GACRC,UAAW,aACXC,SAAU,GACVC,YAAa,aACbC,aAAc,GACda,gBAAiB,aACjBjN,YAAa,GACbkN,eAAgB,aAChBC,QAAS,GACTX,WAAY,aACZnC,OAAQ,GACR+C,UAAW,aACXX,WAAY,GACZY,cAAe,aACfV,cAAe,GACfC,iBAAkB,cAETU,EAAkB7I,wBAAc3D,GAEhCyM,EAAmB,SAACxN,GAAW,IAAD,EACL4E,mBAAS,IADJ,mBAChCgH,EADgC,KACrBC,EADqB,OAETjH,mBAAS,IAFA,mBAEhC6F,EAFgC,KAEvBqB,EAFuB,OAGXlH,mBAAS,IAHE,mBAGhCqH,EAHgC,KAGxBC,EAHwB,OAITtH,mBAAS,IAJA,mBAIhCwI,EAJgC,KAIvBX,EAJuB,OAKL7H,mBAAS,IALJ,mBAKhCmH,EALgC,KAKrBC,EALqB,OAMPpH,mBAAS,IANF,mBAMhCuH,EANgC,KAMtBC,EANsB,OAOCxH,mBAAS,IAPV,mBAOhCyH,EAPgC,KAOlBa,EAPkB,OAQDtI,mBAAS,IARR,mBAQhC3E,EARgC,KAQnBkN,EARmB,OASXvI,mBAAS,IATE,mBAShC0F,EATgC,KASxB+C,EATwB,OAUHzI,mBAAS,IAVN,mBAUhC8H,EAVgC,KAUpBY,EAVoB,OAWG1I,mBAAS,IAXZ,mBAWhCgI,EAXgC,KAWjBC,EAXiB,KAa/B3L,EAA0BwH,qBAAWjE,GAArCvD,sBAEFuM,EAAa,CACf,UAAa7B,EACb,QAAWnB,EACX,UAAasB,EACb,OAAUE,EACV,SAAYE,EACZ,aAAgBE,EAChB,YAAepM,EACf,QAAWmN,EACX,OAAU9C,EACV,WAAcoC,EACd,cAAiBE,GASrB,OANA7H,qBAAU,WACFkH,GAAUE,GAAYO,GAAcd,GAAa3L,GAAeoM,GAAgB/B,GAAUG,GAAWsB,GAAaa,GAAiBQ,GACnIlM,EAAsBuM,KAE3B,CAACxB,EAAQE,EAAUO,EAAYd,EAAW3L,EAAaoM,EAAc/B,EAAQG,EAASsB,EAAWa,EAAeQ,IAG/G,cAACG,EAAgBhI,SAAjB,CACIC,MAAO,CACHoG,YACAC,eACApB,UACAqB,aACAE,eACAC,SACAC,YACAE,cACAgB,UACAX,aACAV,YACAI,WACAE,eACAa,kBACAjN,cACAkN,iBACA7C,SACA+C,YACAX,aACAY,gBACAV,gBACAC,oBAvBR,SA0BK7M,EAAMoH,YCtFbrG,EAAe,CACjB2M,OAAQ,GACRC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,cAAe,GACfC,iBAAkB,GAClBC,MAAO,GACPC,UAAW,aACXC,UAAW,aACXC,WAAY,aACZC,SAAU,aACVC,iBAAkB,cAGTC,EAAsB5J,wBAAc3D,GAEpCwN,EAAuB,SAACvO,GAAW,IAAD,EACf4E,mBAAS,IADM,mBACpC8I,EADoC,KAC5BO,EAD4B,OAEfrJ,mBAAS,IAFM,mBAEpC+I,EAFoC,KAE5BO,EAF4B,OAGbtJ,mBAAS,IAHI,mBAGpCgJ,EAHoC,KAG3BO,EAH2B,OAIjBvJ,mBAAS,IAJQ,mBAIpCiJ,EAJoC,KAI7BO,EAJ6B,OAKDxJ,mBAAS,IALR,mBAKpCkJ,EALoC,KAKrBO,EALqB,OAQKzJ,mBAAS,IARd,mBAQpCmJ,EARoC,KAQlBS,EARkB,OASjB5J,mBAAS,IATQ,mBASpCoJ,EAToC,KAS7BS,EAT6B,KAuC3C,OA5BA1J,qBAAU,WAMNe,IAAMS,IAAIjI,EAAOe,qBACZ4G,MAAK,SAAAC,GAAaA,EAAIC,MAAMqI,EAAoBtI,EAAIC,SACpDS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,MAElC,WACI,IAAM6H,EAAW,GACjB5I,IAAMS,IAAIjI,EAAOkB,UACZyG,MAAK,SAAAC,GACEA,EAAIC,MACJD,EAAIC,KAAKwI,KAAI,SAAAtJ,GACT,IAAMuJ,EAAO,CAAEzM,KAAK,GAAD,OAAKkD,EAAE8B,KAAP,YAAe9B,EAAElD,MAAQqD,MAAM,GAAD,OAAKH,EAAEqI,SACxDgB,EAASG,KAAKD,SAIzB3I,MAAK,SAAAC,GACFuI,EAASC,MAEZ9H,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,MAtB9BiI,KACD,IA0BC,cAACR,EAAoB/I,SAArB,CACIC,MAAO,CACHuI,mBAAkBC,QAClBN,SAAQO,YACRN,SAAQO,YACRN,UAASO,aACTN,QAAOO,WACPN,gBAAeO,oBAPvB,SAUKrO,EAAMoH,YClEbrG,EAAe,CACjBgO,WAAY,GACZC,YAAa,GACbC,YAAa,GACbC,UAAW,GACX5E,OAAQ,GACR6E,eAAgB,aAChBC,eAAgB,aAChBC,aAAc,aACdhC,UAAW,cAKFiC,EAAgB5K,wBAAc3D,GAE9BwO,EAAiB,SAACvP,GAAW,IAC9BsB,EAAoBoH,qBAAWjE,GAA/BnD,gBAD6B,EAECsD,mBAAS,IAFV,mBAE9BoK,EAF8B,KAEjBG,EAFiB,OAGCvK,mBAAS,IAHV,mBAG9BqK,EAH8B,KAGjBG,EAHiB,OAIHxK,mBAAS,IAJN,mBAI9BsK,EAJ8B,KAInBG,EAJmB,OAKTzK,mBAAS,IALA,mBAK9B0F,EAL8B,KAKtB+C,EALsB,OAMDzI,mBAAS,IANR,mBAM9BmK,EAN8B,KAMlBS,EANkB,KAQjCvN,EAAU,CACVgN,YAAaA,EACbC,UAAWA,EACX5E,OAAQA,EACRmF,KAAMrF,SAAS4E,IAoBnB,OAjBAjK,qBAAU,WACFkK,GAAeC,GAAa5E,GAAU0E,GAAa1N,EAAgBW,KACxE,CAACgN,EAAaC,EAAW5E,EAAQ0E,IAEpCjK,qBAAU,WAMNe,IAAMS,IAAIjI,EAAOK,eACZsH,MAAK,SAAAC,GACEA,EAAIC,MAAMqJ,EAActJ,EAAIC,SAEnCS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAR,UAAekB,SARlC,IAYC,cAACyI,EAAc/J,SAAf,CACIC,MAAO,CACHuJ,aAAYI,iBAAgBH,cAC5BC,cAAaG,iBACbF,YAAWG,eACX/E,SAAQ+C,aALhB,SAQKrN,EAAMoH,YCzDbrG,EAAe,CACjB2O,KAAM,GACND,KAAM,GACNE,kBAAkB,EAClBC,WAAY,GACZC,QAAS,aACTC,QAAS,aACTC,oBAAqB,cAGZC,EAAetL,wBAAc3D,GAE7BkP,EAAgB,SAACjQ,GAAW,IAC7BuB,EAAoBmH,qBAAWjE,GAA/BlD,gBAD4B,EAEZqD,mBAAS,IAFG,mBAE7B8K,EAF6B,KAEvBG,EAFuB,OAGZjL,mBAAS,IAHG,mBAG7B6K,EAH6B,KAGvBK,EAHuB,OAIYlL,oBAAS,GAJrB,mBAI7B+K,EAJ6B,KAIXI,EAJW,OAKAnL,mBAAS,IALT,mBAK7BgL,EAL6B,KAKjBM,EALiB,KAOhCjO,EAAU,CACVyN,KAAMA,EACND,KAAMrF,SAASqF,GACfE,kBAAkB,GAoBtB,OAjBA5K,qBAAU,WACF2K,GAAQD,GAAMlO,EAAgBU,KACnC,CAACyN,EAAMD,IAEV1K,qBAAU,WAMNe,IAAMS,IAAIjI,EAAOW,eACZgH,MAAK,SAAAC,GACEA,EAAIC,MAAM+J,EAAchK,EAAIC,SAEnCS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,QAR/B,IAYC,cAACmJ,EAAazK,SAAd,CACIC,MAAO,CACHoK,aACAG,sBAAqBJ,mBACrBG,UAASD,WAJjB,SAOK7P,EAAMoH,YClDbrG,EAAe,CACjBoP,aAAc,GACd3K,MAAO,GACPvF,YAAa,GACbmQ,cAAe,GACfC,gBAAiB,aACjBC,SAAU,aACV/D,eAAgB,cAGPgE,EAAqB7L,wBAAc3D,GAEnCyP,EAAsB,SAACxQ,GAAW,IAAD,EAEF4E,mBAAS,IAFP,mBAEnCuL,EAFmC,KAErBE,EAFqB,OAGhBzL,mBAAS,IAHO,mBAGnCY,EAHmC,KAG5B8K,EAH4B,OAIJ1L,mBAAS,IAJL,mBAInC3E,EAJmC,KAItBsM,EAJsB,OAMA3H,mBAAS,IANT,mBAMnCwL,EANmC,KAMpBK,EANoB,KAmB1C,OAXA1L,qBAAU,WAKNe,IAAMS,IAAIjI,EAAOa,gBACZ8G,MAAK,SAAAC,GAAaA,EAAIC,MAAMsK,EAAiBvK,EAAIC,SACjDS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,QAL/B,IAUC,cAAC0J,EAAmBhL,SAApB,CACIC,MAAO,CACH2K,eAAc3K,QAAOvF,cACrBoQ,kBAAiBC,WAAU/D,iBAC3B6D,iBAJR,SAOKpQ,EAAMoH,YCzCbrG,EAAe,CACjB2P,gBAAiB,GACjBC,WAAY,GACZC,WAAY,GACZC,0BAA2B,GAC3BC,mBAAoB,aACpBC,cAAe,aACfC,cAAe,aACfC,6BAA8B,aAC9BC,cAAe,cAGNC,EAAczM,wBAAc3D,GAE5BqQ,EAAe,SAACpR,GAAW,IAE5B0B,EAAegH,qBAAWjE,GAA1B/C,WAF2B,EAIWkD,mBAAS,IAJpB,mBAI5B8L,EAJ4B,KAIXI,EAJW,OAKClM,mBAAS,IALV,mBAK5B+L,EAL4B,KAKhBI,EALgB,OAMCnM,mBAAS,IANV,mBAM5BgM,EAN4B,KAMhBI,EANgB,OAO+BpM,mBAAS,IAPxC,mBAO5BiM,EAP4B,KAODI,EAPC,OASCrM,oBAAS,GATV,mBAS5ByM,EAT4B,KAShBH,EATgB,KAW/BjP,EAAU,CACVyO,gBAAiBA,EACjBC,WAAYA,EACZC,WAAYA,EACZC,0BAA2BA,EAA0B1G,QAAQ,UAAW,KAW5E,OARApF,qBAAU,WACFsM,EACKX,GAAmBC,GAAcC,GAAcC,GACpDnP,EAAWO,GAFCP,EAAW,MAI5B,CAAC2P,EAAWX,EAAiBC,EAAYC,EAAYC,IAIpD,cAACM,EAAY5L,SAAb,CACIC,MAAO,CACHkL,kBAAiBI,qBACjBH,aAAYI,gBACZH,aAAYI,gBACZH,4BAA2BI,+BAC3BC,iBANR,SASKlR,EAAMoH,Y,MC/CJ,SAASkK,EAAmBtR,GAAQ,IACvCgB,EAAe0H,qBAAWjE,GAA1BzD,WADsC,EAG0B0H,qBAAWsC,GAD3EN,EAFsC,EAEtCA,oBAAqBL,EAFiB,EAEjBA,qBAAsBM,EAFL,EAEKA,wBAAyBQ,EAF9B,EAE8BA,OACxEJ,EAH0C,EAG1CA,WAAWF,EAH+B,EAG/BA,mBAAoBD,EAHW,EAGXA,UAAWE,EAHA,EAGAA,YAAaN,EAHb,EAGaA,SACrD+G,EAAS,CACXC,eAAgBxQ,EAAa,sBAAkB,iBAC/CyQ,OAAQzQ,EAAa,yCAAqC,6BAC1D0Q,OAAQ1Q,EAAa,kBAAoB,cACzCwJ,SAAUxJ,EAAa,qBAAoB,aAC3CuJ,gBAAiBvJ,EAAa,mBAAkB,mBAChD2Q,eAAgB3Q,EAAa,yBAAwB,mBAEnD4Q,GAAM,IAAIC,MAAOC,cAAc3M,MAAM,KAAK,GAC1C4M,EAAM,IAAIF,KAAKD,EAAIzM,MAAM,KAAK,GAAK,IAAK,KAAM,MAAM2M,cAAc3M,MAAM,KAAK,GAEnF,SAAS6M,EAAcC,GAAI,IAAD,EACFA,EAAEC,OAAf1M,EADe,EACfA,MACP,OAFsB,EACRpF,IAEV,IAAK,qBACDuK,EAAwBnF,GACxB,MACJ,IAAK,gBACDuF,EAAWvF,GACX,MACJ,IAAK,oCACDqF,EAAmBrF,GACnB,MACJ,IAAK,6BACDoF,EAAUpF,GACV,MACJ,IAAK,6BACDsF,EAAYtF,IAwBxB,OACI,sBAAK1F,UAAU,8BAAf,UACI,sBAAMA,UAAU,wBAAhB,SAAyCyR,EAAOC,iBAChD,sBAAK1R,UAAU,SAAf,UACI,yBAAQ2F,UAAQ,EACZtD,KAAK,qBAAqB/B,GAAG,qBAAqB+R,SAAU,SAAAF,GAAC,OAAID,EAAcC,IADnF,UAEI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAOE,SAtB9C/G,EAAoBiE,KAAI,SAAA0D,GACpB,OACI,wBAAuC7M,MAAO6M,EAAIC,qBAAlD,SAAyED,EAAIpS,aAAhEoS,EAAIC,4BAuBrB,mBAAGxS,UAAU,WAAb,kBAGJ,sBAAKA,UAAoC,OAAzBuK,EAAgC,SAAW,SAA3D,UACI,uBAAO5E,SAAmC,OAAzB4E,EAA+BoF,KAAK,OAAOtN,KAAK,6BAA6B/B,GAAG,6BAA6B+R,SAAU,SAAAF,GAAC,OAAID,EAAcC,IAC3JM,YAAahB,EAAOI,iBACpB,mBAAG7R,UAAU,WAAb,kBAGJ,sBAAKA,UAAU,SAAf,UACI,yBAAQ2F,UAAQ,EAACtD,KAAK,gBAAgB/B,GAAG,gBAAgB+R,SAAU,SAAAF,GAAC,OAAID,EAAcC,IAAtF,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAOG,SA3B9CvG,EAAOwD,KAAI,SAAA6D,GACP,OACI,wBAAwBhN,MAAOgN,EAAE/H,QAASgI,UAAWD,EAAErQ,KAAvD,SAA8DqQ,EAAErQ,MAAnDqQ,EAAE/H,eA4BnB,mBAAG3K,UAAU,WAAb,kBAGJ,mBAAGA,UAAU,wBAAb,SAAsCyR,EAAO/G,WAC7C,sBAAK1K,UAAU,SAAf,UACI,uBAAO0F,MAAOgF,EAAU/E,UAAQ,EAACgK,KAAK,OAAOtN,KAAK,6BAA6B/B,GAAG,6BAA6B+R,SAAU,SAAAF,GAAC,OAAID,EAAcC,IACxIS,IAAKX,EAAKY,IAAKf,IACnB,mBAAG9R,UAAU,WAAb,kBAGJ,sBAAKA,UAAU,SAAf,UACI,uBAAO2F,UAAQ,EAACgK,KAAK,OAAOtN,KAAK,oCAAoC/B,GAAG,oCAAoC+R,SAAU,SAAAF,GAAC,OAAID,EAAcC,IACzIM,YAAahB,EAAOhH,kBACpB,mBAAGzK,UAAU,WAAb,qB,MCxFD,SAAS8S,EAAU5S,GAAQ,IAUlCyF,EAViC,EACHb,mBAAS,IADN,mBAC9BiO,EAD8B,KACnBC,EADmB,KAE7B9R,EAAe0H,qBAAWjE,GAA1BzD,WACF+R,EAAQrK,qBAAWoE,GAGnByE,EAAS,CACXE,OAAQzQ,EAAa,qBAAoB,kBA4B7C,OAxBIhB,EAAMgT,SACFD,EAAMvP,wBAAyBiC,GAAW,EACpCsN,EAAMvP,0BAAyBiC,GAAW,GAE/CzF,EAAMiT,eAAcxN,GAAW,GAExCV,qBAAU,WAKNe,IAAMS,IAAIjI,EAAOC,eACZ0H,MAAK,SAAAC,GAAaA,EAAIC,MAAM2M,EAAa5M,EAAIC,SAC7CS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,QAL/B,IAiBC,yBAAQpB,SAAUA,EAAUtD,KAAK,YAAY/B,GAAG,YAAY+R,SAAUnS,EAAMkT,gBAA5E,UACI,wBAAQd,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAOE,SATtCoB,EAAUlE,KAAI,SAAAwE,GACV,OACI,wBAA0B3N,MAAO2N,EAAEvH,UAAnC,SAA+CuH,EAAEhR,MAApCgR,EAAEvH,iB,MC9BpB,SAAS8F,GAAO1R,GAAQ,IAa/ByF,EAZIzE,EAAe0H,qBAAWjE,GAA1BzD,WAEF+R,EAAQrK,qBAAWoE,GACnBsG,EAAQ1K,qBAAW6E,GAJS,EAMN3I,mBAAS,IANH,mBAM3BuG,EAN2B,KAMnBC,EANmB,KAO5BmG,EAAS,CACXE,OAAQzQ,EAAa,oBAAsB,eAC3CqS,YAAarS,EAAa,4BAA8B,yBAuB5D,SAASsS,IACL,IAAMC,EAAavT,EAAMiT,aAAeG,EAAMxH,UAAYmH,EAAMnH,UAChE9F,IAAMS,IAAN,UAAajI,EAAOE,YAApB,OAAiC+U,IAC5BtN,MAAK,SAAAC,GACEA,EAAIC,KACJiF,EAAUlF,EAAIC,MAGdT,QAAQC,IAAI4L,EAAO8B,gBAG1BzM,OAAM,SAAAC,GACHnB,QAAQC,IAAI4L,EAAO8B,gBAY/B,OA1CIrT,EAAMgT,SACHD,EAAMvP,wBAAyBiC,GAAW,EACpCsN,EAAMvP,0BAAyBiC,GAAW,GAE9CzF,EAAMiT,eAAcxN,GAAW,GAGxCV,qBAAU,WACH/E,EAAMiT,aAC0B,IAA3BG,EAAMxH,UAAUtG,OAAcgO,IAC7BlI,EAAU,IAEVpL,EAAMgT,WACoB,IAA3BD,EAAMnH,UAAUtG,OAAcgO,IAC7BlI,EAAU,OAEpB,CAAC2H,EAAMnH,UAAWwH,EAAMxH,YA2BvB,yBAAQnG,SAAUA,EAAUtD,KAAK,SAAS/B,GAAG,SAAS+R,SAAUnS,EAAMwT,cAAtE,UACI,wBAAQpB,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAOE,SATtCtG,EAAOwD,KAAI,SAAA6D,GACP,OACI,wBAAwBhN,MAAOgN,EAAE/H,QAASgI,UAAWD,EAAErQ,KAAvD,SAA8DqQ,EAAErQ,MAAnDqQ,EAAE/H,e,MClDpB,SAASgJ,GAAOzT,GAC3B,IAUIyF,EAVE2N,EAAQ1K,qBAAW6E,GACnBwF,EAAQrK,qBAAWoE,GAEjB9L,EAAe0H,qBAAWjE,GAA1BzD,WAJ0B,EAMN4D,mBAAS,IANH,mBAM3B8O,EAN2B,KAMnBC,EANmB,KAO5BpC,EAAS,CACXE,OAAQzQ,EAAa,oBAAsB,eAqB/C,SAAS4S,IACL,IAAMC,EAAW7T,EAAMiT,aAAeG,EAAM3I,QAAUsI,EAAMtI,QAC5D3E,IAAMS,IAAN,UAAajI,EAAOG,YAApB,OAAiCoV,IAC5B5N,MAAK,SAAAC,GAAaA,EAAIC,MAAQwN,EAAUzN,EAAIC,SAC5CS,OAAM,SAAAC,GAASnB,QAAQC,IAAIkB,MAWpC,OAhCI7G,EAAMgT,SACFD,EAAMvP,wBAAyBiC,GAAW,EACpCsN,EAAMvP,0BAAyBiC,GAAW,GAE/CzF,EAAMiT,eAAcxN,GAAW,GAExCV,qBAAU,WACF/E,EAAMiT,aACuB,IAAzBG,EAAM3I,QAAQnF,OAAcsO,IAC3BD,EAAU,IAEV3T,EAAMgT,WACkB,IAAzBD,EAAMtI,QAAQnF,OAAcsO,IAC3BD,EAAU,OAEpB,CAACZ,EAAMtI,QAAS2I,EAAM3I,UAkBrB,qBAAK3K,UAAU,kBAAf,SACI,yBAAQ2F,SAAUA,EAAUtD,KAAK,SAAS/B,GAAG,SAAS+R,SAAUnS,EAAM8T,aAAtE,UACI,wBAAQ1B,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAOE,SAV1CiC,EAAO/E,KAAI,SAAAwE,GACP,OACI,wBAAuB3N,MAAO2N,EAAElH,OAAQ8H,SAAUZ,EAAEhR,KAApD,SAA2DgR,EAAEhR,MAAhDgR,EAAElH,gBC3CpB,SAAS+H,GAAWhU,GAAQ,IAQnCyF,EARkC,EACFb,mBAAS,IADP,mBAC/BqP,EAD+B,KACnBC,EADmB,KAE9BlT,EAAe0H,qBAAWjE,GAA1BzD,WACF+R,EAAQrK,qBAAWoE,GACnByE,EAAS,CACXE,OAAQzQ,EAAa,iCAAgC,uBA4BzD,OAxBIhB,EAAMgT,SACFD,EAAMvP,wBAAyBiC,GAAW,EACpCsN,EAAMvP,0BAAyBiC,GAAW,GAE/CzF,EAAMiT,eAAcxN,GAAW,GAExCV,qBAAU,WAKNe,IAAMS,IAAIjI,EAAOI,gBACZuH,MAAK,SAAAC,GAAYA,EAAIC,MAAM+N,EAAchO,EAAIC,SAC7CS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,QAL/B,IAiBK,yBAAQpB,SAAUA,EAAUtD,KAAK,cAAc/B,GAAG,cAAc+R,SAAUnS,EAAMmU,oBAAhF,UACI,wBAAQ/B,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAOE,SAT1CwC,EAAWtF,KAAI,SAAAyF,GACX,OACI,wBAAgC5O,MAAO4O,EAAIC,cAA3C,SAA2DD,EAAInU,aAAlDmU,EAAIC,qB,MC7BtB,SAASC,GAAItU,GAAQ,IAQ5ByF,EAPIzE,EAAe0H,qBAAWjE,GAA1BzD,WACF+R,EAAQrK,qBAAWoE,GAFM,EAGLlI,oBAAS,GAHJ,mBAGxBjE,EAHwB,KAGjB4T,EAHiB,KAIzBhD,EAAS,CACXiD,WAAYxT,EAAa,iBAAmB,qBAC5Cb,MAAOa,EAAa,eAAiB,oBA0BzC,OAvBIhB,EAAMgT,SACFD,EAAMvP,wBAAyBiC,GAAW,EACpCsN,EAAMvP,0BAAyBiC,GAAW,GAE/CzF,EAAMiT,eAAcxN,GAAW,GAoBpC,sBAAK3F,UAAU,gBAAf,UACI,uBAAO2F,SAAUA,EAAU3F,UAAWa,EAAQ,QAAU,GAAI4R,YAAahB,EAAOiD,WAAY/E,KAAK,OAAOtN,KAAK,MAAM/B,GAAG,MAClHqU,UAAU,IAAItC,SAAU,SAAAF,GAAC,OApBrC,SAAqBA,GACjB,IAAMyC,EAAMzC,EAAEC,OAAO1M,MACF,IAAfkP,EAAIpP,SACJiP,GAAS,GACTvU,EAAM2U,aAAa,KAEL,eACJC,KAAKF,IACfH,GAAS,GACTvU,EAAM2U,aAAaD,KAGnB1U,EAAM2U,aAAa,IACnBJ,GAAS,IAOwBM,CAAY5C,MAC7C,mBAAGnS,UAAWa,EAAQ,WAAa,SAAnC,SAA8C4Q,EAAOpR,W,MCnClD,SAAS2U,GAAY9U,GAAQ,IAUpCyF,EATIzE,EAAe0H,qBAAWjE,GAA1BzD,WAD+B,EAE+B0H,qBAAW6E,GAAzED,EAF+B,EAE/BA,cAAeH,EAFgB,EAEhBA,eAAgBD,EAFA,EAEAA,gBAAiBG,EAFjB,EAEiBA,UAFjB,EAGwD3E,qBAAWoE,GAAlGH,EAH+B,EAG/BA,cAAeJ,EAHgB,EAGhBA,eAAgBD,EAHA,EAGAA,gBAAiB1B,EAHjB,EAGiBA,UAAWpH,EAH5B,EAG4BA,wBAC7D+N,EAAS,CACXlF,aAAcrL,EAAa,SAAW,eACtCf,YAAae,EAAa,MAAQ,SAClCsJ,OAAQtJ,EAAa,YAAW,SAChC0L,WAAY1L,EAAa,cAAgB,cAU7C,SAAS+T,EAAS9C,GAAI,IAAD,EACKA,EAAEC,OAAhB1M,EADS,EACTA,MACR,OAFiB,EACFpF,IAEX,IAAK,eACGJ,EAAMgT,SAAU1G,EAAgB9G,GAC3BxF,EAAMiT,cAAc/F,EAAgB1H,GAC7C,MACJ,IAAK,cACGxF,EAAMgT,SAAUzG,EAAe/G,GAC1BxF,EAAMiT,cAAc9F,EAAe3H,GAC5C,MACJ,IAAK,SACGxF,EAAMgT,SAAUpI,EAAUpF,GACrBxF,EAAMiT,cAAc5F,EAAU7H,GACvC,MACJ,IAAK,aACGxF,EAAMgT,SAAUrG,EAAcnH,GACzBxF,EAAMiT,cAAc3F,EAAc9H,IAOvD,OA/BIxF,EAAMgT,SACHxP,EAAyBiC,GAAW,EAC9BjC,IAAyBiC,GAAW,GAExCzF,EAAMiT,eAAcxN,GAAW,GA4BpC,sBAAK3F,UAAU,wBAAf,UACKE,EAAMoH,SACP,sBAAKtH,UAAU,SAAf,UACI,uBAAO2F,SAAUA,EAAU0M,SAAU,SAAAF,GAAC,OAAI8C,EAAS9C,IAAIxC,KAAK,OAAOtN,KAAK,eAAe/B,GAAG,eAAemS,YAAahB,EAAOlF,eAC7H,mBAAGvM,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UACI,uBAAO2F,SAAUA,EAAU0M,SAAU,SAAAF,GAAC,OAAI8C,EAAS9C,IAAIxC,KAAK,OAAOtN,KAAK,cAAc/B,GAAG,cAAcmS,YAAahB,EAAOtR,cAC3H,mBAAGH,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UACI,uBAAO2F,SAAUA,EAAU0M,SAAU,SAAAF,GAAC,OAAI8C,EAAS9C,IAAIxC,KAAK,OAAOgF,UAAU,KAAKtS,KAAK,SAAS/B,GAAG,SAASmS,YAAahB,EAAOjH,SAChI,mBAAGxK,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UACI,uBAAO2F,SAAUA,EAAU0M,SAAU,SAAAF,GAAC,OAAI8C,EAAS9C,IAAIxC,KAAK,OAAOtN,KAAK,aAAa/B,GAAG,aAAamS,YAAahB,EAAO7E,aACzH,mBAAG5M,UAAU,WAAb,qB,MCtDD,SAASkV,GAAShV,GAAQ,IAAD,EAEqE0I,qBAAW6E,GAA5G1B,EAF4B,EAE5BA,aAAcC,EAFc,EAEdA,WAAYE,EAFE,EAEFA,aAAcE,EAFZ,EAEYA,UAAWE,EAFvB,EAEuBA,YAAaS,EAFpC,EAEoCA,iBAAkBJ,EAFtD,EAEsDA,WAGpF8E,EAAS,CACXC,eAHiB9I,qBAAWjE,GAAzBzD,WAG0B,cAAa,WA0B9C,OACI,sBAAKlB,UAAU,eAAf,UACI,sBAAMA,UAAU,wBAAhB,SAAyCyR,EAAOC,iBAChD,sBAAK1R,UAAU,SAAf,UACI,cAAC,EAAD,CAAWoT,gBA3BvB,SAAyBjB,GACrBpG,EAAazB,SAAS6H,EAAEC,OAAO1M,SA0BsByN,cAAc,EAAMD,UAAU,IAC3E,mBAAGlT,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UACI,cAAC4R,GAAD,CAAQ8B,cA5BpB,SAAuBvB,GAAI,IAAD,EACoBA,EAAEC,OAApC+C,EADc,EACdA,cAAezP,EADD,EACCA,MACjBiN,EAFgB,EACQyC,QACJD,GAAeE,aAAa,aACtDnJ,EAAayG,GACb3G,EAAW1B,SAAS5E,KAwB0ByN,cAAc,EAAMD,UAAU,IACpE,mBAAGlT,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UACI,cAAC2T,GAAD,CAAQK,aA1BpB,SAAsB7B,GAAI,IAAD,EACqBA,EAAEC,OAApC+C,EADa,EACbA,cAAezP,EADF,EACEA,MACjB2G,EAFe,EACS+I,QACLD,GAAeE,aAAa,YAErDjJ,EAAU9B,SAAS5E,IACnB4G,EAAYD,IAqBgC8G,cAAc,EAAMD,UAAU,IAClE,mBAAGlT,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UACI,cAACkU,GAAD,CAAYG,oBAvBxB,SAA6BlC,GACzBpF,EAAiBzC,SAAS6H,EAAEC,OAAO1M,SAsB2ByN,cAAc,EAAMD,UAAU,IACpF,mBAAGlT,UAAU,WAAb,kBAEJ,cAAC,GAAD,CAAamT,cAAc,EAAMD,UAAU,EAA3C,SACI,sBAAKlT,UAAU,SAAf,UACI,cAACwU,GAAD,CAAKK,aAzBrB,SAAsBS,GAClB3I,EAAW2I,IAwBkCnC,cAAc,EAAMD,UAAU,IAC/D,mBAAGlT,UAAU,WAAb,uB,6CCpDL,SAASuV,GAAarV,GAAQ,IAAD,EACd4E,oBAAS,GADK,mBACjCjE,EADiC,KAC1B4T,EAD0B,OAEG7L,qBAAWjE,GAA9CzD,EAFgC,EAEhCA,WAAYa,EAFoB,EAEpBA,mBAFoB,EAQA6G,qBAAW4F,GAL3CP,EAHgC,EAGhCA,iBAAkBC,EAHc,EAGdA,MACtBN,EAJoC,EAIpCA,OAAQO,EAJ4B,EAI5BA,UACRN,EALoC,EAKpCA,OAAQO,EAL4B,EAK5BA,UACRN,EANoC,EAMpCA,QAASO,EAN2B,EAM3BA,WACTN,EAPoC,EAOpCA,MAAOO,EAP6B,EAO7BA,SACPN,EARoC,EAQpCA,cAAeO,EARqB,EAQrBA,iBARqB,EASYzJ,mBAAS,IATrB,mBASjC0Q,EATiC,KASbC,EATa,KAUlChE,EAAS,CACXiE,YAAaxU,EAAa,kDAAoD,mDAC9EyU,oBAAqBzU,EAAa,4BAA2B,oBAC7D0U,aAAc1U,EAAa,wBAA0B,mBACrD4M,QAAS5M,EAAa,iCAA6B,sBACnD6M,MAAO7M,EAAa,SAAW,QAC/B2M,OAAQ3M,EAAa,aAAY,SACjCf,YAAae,EAAa,mBAAqB,gBAC/C2U,WAAY3U,EAAa,uCAAyC,6BA6DtE,SAASgR,EAAcC,GAAI,IAAD,EACAA,EAAEC,OAAhB1M,EADc,EACdA,MACR,OAFsB,EACPpF,IAEX,IAAK,gBACDiO,EAAiB7I,GACjB,MACJ,IAAK,UACD2I,EAAW3I,GACX,MACJ,IAAK,QACD4I,EAAS5I,GACT,MACJ,IAAK,SACD0I,EAAU1I,GACV,MACJ,IAAK,SACDE,QAAQC,IAAIH,IA4BxB,OArBAT,qBAAU,WACNlD,EAAmByT,KACpB,CAACA,IAoBA,sBAAKxV,UAAU,kBAAf,UACI,sBAAMA,UAAU,wBAAhB,SAAyCyR,EAAOtR,cAEhD,sBAAKH,UAAU,SAAf,UACI,yBAAQ2F,SAAwC,IAA9B6P,EAAmBhQ,OAAcnD,KAAK,gBAAgB/B,GAAG,gBAAgB+R,SAAU,SAAAF,GAAC,OAAID,EAAcC,IAAxH,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAOkE,sBA1G9C1H,EAAiBY,KAAI,SAAAiH,GACjB,OACI,wBAAoCpQ,MAAOoQ,EAAIC,kBAA/C,SAAmED,EAAI3V,aAA1D2V,EAAIC,yBA2GrB,mBAAG/V,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UAEI,cAACgW,GAAA,EAAD,CAAcZ,QAASlH,EAAO+H,QAAQ,EAAMC,cA7BxD,SAAqBd,GACjB,IAAMe,EAAO,IAAIC,KAAKhB,EAAS,CAC3BiB,KAAM,CAAC,QACPC,UAAW,KAGf,OAAO,SAAC5Q,GACJ,IAAKA,EAAMF,OACP,OAAO4P,EAEX,IAAImB,EAAQJ,EAAKF,OAAOvQ,GAExB,OADA6Q,EAAQA,EAAM1H,KAAI,SAAAtJ,GAAC,OAAIA,EAAEiR,UAkBmDnU,KAAK,OACzEoU,aAAa,YAAYhE,YAAahB,EAAOmE,aAActV,GAAG,SAC9DoW,aAAa,OAAOC,eAAe,EAAMtE,SAAU,SAAA/R,GAAE,OAAI6N,EAAU7N,MACvE,mBAAGN,UAAU,WAAb,kBAGJ,sBAAKA,UAAU,SAAf,UACI,uBAAO2F,SAAwC,IAA9B6P,EAAmBhQ,OAAcE,MAAOoI,EAAS6B,KAAK,OAAOtN,KAAK,UAAU/B,GAAG,UAC5FmS,YAAahB,EAAO3D,QAASuE,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAC9D,mBAAGnS,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UACI,uBAAO2F,SAAwC,IAA9B6P,EAAmBhQ,OAAcE,MAAOqI,EAAO4B,KAAK,OAAOtN,KAAK,QAAQ/B,GAAG,QACxFmS,YAAahB,EAAO1D,MAAOsE,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAC5D,mBAAGnS,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UACI,uBAAO2F,SAAwC,IAA9B6P,EAAmBhQ,OAAcE,MAAOmI,EAAQ8B,KAAK,OAAOtN,KAAK,SAAS/B,GAAG,SAC1FmS,YAAahB,EAAO5D,OAAQwE,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAC7D,mBAAGnS,UAAU,WAAb,kBAGJ,qBAAKA,UAAU,eAAf,SArHAwV,EAAmB3G,KAAI,SAACiH,EAAKc,GACzB,OACI,sBAAK5W,UAAU,UAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,sBAAMA,UAAU,mBAAhB,SAAoCkO,EAAM2I,MAAK,SAAAC,GAAC,OAAIA,EAAEpR,QAAUoQ,EAAIlI,OAAOmJ,cAAY1U,OACvF,uBAAMrC,UAAU,mBAAhB,sBAA6C8V,EAAIjI,UACjD,uBAAM7N,UAAU,mBAAhB,oBAA2C8V,EAAIhI,cAEnD,wBAAQ6B,KAAK,SAASqH,QAAS,kBA2BxBzR,EA3BgDqR,OA4BvEnB,EAAsBD,EAAmBlQ,QAAO,SAAC+N,EAAGuD,GAAJ,OAAcA,IAAUrR,MAD5E,IAA2BA,GA3BP,SACI,cAAC,KAAD,QAPsBqR,QAsHtC,sBAAK5W,UAAU,aAAf,UACI,wBAAQgX,QAAS,kBAzG7B,WACI,GAAKlJ,GAAYD,GAAWD,GAAWG,GAAUC,EAG5C,CACDyG,GAAS,GACT,IAAI3F,EAAO,CACPlB,OAAQtD,SAASsD,GACjBC,OAAQvD,SAASuD,GACjBC,QAASxD,SAASwD,GAClBC,MAAOzD,SAASyD,GAChBC,cAAe1D,SAAS0D,IAE5ByH,EAAsB,GAAD,oBAAKD,GAAL,CAAyB1G,KAC9CT,EAAW,IACXC,EAAS,IACTF,EAAU,SAdVqG,GAAS,GAuGkBwC,IAAkBtH,KAAK,SAA9C,SACK8B,EAAOoE,aAEZ,mBAAG7V,UAAWa,EAAQ,WAAa,SAAnC,SAA8C4Q,EAAOiE,oBC/KrE,IAAMzU,GAAe,CACjBsB,iBAAkB,GAClBF,KAAM,GACNS,YAAa,GACb+N,WAAY,GACZnJ,oBAAqB,aACrBF,QAAS,aACTqB,eAAgB,aAChBoI,cAAe,cAGNiG,GAAqBtS,wBAAc3D,IAEnCkW,GAAsB,SAACjX,GAAW,IACnC+B,EAAsB2G,qBAAWjE,GAAjC1C,kBADkC,EAGM6C,mBAAS,IAHf,mBAGnCvC,EAHmC,KAGjBmF,EAHiB,OAIlB5C,mBAAS,IAJS,mBAInCzC,EAJmC,KAI7BmF,EAJ6B,OAKJ1C,mBAAS,IALL,mBAKnChC,EALmC,KAKtB+F,EALsB,OAMN/D,mBAAS,IANH,mBAMnC+L,EANmC,KAMvBI,EANuB,KAQpCmG,EAAU,CACZ7U,iBAAkBA,EAAiB8H,QAAQ,UAAW,IACtDhI,KAAMA,EACNS,YAAaA,EACb+N,WAAYA,GAOhB,OAJA5L,qBAAU,WACH5C,GAAQE,GAAoBsO,GAAc/N,GAAab,EAAkB,CAACmV,MAC9E,CAAC/U,EAAKE,EAAiBsO,EAAW/N,IAGjC,cAACoU,GAAmBzR,SAApB,CACIC,MAAO,CACHnD,mBACAF,OACAS,cACA+N,aACAnJ,sBACAF,UACAqB,iBACAoI,iBATR,SAYK/Q,EAAMoH,Y,uCCjDnB,SAAS+P,GAAS9L,GACd,IAAI+L,EACAC,EAEJ,GADAD,EAAO,EACK,gBAAR/L,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAElC,IAAK,IAAIhG,EAAI,EAAGA,GAAK,EAAGA,IAAK+R,GAAchN,SAASiB,EAAIiM,UAAUjS,EAAI,EAAGA,KAAO,GAAKA,GAIrF,GADe,MAFfgS,EAAgB,GAAPD,EAAa,KAEW,KAAVC,IAAeA,EAAQ,GAC1CA,IAAUjN,SAASiB,EAAIiM,UAAU,EAAG,KAAM,OAAO,EAErDF,EAAO,EACP,IAAK,IAAI/R,EAAI,EAAGA,GAAK,GAAIA,IAAK+R,GAAchN,SAASiB,EAAIiM,UAAUjS,EAAI,EAAGA,KAAO,GAAKA,GAItF,OADe,MAFfgS,EAAgB,GAAPD,EAAa,KAEW,KAAVC,IAAeA,EAAQ,GAC1CA,IAAUjN,SAASiB,EAAIiM,UAAU,GAAI,K,MCZ9B,SAASC,GAAYvX,GAAQ,IAAD,EACG0I,qBAAWjE,GAA7CzD,EAD+B,EAC/BA,WAAYe,EADmB,EACnBA,kBADmB,EAGsB2G,qBAAWsO,IADhE7U,EAF+B,EAE/BA,KAAMS,EAFyB,EAEzBA,YAAa+N,EAFY,EAEZA,WAAYrJ,EAFA,EAEAA,QAASqB,EAFT,EAESA,eAC5CoI,EAHmC,EAGnCA,cAAevJ,EAHoB,EAGpBA,oBAAqBnF,EAHD,EAGCA,iBAHD,EAIPuC,oBAAS,GAJF,mBAIhC4S,EAJgC,KAItBC,EAJsB,OAOH7S,oBAAS,GAPN,mBAOhC8S,EAPgC,KAOpBC,EAPoB,KASjCpG,EAAS,CACXmG,WAAY1W,EAAa,uEAAsE,kEAC/F4W,SAAU5W,EAAa,uBAAyB,2BAChDmB,KAAMnB,EAAa,uCAAyC,oCAC5D6W,iBAAkB7W,EAAa,iBAAmB,eAClD2P,WAAY3P,EAAa,yCAAqC,mCAC9D4B,YAAa5B,EAAa,gBAAkB,cAC5CqB,iBAAkBrB,EAAa,MAAQ,oBAQ3C,SAASgR,EAAcC,GAAI,IAAD,EACAA,EAAEC,OAAhB9R,EADc,EACdA,GAAIoF,EADU,EACVA,MACZ,OAAQpF,GACJ,IAAK,OACDkH,EAAQ9B,GACR,MACJ,IAAK,mBACD,IAAM6F,EAAM7F,EAAM2E,QAAQ,UAAW,IACrC3C,EAAoBhC,GAChB6F,EAAI/F,OAAS,GAAImS,GAAY,GACT,KAAfpM,EAAI/F,OACL6R,GAAS9L,IACToM,GAAY,GACZjQ,EAAoBhC,KAGpBgC,EAAoB,GAAD,OAAIhC,EAAM8R,UAAU,EAAG9R,EAAMF,OAAS,KACzDmS,GAAY,IAGXpM,EAAI/F,OAAS,IAClBmS,GAAY,GAEhB,MACJ,IAAK,aACD1G,EAAcvL,GACd,MACJ,IAAK,cACDmD,EAAenD,IAS3B,OAzCAT,qBAAU,WACD2S,GAAY3V,EAAkB,MACpC,CAAC2V,IAwCA,gCAEI,sBAAK5X,UAAU,yBAAf,UACI,oBAAGA,UAAU,mBAAb,UAAiCyR,EAAOmG,WAAxC,QACA,cAAC,KAAD,CACII,QAAQ,UACRC,cAAc,UACdC,SAAS,UACTC,eAAe,UACfC,QAASR,EACTvF,SAAU,SAAAgG,GAAM,OAAIR,EAAcQ,IAClCC,eAAgB,GAChBC,UAAU,iCACVC,gBAAgB,sCAChBC,OAAQ,GACRC,MAAO,GACP1Y,UAAU,eACVM,GAAG,uBAIX,sBAAKN,UAAW4X,EAAa,SAAW,SAAxC,UACI,uBAAOlS,MAAOrD,EAAMsD,SAAUiS,EAAYjI,KAAK,OAAOtN,KAAK,OAAO/B,GAAG,OAAOmS,YAAahB,EAAOpP,KAC5FsW,QAAQ,mCAAuBC,MAAOnH,EAAOsG,iBAAkB1F,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAChG,mBAAGnS,UAAU,WAAb,kBAGJ,sBAAKA,UAAW4X,EAAa,SAAW,SAAxC,UACI,uBAAO5X,UAAW4X,EAAa,GAAK,SAAUlS,MAAO5C,EAAa6C,SAAUiS,EAAYjI,KAAK,OACzFtN,KAAK,cAAc/B,GAAG,cAAcmS,YAAahB,EAAO3O,YACxD6V,QAAQ,mCAAuBC,MAAOnH,EAAOsG,iBAAkB1F,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAChG,mBAAGnS,UAAU,WAAb,kBAGJ,sBAAKA,UAAW4X,EAAa,GAAK,SAAlC,UACI,sBAAK5X,UAAU,SAAf,UACI,cAAC,KAAD,CAAWA,UAAW4X,EAAa,GAAK,SAAUlS,MAAOnD,EAAkBoD,SAAUiS,EACjFjI,KAAK,OAAOtN,KAAK,mBAAmB/B,GAAG,mBAAmBmS,YAAahB,EAAOlP,iBAC9EsW,KAAK,iBAAiBF,QAAQ,qCAC9BC,MAAOnH,EAAOqG,SAAUzF,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAEzD,mBAAGnS,UAAU,WAAb,kBAEJ,mBAAGA,UAAW0X,EAAW,WAAa,SAAtC,SAAiDjG,EAAOqG,cAG5D,sBAAK9X,UAAW4X,EAAa,SAAW,SAAxC,UACI,uBAAO5X,UAAW4X,EAAa,GAAK,SAAUjS,SAAUiS,EAAYlS,MAAOmL,EAAYlB,KAAK,OAAOtN,KAAK,aAAa/B,GAAG,aAAamS,YAAahB,EAAOZ,WACrJ8H,QAAQ,sCAA0BC,MAAOnH,EAAOqH,2BAA4BzG,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAC7G,mBAAGnS,UAAU,WAAb,qBCrHhB,IAAMiB,GAAe,CACjBsB,iBAAkB,GAClBgI,qBAAsB,GACtBC,OAAQ,GACRC,gBAAiB,GACjBC,SAAU,GACVC,QAAS,GACTC,oBAAqB,GACrBpD,QAAS,aACTqD,wBAAyB,aACzBC,UAAW,aACXC,mBAAoB,aACpBC,YAAa,aACbC,WAAY,aACZ8N,QAAS,cAGAC,GAAgBpU,wBAAc3D,IAE9BgY,GAAiB,SAAC/Y,GAAW,IAE9ByB,EAAiBiH,qBAAWjE,GAA5BhD,aAF6B,EAILmD,mBAAS,GAJJ,mBAI9BoU,EAJ8B,aAKbpU,mBAAS,KALI,mBAK9BzC,EAL8B,KAKxBmF,EALwB,OAMW1C,mBAAS,IANpB,mBAM9BvC,EAN8B,KAMZmF,EANY,OAOmB5C,mBAAS,IAP5B,mBAO9ByF,EAP8B,KAORM,EAPQ,OAQT/F,mBAAS,IARA,mBAQ9B0F,EAR8B,KAQtBM,EARsB,OASShG,mBAAS,IATlB,mBAS9B2F,EAT8B,KASbM,EATa,OAULjG,mBAAS,IAVJ,mBAU9B4F,EAV8B,KAUpBM,EAVoB,OAWPlG,mBAAS,IAXF,mBAW9B6F,EAX8B,KAWrBM,EAXqB,OAaiBnG,mBAAS,IAb1B,mBAa9B8F,EAb8B,KAaTQ,EAbS,OAcTtG,mBAAS,IAdA,mBAc9BuG,EAd8B,KActBC,EAdsB,OAgBbxG,oBAAS,GAhBI,mBAgB9BqU,EAhB8B,KAgBxBJ,EAhBwB,KAkBjC5W,EAAU,CACV+W,SAAU5O,SAAS4O,GACnB7W,KAAMA,EACNE,iBAAkBA,EAAiB8H,QAAQ,UAAW,IACtDvG,SAAU,CACNyG,qBAAsBD,SAASC,GAC/BC,OAAQA,EACRC,gBAAiBA,EACjBC,SAAUA,EACVC,QAASL,SAASK,KAuC1B,OAnCA1F,qBAAU,WACN,GAA6B,OAAzBsF,GACA,GAAIlI,GAAQE,GAAoBgI,GAAwBE,GAAmBC,GAAYC,EAAS,CAC5F,IAAMY,EAAMhJ,EAAiB8H,QAAQ,UAAW,IAChDlI,EAAQ2B,SAAS0G,OAAkC,OAAzBD,EAAgCgB,EAAMf,EAChErI,EAAQI,iBAAmBgJ,EAC3B5J,EAAaQ,SAGhB,GAAIE,GAAQE,GAAoBgI,GAAwBC,GAAUC,GAAmBC,GAAYC,EAAS,CAC3G,IAAMY,EAAMhJ,EAAiB8H,QAAQ,UAAW,IAChDlI,EAAQI,iBAAmBgJ,EAC3B5J,EAAaQ,MAGlB,CAACgX,EAAM9W,EAAME,EAAkBgI,EAAsBC,EAAQC,EAAiBC,EAAUC,IAE3F1F,qBAAU,WAONe,IAAMS,IAAIjI,EAAOY,wBACZ+G,MAAK,SAAAC,GAAaA,EAAIC,MAAM+E,EAAuBhF,EAAIC,SACvDS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,MAI9Bf,IAAMS,IAAN,UAAajI,EAAOE,WAApB,OACKyH,MAAK,SAAAC,GAAaA,EAAIC,MAAMiF,EAAUlF,EAAIC,SAC1CS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,QAZ/B,IAgBC,cAACiS,GAAcvT,SAAf,CACIC,MAAO,CACHkF,sBAAqBC,0BAAyBN,uBAC9C7C,sBAAqBnF,mBACrBuI,YAAWtD,UAASnF,OACpBmI,SACAO,qBACAC,cACAC,aACAI,SACA0N,WAVR,SAaK7Y,EAAMoH,Y,MChGJ,SAAS8R,GAAOlZ,GAAQ,IAAD,EACF4E,oBAAS,GADP,mBAC3B4S,EAD2B,KACjBC,EADiB,KAE1BzW,EAAe0H,qBAAWjE,GAA1BzD,WAF0B,EAI2F0H,qBAAWoQ,IADhIpO,EAH0B,EAG1BA,oBAAqBL,EAHK,EAGLA,qBAAsBM,EAHjB,EAGiBA,wBAAyBQ,EAH1C,EAG0CA,OACxEJ,GAJ8B,EAGkD8N,QAHlD,EAI9B9N,YAAYF,EAJkB,EAIlBA,mBAAoBD,EAJF,EAIEA,UAAWE,EAJb,EAIaA,YAAaR,EAJ1B,EAI0BA,OAAQjI,EAJlC,EAIkCA,iBAAkBmF,EAJpD,EAIoDA,oBAAqBF,EAJzE,EAIyEA,QAASnF,EAJlF,EAIkFA,KAC9GoP,EAAS,CACXpP,KAAMnB,EAAa,OAAS,OAC5ByQ,OAAQzQ,EAAa,yCAAqC,6BAC1D0Q,OAAQ1Q,EAAa,kBAAoB,cACzCwJ,SAAUxJ,EAAa,qBAAoB,aAC3CuJ,gBAAiBvJ,EAAa,mBAAkB,mBAChD2Q,eAAgB3Q,EAAa,yBAAwB,kBACrD4W,SAAU5W,EAAa,uBAAyB,2BAChDqB,iBAAkBrB,EAAa,MAAQ,qBACvC6W,iBAAkB7W,EAAa,iBAAmB,gBAEhD4Q,GAAM,IAAIC,MAAOC,cAAc3M,MAAM,KAAK,GAC1C4M,EAAM,IAAIF,KAAKD,EAAIzM,MAAM,KAAK,GAAK,IAAK,KAAM,MAAM2M,cAAc3M,MAAM,KAAK,GAEnF,SAAS6M,EAAcC,GAAI,IAAD,EACAA,EAAEC,OAAhB1M,EADc,EACdA,MACR,OAFsB,EACPpF,IAEX,IAAK,aACDkH,EAAQ9B,GACR,MACJ,IAAK,2BACDoF,EAAU,IACVD,EAAwBnF,GACxB,MACJ,IAAK,sBACDuF,EAAWvF,GACX,MACJ,IAAK,wBACDqF,EAAmBrF,GACnB,MACJ,IAAK,iBACDoF,EAAUpF,GACV,MACJ,IAAK,iBACD,IAAM2T,EAAW,UAAM3T,EAAN,aACjBsF,EAAYqO,GACZ,MACJ,IAAK,oBACD,IAAM9N,EAAM7F,EAAM2E,QAAQ,UAAW,IACrC3C,EAAoBhC,GAChB6F,EAAI/F,OAAS,GAAImS,GAAY,GACT,KAAfpM,EAAI/F,OACL6R,GAAS9L,IACToM,GAAY,GACZjQ,EAAoBhC,KAGpBgC,EAAoB,GAAD,OAAIhC,EAAM8R,UAAU,EAAG9R,EAAMF,OAAS,KACzDmS,GAAY,IAGXpM,EAAI/F,OAAS,IAClBmS,GAAY,IA0B5B,OACI,sBAAK3X,UAAWE,EAAMiZ,KAAO,SAAW,YAAxC,UACI,sBAAMnZ,UAAU,wBAAhB,uCAEA,sBAAKA,UAAU,SAAf,UACI,uBAAO0F,MAAOrD,EAAMsD,SAAUzF,EAAMyF,SAAUgK,KAAK,OAAOtN,KAAK,aAAa/B,GAAG,aAAamS,YAAahB,EAAOpP,KAC5GsW,QAAQ,mCAAuBC,MAAOnH,EAAOsG,iBAAkB1F,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAChG,mBAAGnS,UAAU,WAAb,kBAGJ,sBAAKA,UAAU,SAAf,UACI,yBAAQ2F,SAAUzF,EAAMyF,SACpBtD,KAAK,2BAA2B/B,GAAG,2BAA2B+R,SAAU,SAAAF,GAAC,OAAID,EAAcC,IAD/F,UAEI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAOE,SA7B9C/G,EAAoBiE,KAAI,SAAA0D,GACpB,OACI,wBAAuC7M,MAAO6M,EAAIC,qBAAlD,SAAyED,EAAIpS,aAAhEoS,EAAIC,4BA8BrB,mBAAGxS,UAAU,WAAb,kBAGJ,sBAAKA,UAAoC,OAAzBuK,EAAgC,SAAW,SAA3D,UACI,uBAAO7E,MAAO8E,EAAQ7E,SAAmC,OAAzB4E,GAAiCrK,EAAMyF,SAAUgK,KAAK,OAAOtN,KAAK,iBAAiB/B,GAAG,iBAAiB+R,SAAU,SAAAF,GAAC,OAAID,EAAcC,IAChKM,YAAahB,EAAOI,iBACxB,mBAAG7R,UAAU,WAAb,kBAGJ,gCACI,sBAAKA,UAAU,SAAf,UACI,cAAC,KAAD,CAAW0F,MAAOnD,EAAkBoD,SAAUzF,EAAMyF,SAAUgK,KAAK,OAAOtN,KAAK,oBAAoB/B,GAAG,oBAClGmS,YAAahB,EAAOlP,iBAAkBsW,KAAK,iBAAiBF,QAAQ,qCAA+BC,MAAOnH,EAAOqG,SAAUzF,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAC5J,mBAAGnS,UAAU,WAAb,kBAEJ,mBAAGA,UAAW0X,EAAW,WAAa,SAAtC,SAAiDjG,EAAOqG,cAG5D,sBAAK9X,UAAU,SAAf,UACI,yBAAQ2F,SAAUzF,EAAMyF,SAAUtD,KAAK,sBAAsB/B,GAAG,sBAAsB+R,SAAU,SAAAF,GAAC,OAAID,EAAcC,IAAnH,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAOG,SA3C9CvG,EAAOwD,KAAI,SAAA6D,GACP,OACI,wBAAwBhN,MAAOgN,EAAE/H,QAASgI,UAAWD,EAAErQ,KAAvD,SAA8DqQ,EAAErQ,MAAnDqQ,EAAE/H,eA4CnB,mBAAG3K,UAAU,WAAb,kBAGJ,mBAAGA,UAAU,mBAAb,SAAiCyR,EAAO/G,WACxC,sBAAK1K,UAAU,SAAf,UACI,uBAAO2F,SAAUzF,EAAMyF,SAAUgK,KAAK,OAAOtN,KAAK,iBAAiB/B,GAAG,iBAAiB+R,SAAU,SAAAF,GAAC,OAAID,EAAcC,IAChHS,IAAKX,EAAKY,IAAKf,IACnB,mBAAG9R,UAAU,WAAb,kBAGJ,sBAAKA,UAAU,SAAf,UACI,uBAAO2F,SAAUzF,EAAMyF,SAAUgK,KAAK,OAAOtN,KAAK,wBAAwB/B,GAAG,wBAAwB+R,SAAU,SAAAF,GAAC,OAAID,EAAcC,IAC9HM,YAAahB,EAAOhH,kBACxB,mBAAGzK,UAAU,WAAb,kBAGHE,EAAMoH,YC7InB,IAAMrG,GAAe,CACjBoB,KAAM,GACNmJ,iBAAkB,GAClB8N,mBAAoB,GACpBC,oBAAqB,GACrB/R,QAAS,aACTiE,oBAAqB,aACrB+N,sBAAuB,aACvBpI,cAAe,cAENqI,GAA6B7U,wBAAc3D,IAE3CyY,GAA8B,SAACxZ,GAAW,IAAD,EAC1B4E,mBAAS,IADiB,mBAC3CzC,EAD2C,KACrCmF,EADqC,OAEF1C,mBAAS,IAFP,mBAE3C0G,EAF2C,KAEzBC,EAFyB,OAGE3G,mBAAS,IAHX,mBAG3CwU,EAH2C,KAGvBE,EAHuB,OAKI1U,mBAAS,IALb,mBAK3CyU,EAL2C,KAKtBI,EALsB,OAOd7U,oBAAS,GAPK,mBAO3CyM,EAP2C,KAO/BH,EAP+B,OASAxI,qBAAWjE,GAArD3C,EAT0C,EAS1CA,0BAEFuC,GAX4C,EASfqV,WAEN,CACzBvX,KAAMA,EACNmJ,iBAAkBA,EAClB8N,mBAAoBA,IAkBxB,OAfArU,qBAAU,WACFsM,EACKlP,GAAQmJ,GAAoB8N,GAAoBtX,EAA0B,CAACuC,IADpEvC,EAA0B,MAE3C,CAACuP,EAAYlP,EAAMmJ,EAAkB8N,IAExCrU,qBAAU,WAKNe,IAAMS,IAAIjI,EAAOc,sBACZ6G,MAAK,SAAAC,GAAaA,EAAIC,MAAMsT,EAAuBvT,EAAIC,SACvDS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,QAL/B,IASC,cAAC0S,GAA2BhU,SAA5B,CACIC,MAAO,CACHrD,OAAMmJ,mBAAkB8N,qBACxB9R,UAASiE,sBAAqB+N,wBAC9BD,sBAAqBnI,iBAJ7B,SAOKlR,EAAMoH,Y,MCnDJ,SAASuS,GAAK3Z,GAAQ,IAAD,EACA4E,oBAAS,GADT,mBACzB4S,EADyB,KACfC,EADe,KAGxBzW,EAAe0H,qBAAWjE,GAA1BzD,WACA0G,EAAQgB,qBAAWF,GAAnBd,IAJwB,EAM2CgB,qBAAW6Q,IAD9EpX,EALwB,EAKxBA,KAAMmJ,EALkB,EAKlBA,iBAAkB+N,EALA,EAKAA,oBAC5B/R,EAN4B,EAM5BA,QAASiE,EANmB,EAMnBA,oBAAqB+N,EANF,EAMEA,sBAAuBpI,EANzB,EAMyBA,cAErDzL,EAAWiC,EAAM,GAAKA,EAAM,GAE1B6J,EAAS,CACXqI,wBAAyB5Y,EAAa,yCAA2C,GACjF6Y,oCAAqC7Y,EAAa,wCAA0C,GAC5FoY,mBAAoBpY,EAAa,gDAAkD,GACnF4W,SAAU5W,EAAa,uBAAyB,GAChD6W,iBAAkB7W,EAAa,iBAAmB,gBAkCtD,SAASgR,EAAcC,GAAI,IAAD,EACAA,EAAEC,OAAhB1M,EADc,EACdA,MACR,OAFsB,EACPpF,IAEX,IAAK,0BACDkH,EAAQ9B,GACR,MACJ,IAAK,qBACD8T,EAAsB9T,GACtB,MACJ,IAAK,sCACD+F,EAAoB/F,GAChBA,EAAMF,OAAS,GAAImS,GAAY,GACT,KAAjBjS,EAAMF,QA5C3B,SAAkB+F,GACd,IAAI+L,EACAC,EAEJ,GADAD,EAAO,EACK,gBAAR/L,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAClC,GAAY,gBAARA,EAAuB,OAAO,EAE9BA,EAAIyO,SAAS,OAAMzO,EAAMA,EAAIlB,QAAQ,MAAO,KAC5CkB,EAAIyO,SAAS,OAAMzO,EAAMA,EAAIlB,QAAQ,KAAM,KAG/C,IAAK,IAAI9E,EAAI,EAAGA,GAAK,EAAGA,IAAK+R,GAAchN,SAASiB,EAAIiM,UAAUjS,EAAI,EAAGA,KAAO,GAAKA,GAIrF,GADe,MAFfgS,EAAgB,GAAPD,EAAa,KAEW,KAAVC,IAAeA,EAAQ,GAC1CA,IAAUjN,SAASiB,EAAIiM,UAAU,EAAG,KAAM,OAAO,EAErDF,EAAO,EACP,IAAK,IAAI/R,EAAI,EAAGA,GAAK,GAAIA,IAAK+R,GAAchN,SAASiB,EAAIiM,UAAUjS,EAAI,EAAGA,KAAO,GAAKA,GAItF,OADe,MAFfgS,EAAgB,GAAPD,EAAa,KAEW,KAAVC,IAAeA,EAAQ,GAC1CA,IAAUjN,SAASiB,EAAIiM,UAAU,GAAI,KAgBzBH,CAAS3R,IAKT+F,EAAoB,GAAD,OAAI/F,EAAM8R,UAAU,EAAG9R,EAAMF,OAAS,KACzDmS,GAAY,KALZA,GAAY,GACZlM,EAAoB/F,IAOnBA,EAAMF,OAAS,IACpBmS,GAAY,IA6B5B,OAZA1S,qBAAU,WACNmM,EAAczL,KACf,IACHV,qBAAU,WACNmM,EAAczL,GACVA,IACA6B,EAAQ,IACRgS,EAAsB,IACtB/N,EAAoB,OAEzB,CAAC7D,IAGA,sBAAK5H,UAAW2F,EAAW,yBAA2B,SAAtD,UACI,sBAAM3F,UAAU,wBAAhB,kCAGA,sBAAKA,UAAU,SAAf,UACI,uBAAO2F,SAAUA,EAAUD,MAAOrD,EAAMsN,KAAK,OAAOtN,KAAK,0BAA0B/B,GAAG,0BAA0BmS,YAAahB,EAAOqI,wBAChInB,QAAQ,mCAAuBC,MAAOnH,EAAOsG,iBAAkB1F,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAChG,mBAAGnS,UAAU,WAAb,kBAGJ,gCACI,sBAAKA,UAAU,SAAf,UACI,uBAAO0F,MAAO8F,EAAkB7F,SAAUA,EAAUgK,KAAK,OAAOtN,KAAK,sCAAsC/B,GAAG,sCAAsCmS,YAAahB,EAAOsI,oCACpKpB,QAAQ,qCAA+BC,MAAOnH,EAAOqG,SAAUzF,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAChG,mBAAGnS,UAAU,WAAb,kBAEJ,mBAAGA,UAAW0X,EAAW,WAAa,SAAtC,SAAiDjG,EAAOqG,cAG5D,sBAAK9X,UAAU,SAAf,UACI,yBAAQ2F,SAAUA,EACdtD,KAAK,qBAAqB/B,GAAG,qBAAqB+R,SAAU,SAAAF,GAAC,OAAID,EAAcC,IADnF,UAEI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAO6H,qBA3C9CC,EAAoB1K,KAAI,SAAAoL,GACpB,OACI,wBAAwCvU,MAAOuU,EAAOX,mBAAtD,SAA2EW,EAAO9Z,aAArE8Z,EAAOX,0BA4CxB,mBAAGtZ,UAAU,WAAb,qB,MCpHD,SAASka,KAAc,IAC1BhZ,EAAe0H,qBAAWjE,GAA1BzD,WADyB,EAa7B0H,qBAAWF,GATXrG,EAJ6B,EAI7BA,KAAMC,EAJuB,EAIvBA,UAAWE,EAJY,EAIZA,UAAWC,EAJC,EAIDA,WAAYI,EAJX,EAIWA,WAAYN,EAJvB,EAIuBA,iBAAkBG,EAJzC,EAIyCA,SAAUsF,EAJnD,EAImDA,WAAYrF,EAJ/D,EAI+DA,gBAAiBG,EAJhF,EAIgFA,YAC7GqG,EAL6B,EAK7BA,iBAAkBnG,EALW,EAKXA,aAAcuG,EALH,EAKGA,YAAarG,EALhB,EAKgBA,yBAA0BwG,EAL1C,EAK0CA,0BACvEvG,EAN6B,EAM7BA,0BAA2B0G,EANE,EAMFA,2BAA4BG,EAN1B,EAM0BA,4BAA6B5G,EANvD,EAMuDA,2BACpFC,EAP6B,EAO7BA,iBAAkB8G,EAPW,EAOXA,kBAAmB7G,EAPR,EAOQA,cAAeC,EAPvB,EAOuBA,SAAUC,EAPjC,EAOiCA,mBAAoBG,EAPrD,EAOqDA,gCAClFuE,EAR6B,EAQ7BA,cAAeC,EARc,EAQdA,kBAAmBvF,EARL,EAQKA,mBAElC4E,EAV6B,EAU7BA,QAASC,EAVoB,EAUpBA,aAAcE,EAVM,EAUNA,aAAcE,EAVR,EAUQA,OAAQC,EAVhB,EAUgBA,cAAeM,EAV/B,EAU+BA,cAAeV,EAV9C,EAU8CA,oBAAqBK,EAVnE,EAUmEA,YAAaE,EAVhF,EAUgFA,mBAAoBe,EAVpG,EAUoGA,sBACjIH,EAX6B,EAW7BA,eAAgBK,EAXa,EAWbA,kBAAmBG,EAXN,EAWMA,gBAAiBC,EAXvB,EAWuBA,kBAAmBG,EAX1C,EAW0CA,4BAA6BG,EAXvE,EAWuEA,6BACpGG,EAZ6B,EAY7BA,8BAA+BG,EAZF,EAYEA,oBAAqB5B,EAZvB,EAYuBA,iBAAkBC,GAZzC,EAYyCA,YAAaC,GAZtD,EAYsDA,sBAAuBC,GAZ7E,EAY6EA,mCAZ7E,GAcD3D,oBAAS,GAdR,qBAc1B4S,GAd0B,MAchBC,GAdgB,MAgB3B7F,IAAM,IAAIC,MAAOC,cAAc3M,MAAM,KAAK,GAC1C4M,GAAM,IAAIF,KAAKD,GAAIzM,MAAM,KAAK,GAAK,IAAK,KAAM,MAAM2M,cAAc3M,MAAM,KAAK,GAE7EoM,GAAS,CACXC,eAAgBxQ,EAAa,+BAA2B,uBACxD6W,iBAAkB7W,EAAa,iBAAmB,eAClDiZ,YAAajZ,EAAa,4BAA8B,sBACxD4W,SAAU5W,EAAa,uBAAyB,2BAChDmB,KAAMnB,EAAa,OAAS,OAC5BoB,UAAWpB,EAAa,UAAY,YACpCsB,UAAWtB,EAAa,qBAAuB,YAC/CuB,WAAYvB,EAAa,cAAgB,cACzC2B,WAAY3B,EAAa,iBAAgB,cACzCqB,iBAAkBrB,EAAa,MAAQ,qBACvCwB,SAAUxB,EAAa,SAAW,SAClCyB,gBAAiBzB,EAAa,eAAiB,iBAC/C0B,mBAAoB1B,EAAa,yBAA2B,oBAC5D4B,YAAa5B,EAAa,gBAAkB,cAC5C6B,eAAgB7B,EAAa,wBAAuB,gBACpD8B,aAAc9B,EAAa,8BAAgC,cAC3D+B,eAAgB/B,EAAa,wBAA0B,mBACvDgC,yBAA0BhC,EAAa,6BAAyB,0BAChEiC,0BAA2BjC,EAAa,+DAA2D,6BACnGkC,2BAA4BlC,EAAa,yEAAkE,8BAC3GkZ,gCAAiClZ,EAAa,sBAAqB,GACnEmZ,iCAAkCnZ,EAAa,sBAAqB,GACpEmC,iBAAkBnC,EAAa,eAAiB,kBAChDoC,cAAepC,EAAa,6EAA+E,uEAC3GqC,SAAUrC,EAAa,oCAAsC,yBAC7DsC,mBAAoBtC,EAAa,mBAAqB,oBACtDyC,gCAAiCzC,EAAa,yDAAqD,0DACnGuC,YAA0B,GAC1BC,wBAAyBxC,EAAa,qDAAoD,kDAG9F,SAASoZ,GAAenI,GAAI,IAAD,EACuBA,EAAEC,OAAxC9R,EADe,EACfA,GAAIoF,EADW,EACXA,MAAOyP,EADI,EACJA,cAAeC,EADX,EACWA,QAClC,OAAQ9U,GACJ,IAAK,OACDkH,EAAQ9B,GACR,MACJ,IAAK,YACD+B,EAAa/B,GACb,MACJ,IAAK,YACDmC,EAAO,IAEP,IAAM0S,EAAI,IAAIxI,KACRyI,EAAYD,EAAEE,cACdC,EAAYH,EAAEI,WAAa,EAC3BC,EAAYL,EAAEM,UAEdC,EAAkBxQ,SAAS5E,EAAML,MAAM,KAAK,IAC5C0V,EAAkBzQ,SAAS5E,EAAML,MAAM,KAAK,IAC5C2V,EAAkB1Q,SAAS5E,EAAML,MAAM,KAAK,IAElD,GAAIyV,GAAmBxQ,SAAS2H,GAAI5M,MAAM,KAAK,IAAK,CAChD,IAAI4V,EAAWT,EAAYM,GACvBJ,EAAYK,GAAmBL,IAAcK,GAAmBH,EAAYI,IAC5EC,IAEJpT,EAAOoT,GAEXtT,EAAajC,GACb,MACJ,IAAK,aACDoC,EAAcpC,GACd,MACJ,IAAK,aACD0C,EAAc1C,GACd,MACJ,IAAK,mBACD,IAAM6F,EAAM7F,EAAM2E,QAAQ,UAAW,IACrC3C,EAAoBhC,GAChB6F,EAAI/F,OAAS,GAAImS,IAAY,GACT,KAAfpM,EAAI/F,OACL6R,GAAS9L,IACToM,IAAY,GACZjQ,EAAoBhC,KAGpBgC,EAAoB,GAAD,OAAIhC,EAAM8R,UAAU,EAAG9R,EAAMF,OAAS,KACzDmS,IAAY,IAGXpM,EAAI/F,OAAS,IAClBmS,IAAY,GAEhB,MACJ,IAAK,SACD5P,EAAYrC,GACZ,MACJ,IAAK,kBACDuC,EAAmBvC,GACL,MAAVA,GAAesD,EAAsB,IACzC,MACJ,IAAK,qBACDA,EAAsBtD,GACtB,MACJ,IAAK,cACDmD,EAAenD,GACf,MACJ,IAAK,iBACDwD,EAAkBxD,GAClB,MACJ,IAAK,cACD,IAAMwV,EAAiB9F,EAAQD,GAAeE,aAAa,aAE3DhM,EAAgB3D,GAChB4D,EAAkB4R,GAClB,MACJ,IAAK,2BACDzR,EAA4B/D,GAC5B,MACJ,IAAK,4BACDkE,EAA6BlE,GAC7B,MACJ,IAAK,6BACDqE,EAA8BrE,GAC9B,MACJ,IAAK,iBACDwE,EAAoBxE,GACpB,MACJ,IAAK,gBACD4C,EAAiB5C,IAwF7B,OACI,sBAAK1F,UAAU,aAAf,UACI,sBAAMA,UAAU,wBAAhB,SAAyCyR,GAAOC,iBAChD,sBAAK1R,UAAU,SAAf,UACI,uBAAO0F,MAAOrD,EAAMsD,UAAQ,EAACgK,KAAK,OAAOtN,KAAK,OAAO/B,GAAG,OAAOmS,YAAahB,GAAOpP,KAC/EsW,QAAQ,mCAAuBC,MAAOnH,GAAOsG,iBAAkB1F,SAAU,SAAAF,GAAC,OAAImI,GAAenI,MACjG,mBAAGnS,UAAU,WAAb,kBAGJ,sBAAKA,UAAU,SAAf,UACI,uBAAO0F,MAAOpD,EAAWqD,UAAQ,EAACgK,KAAK,OAAOtN,KAAK,YAAY/B,GAAG,YAAYmS,YAAahB,GAAOnP,UAC9FqW,QAAQ,mCAAuBC,MAAOnH,GAAOsG,iBAAkB1F,SAAU,SAAAF,GAAC,OAAImI,GAAenI,MACjG,mBAAGnS,UAAU,WAAb,kBAGJ,mBAAGA,UAAU,mBAAb,SAAiCyR,GAAOjP,YACxC,sBAAKxC,UAAU,SAAf,UACI,uBAAO0F,MAAOlD,EAAWmD,UAAQ,EAACgK,KAAK,OAAOtN,KAAK,YAAY/B,GAAG,YAAY+R,SAAU,SAAAF,GAAC,OAAImI,GAAenI,IACxGS,IAAKX,GAAKY,IAAKf,GAAK8G,MAAOnH,GAAOsG,mBACtC,mBAAG/X,UAAU,WAAb,kBAGJ,cAAC,GAAD,UACI,cAAC,GAAD,MAGJ,sBAAKA,UAAU,SAAf,UACI,uBAAO0F,MAAOjD,EAAYkD,UAAQ,EAACgK,KAAK,OAAOtN,KAAK,aAAa/B,GAAG,aAAamS,YAAahB,GAAOhP,WACjGkW,QAAQ,mCAAuBC,MAAOnH,GAAOsG,iBAAkB1F,SAAU,SAAAF,GAAC,OAAImI,GAAenI,MACjG,mBAAGnS,UAAU,WAAb,kBAGJ,sBAAKA,UAAU,SAAf,UACI,uBAAO0F,MAAO7C,EAAY8C,UAAQ,EAACgK,KAAK,OAAOtN,KAAK,aAAa/B,GAAG,aAAamS,YAAahB,GAAO5O,WACjG8V,QAAQ,mCAAuBC,MAAOnH,GAAOsG,iBAAkB1F,SAAU,SAAAF,GAAC,OAAImI,GAAenI,MACjG,mBAAGnS,UAAU,WAAb,kBAGJ,gCACI,sBAAKA,UAAU,SAAf,UACI,cAAC,KAAD,CAAW0F,MAAOnD,EAAkBoD,UAAQ,EAACgK,KAAK,OAAOtN,KAAK,mBAAmB/B,GAAG,mBAAmBmS,YAAahB,GAAOlP,iBACvHsW,KAAK,iBAAiBF,QAAQ,qCAA+BC,MAAOnH,GAAOqG,SAAUzF,SAAU,SAAAF,GAAC,OAAImI,GAAenI,MACvH,mBAAGnS,UAAU,WAAb,kBAEJ,mBAAGA,UAAW0X,GAAW,WAAa,SAAtC,SAAiDjG,GAAOqG,cAG5D,sBAAK9X,UAAU,SAAf,UACI,yBAAQ0F,MAAOhD,EAAUiD,UAAQ,EAAC3F,UAAU,WAAWqC,KAAK,SAAS/B,GAAG,SAAS+R,SAAU,SAAAF,GAAC,OAAImI,GAAenI,IAA/G,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,GAAO/O,WAjI9CsF,EAAW6G,KAAI,SAAAsM,GACX,OACI,wBAAyBzV,MAAOyV,EAAEzY,SAAlC,SAA6CyY,EAAEhb,aAAlCgb,EAAEzY,gBAkInB,mBAAG1C,UAAU,WAAb,kBAIJ,sBAAKA,UAAU,SAAf,UACI,yBAAQ0F,MAAO/C,EAAiBgD,UAAQ,EAAC3F,UAAU,WAAWqC,KAAK,kBAAkB/B,GAAG,kBAAkB+R,SAAU,SAAAF,GAAC,OAAImI,GAAenI,IAAxI,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,GAAO9O,kBAjI9CuF,EAAc2G,KAAI,SAAAuM,GACd,OACI,wBAAgC1V,MAAO0V,EAAEzY,gBAAzC,SAA2DyY,EAAEjb,aAAhDib,EAAEzY,uBAkInB,mBAAG3C,UAAU,WAAb,kBAGJ,cAAC,GAAD,UACI,cAAC,GAAD,CAAQmZ,KAA0B,MAApBxW,EAAwCgD,SAA8B,MAApBhD,EAAhE,SAEI,sBAAK3C,UAA+B,MAApB2C,EAA0B,SAAW,SAArD,UACI,yBAAQ+C,MAAO9C,EAAoB+C,SAA8B,MAApBhD,EAAyB3C,UAAU,WAAWqC,KAAK,qBAAqB/B,GAAG,qBAAqB+R,SAAU,SAAAF,GAAC,OAAImI,GAAenI,IAA3K,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,GAAO7O,qBAnItDuF,EAAkB0G,KAAI,SAAAuM,GAClB,OACI,wBAAmC1V,MAAO0V,EAAExY,mBAA5C,SAAiEwY,EAAEjb,aAAtDib,EAAExY,0BAoIX,mBAAG5C,UAAU,WAAb,sBAMZ,sBAAKA,UAAU,SAAf,UACI,uBAAO0F,MAAO5C,EAAa6C,UAAQ,EAACgK,KAAK,OAAOtN,KAAK,cAAc/B,GAAG,cAAcmS,YAAahB,GAAO3O,YACpG6V,QAAQ,mCAAuBC,MAAOnH,GAAOsG,iBAAkB1F,SAAU,SAAAF,GAAC,OAAImI,GAAenI,MACjG,mBAAGnS,UAAU,WAAb,kBAGJ,sBAAKA,UAAU,SAAf,UACI,yBAAQ2F,UAAQ,EAAC3F,UAAU,WAAWqC,KAAK,iBAAiB/B,GAAG,iBAAiB+R,SAAU,SAAAF,GAAC,OAAImI,GAAenI,IAA9G,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,GAAO1O,iBA3I9CoG,EAAiB0F,KAAI,SAAAwE,GACjB,OACI,wBAA0B3N,MAAO2N,EAAEvH,UAAnC,SAA+CuH,EAAEhR,MAApCgR,EAAEvH,iBA4InB,mBAAG9L,UAAU,WAAb,kBAGJ,sBAAKA,UAAU,SAAf,UACI,yBAAQ0F,MAAO1C,EAAc2C,UAAQ,EAAC3F,UAAU,WAAWqC,KAAK,cAAc/B,GAAG,cAAc+R,SAAU,SAAAF,GAAC,OAAImI,GAAenI,IAA7H,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,GAAOxO,iBA1I9CsG,EAAYsF,KAAI,SAAA6D,GACZ,OACI,wBAAwBhN,MAAOgN,EAAE/H,QAASgI,UAAWD,EAAErQ,KAAvD,SAA8DqQ,EAAErQ,MAAnDqQ,EAAE/H,eA2InB,mBAAG3K,UAAU,WAAb,kBAIJ,sBAAKA,UAAU,SAAf,UACI,yBAAQ0F,MAAOxC,EAA0ByC,UAAQ,EAAC3F,UAAU,WAAWqC,KAAK,2BAA2B/B,GAAG,2BAA2B+R,SAAU,SAAAF,GAAC,OAAImI,GAAenI,IAAnK,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,GAAOvO,2BA1I9CwG,EAA0BmF,KAAI,SAAAwM,GAC1B,OACI,wBAA2C3V,MAAO2V,EAAInY,yBAAtD,SAAiFmY,EAAIlb,aAAxEkb,EAAInY,gCA2IrB,mBAAGlD,UAAU,WAAb,kBAGJ,sBAAKA,UAAU,SAAf,UACI,yBAAQ0F,MAAOrC,EAAkBsC,UAAQ,EAAC3F,UAAU,WAAWqC,KAAK,iBAAiB/B,GAAG,iBAAiB+R,SAAU,SAAAF,GAAC,OAAImI,GAAenI,IAAvI,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,GAAOpO,mBAvH9C8G,EAAkB0E,KAAI,SAAAyM,GAClB,OACI,wBAAkC5V,MAAO4V,EAAGjY,iBAA5C,SAA+DiY,EAAGnb,aAArDmb,EAAGjY,wBAwHpB,mBAAGrD,UAAU,WAAb,kBAGJ,mBAAGA,UAAU,mBAAb,SAAiCyR,GAAOtO,4BACxC,yBAAQuC,MAAOvC,EAA2BnD,UAAU,WAAWqC,KAAK,4BAA4B/B,GAAG,4BAA4B+R,SAAU,SAAAF,GAAC,OAAImI,GAAenI,IAA7J,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,GAAO2I,kCAjJ1CvQ,EAA2BgF,KAAI,SAAA0M,GAC3B,OACI,wBAA4B7V,MAAO6V,EAAIzP,UAAvC,SAAmDyP,EAAIlZ,MAA1CkZ,EAAIzP,iBAmJzB,mBAAG9L,UAAU,mBAAb,SAAiCyR,GAAOrO,6BACxC,yBAAQsC,MAAOtC,EAA4BpD,UAAU,WAAWqC,KAAK,6BAA6B/B,GAAG,6BAA6B+R,SAAU,SAAAF,GAAC,OAAImI,GAAenI,IAAhK,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,GAAO4I,mCA9I1CrQ,EAA4B6E,KAAI,SAAA2M,GAC5B,OACI,wBAA6B9V,MAAO8V,EAAK1P,UAAzC,SAAqD0P,EAAKnZ,MAA7CmZ,EAAK1P,iBAkJ1B,gCACI,mBAAG9L,UAAU,mBAAb,SAAiCyR,GAAOnO,gBACxC,uBAAOoC,MAAOpC,EAAeqM,KAAK,OAAOtN,KAAK,gBAAgB/B,GAAG,gBAC7DqY,QAAQ,mCAAuBC,MAAOnH,GAAOsG,iBAAkB1F,SAAU,SAAAF,GAAC,OAAImI,GAAenI,SAIrG,sBAAKnS,UAAU,2BAAf,UAEI,sBAAKA,UAAU,yBAAf,UACI,oBAAGA,UAAU,mBAAb,UAAiCyR,GAAOlO,SAAxC,QACA,cAAC,KAAD,CACIyU,QAAQ,UACRC,cAAc,UACdC,SAAS,UACTC,eAAe,UACfC,QAAS7U,EACT8O,SAAU,SAAAgG,GAAM,OAAI9P,GAAY8P,IAChCC,eAAgB,GAChBC,UAAU,iCACVC,gBAAgB,sCAChBC,OAAQ,GACRC,MAAO,GACP1Y,UAAU,eACVM,GAAG,uBAIX,sBAAKN,UAAU,yBAAf,UACI,oBAAGA,UAAU,mBAAb,UAAiCyR,GAAOjO,mBAAxC,QACA,cAAC,KAAD,CACIwU,QAAQ,UACRC,cAAc,UACdC,SAAS,UACTC,eAAe,UACfC,QAAS5U,EACT6O,SAAU,SAAAgG,GAAM,OAAI7P,GAAsB6P,IAC1CC,eAAgB,GAChBC,UAAU,iCACVC,gBAAgB,sCAChBC,OAAQ,GACRC,MAAO,GACP1Y,UAAU,eACVM,GAAG,uBAIX,sBAAKN,UAAU,yBAAf,UACI,oBAAGA,UAAU,mBAAb,UAAiCyR,GAAO9N,gCAAxC,QACA,cAAC,KAAD,CACIqU,QAAQ,UACRC,cAAc,UACdC,SAAS,UACTC,eAAe,UACfC,QAASzU,EACT0O,SAAU,SAAAgG,GAAM,OAAI5P,GAAmC4P,IACvDC,eAAgB,GAChBC,UAAU,iCACVC,gBAAgB,sCAChBC,OAAQ,GACRC,MAAO,GACP1Y,UAAU,eACVM,GAAG,6BCnb3B,IAAMW,GAAe,CACjBwa,UAAU,GACVC,QAAQ,IAGCC,GAAmB/W,wBAAc3D,IAEjC2a,GAAoB,SAAC1b,GAAW,IAAD,EACN4E,mBAAS,IADH,mBACjC2W,EADiC,KACtBI,EADsB,OAEV/W,mBAAS,IAFC,mBAEjC4W,EAFiC,KAExBI,EAFwB,KAqBxC,OAjBA7W,qBAAU,WAMNe,IAAMS,IAAIjI,EAAOmB,eACZwG,MAAK,SAAAC,GAAaA,EAAIC,MAAMwV,EAAazV,EAAIC,SAC7CS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,MAI9Bf,IAAMS,IAAIjI,EAAOoB,aACZuG,MAAK,SAAAC,GAAaA,EAAIC,MAAMyV,EAAW1V,EAAIC,SAC3CS,OAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,QAX/B,IAeC,cAAC4U,GAAiBlW,SAAlB,CACIC,MAAO,CACH+V,YAAWC,WAFnB,SAKKxb,EAAMoH,Y,MChCJ,SAASsK,GAAO1R,GAAQ,IAAD,EACM0I,qBAAWjE,GAA3CzD,EAD0B,EAC1BA,WAAYY,EADc,EACdA,gBADc,EAEH8G,qBAAW+S,IAAlCD,EAF0B,EAE1BA,QAASD,EAFiB,EAEjBA,UAEXhK,EAAS,CACXiK,QAASxa,EAAa,0CAA4C,IAGlE6a,EAAmB,GA2CvB,OA5BQN,EAAU5M,KAAI,SAAAmN,GACV,OACI,sBAAKhc,UAAU,sBAA8CM,GAAI0b,EAAEC,gBAAnE,UACI,sBAAMjc,UAAU,wBAAhB,SAAyCgc,EAAEE,WAC3C,sBAAKlc,UAAU,SAAf,UACI,yBAAQ2F,UAAQ,EAACtD,KAAM2Z,EAAEC,gBAAiB3b,GAAI0b,EAAEC,gBAAiB5J,SAAU,SAAAF,GAAC,OAlBpG,SAAuBA,GAAI,IAAD,EACAA,EAAEC,OAAhB9R,EADc,EACdA,GAAIoF,EADU,EACVA,MACNyW,EAAM,CACRC,WAAY9R,SAAShK,GACrB+b,SAAU/R,SAAS5E,KAEvBqW,EAAmBA,EAAiBzW,QAAO,SAAA0W,GAAC,OAAIA,EAAEI,aAAe9R,SAAShK,OACzDyO,KAAKoN,GACtBra,EAAgBia,GAUoF7J,CAAcC,IAA9F,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAOiK,WAW3CY,EAVoBN,EAAEC,gBAWjBP,EAAQpW,QAAO,SAAAiX,GAAC,OAAIA,EAAEN,kBAAoBK,KAE9CzN,KAAI,SAAA0N,GAChB,OACI,wBAA8B7W,MAAO6W,EAAEC,cAAvC,SAAwDD,EAAEE,QAA7CF,EAAEC,sBAbP,mBAAGxc,UAAU,WAAb,oBAPkCgc,EAAEC,iBAe5D,IAAuBK,K,MC7BZ,SAASpJ,KAAY,IACxBhS,EAAe0H,qBAAWjE,GAA1BzD,WADuB,EAEC4D,oBAAS,GAFV,mBAExB4S,EAFwB,KAEdC,EAFc,KAGzB7F,GAAM,IAAIC,MAAOC,cAAc3M,MAAM,KAAK,GAC1C4M,EAAM,IAAIF,KAAKD,EAAIzM,MAAM,KAAK,GAAK,IAAK,KAAM,MAAM2M,cAAc3M,MAAM,KAAK,GAE7EoM,EAAS,CACXC,eAAgBxQ,EAAa,sBAAwB,uBACrD6W,iBAAkB7W,EAAa,iBAAmB,eAClDwC,wBAAyBxC,EAAa,uDAAsD,6DAC5FmB,KAAMnB,EAAa,OAAS,OAC5BsB,UAAWtB,EAAa,aAAe,YACvCqB,iBAAkBrB,EAAa,MAAQ,qBACvC4W,SAAU5W,EAAa,uBAAyB,2BAChD0K,kBAAmB1K,EAAa,8BAA0B,wBAC1DwK,MAAOxK,EAAa,oDAAsD,wEAf/C,EAoB8E0H,qBAAWoE,GAFhHjB,EAlBuB,EAkBvBA,aAAcC,EAlBS,EAkBTA,WAAYE,EAlBH,EAkBGA,aAAcE,EAlBjB,EAkBiBA,UAAWE,EAlB5B,EAkB4BA,YAAaS,EAlBzC,EAkByCA,iBAAkBJ,EAlB3D,EAkB2DA,WACtFjJ,EAnB2B,EAmB3BA,wBAAyBwJ,EAnBE,EAmBFA,2BAA4B7K,EAnB1B,EAmB0BA,KAAMmJ,EAnBhC,EAmBgCA,iBAC3DE,EApB2B,EAoB3BA,MAAOC,EApBoB,EAoBpBA,SAAUC,EApBU,EAoBVA,kBAAmBC,EApBT,EAoBSA,qBAAsBrE,EApB/B,EAoB+BA,QAASiE,EApBxC,EAoBwCA,oBAAqB9D,EApB7D,EAoB6DA,aAE5F,SAAS2S,EAAenI,GAAI,IAAD,EACDA,EAAEC,OAAhB9R,EADe,EACfA,GAAIoF,EADW,EACXA,MACZ,OAAQpF,GACJ,IAAK,OACDkH,EAAQ9B,GACR,MACJ,IAAK,YACD,IAAMlD,EAAS,UAAMkD,EAAN,aACfE,QAAQC,IAAIrD,GACZmF,EAAanF,GACb,MACJ,IAAK,mBACD,IAAM+I,EAAM7F,EAAM2E,QAAQ,UAAW,IACrCoB,EAAoB/F,GAChB6F,EAAI/F,OAAS,GAAImS,GAAY,GACT,KAAfpM,EAAI/F,OACL6R,GAAS9L,IACToM,GAAY,GACZlM,EAAoB/F,KAGpB+F,EAAoB,GAAD,OAAI/F,EAAM8R,UAAU,EAAG9R,EAAMF,OAAS,KACzDmS,GAAY,IAGXpM,EAAI/F,OAAS,IAClBmS,GAAY,GAEhB,MACJ,IAAK,oBACD9L,EAAqBnG,IA4BjC,OACI,sBAAK1F,UAAU,WAAf,UAEI,sBAAKA,UAAU,yBAAf,UACI,oBAAGA,UAAU,mBAAb,UAAiCyR,EAAO/N,wBAAxC,QACA,cAAC,KAAD,CACIsU,QAAQ,UACRC,cAAc,UACdC,SAAS,UACTC,eAAe,UACfC,QAAS1U,EACT2O,SAAU,SAAAgG,GAAM,OAAInL,EAA2BmL,IAC/CC,eAAgB,GAChBC,UAAU,iCACVC,gBAAgB,sCAChBC,OAAQ,GACRC,MAAO,GACP1Y,UAAU,eACVM,GAAG,uBAIX,sBAAKN,UAAW0D,EAA0B,kBAAoB,SAA9D,UACI,sBAAM1D,UAAU,wBAAhB,SAAyCyR,EAAOC,iBAEhD,sBAAK1R,UAAU,SAAf,UACI,uBAAO0F,MAAOrD,EAAMsD,SAAUjC,EAAyBiM,KAAK,OAAOtN,KAAK,OAAO/B,GAAG,OAAOmS,YAAahB,EAAOpP,KACzGsW,QAAQ,mCAAuBC,MAAOnH,EAAOsG,iBAAkB1F,SAAU,SAAAF,GAAC,OAAImI,EAAenI,MACjG,mBAAGnS,UAAU,WAAb,kBAEJ,gCACI,sBAAKA,UAAU,SAAf,UACI,cAAC,KAAD,CAAW0F,MAAO8F,EAAkB7F,SAAUjC,EAAyBiM,KAAK,OAAOtN,KAAK,mBAAmB/B,GAAG,mBAC9GmS,YAAahB,EAAOlP,iBAAkBsW,KAAK,iBAAiBF,QAAQ,qCAA+BC,MAAOnH,EAAOqG,SACjHzF,SAAU,SAAAF,GAAC,OAAImI,EAAenI,MAC9B,mBAAGnS,UAAU,WAAb,kBAEJ,mBAAGA,UAAW0X,EAAW,WAAa,SAAtC,SAAiDjG,EAAOqG,cAE5D,sBAAK9X,UAAU,SAAf,UACI,uBAAO2F,SAAUjC,EAAyBiM,KAAK,OAAOtN,KAAK,YAAY/B,GAAG,YAAY+R,SAAU,SAAAF,GAAC,OAAImI,EAAenI,IAChHS,IAAKX,EAAKY,IAAKf,IACnB,mBAAG9R,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,yBAAf,UACI,oBAAGA,UAAU,mBAAb,UAAiCyR,EAAO/F,MAAxC,QACA,cAAC,KAAD,CACIsM,QAAQ,UACRC,cAAc,UACdC,SAAS,UACTC,eAAe,UACfC,QAAS1M,EACT2G,SAAU,SAAAgG,GAAM,OAAI1M,EAAS0M,IAC7BC,eAAgB,GAChBC,UAAU,iCACVC,gBAAgB,sCAChBC,OAAQ,GACRC,MAAO,GACP1Y,UAAU,eACVM,GAAG,uBAGX,8BACI,sBAAKN,UAAU,SAAf,UACI,uBAAO2F,SAAUjC,EAAyBgC,MAAOkG,EAAmB+D,KAAK,OAAOtN,KAAK,oBAAoB/B,GAAG,oBACxGqY,QAAQ,mCAAuBC,MAAOnH,EAAOsG,iBAAkB1F,SAAU,SAAAF,GAAC,OAAImI,EAAenI,IAAIM,YAAahB,EAAO7F,oBACzH,mBAAG5L,UAAU,WAAb,oBAKR,sBAAKA,UAAU,SAAf,UACI,cAAC,EAAD,CAAWoT,gBA9F3B,SAAyBjB,GACrBpG,EAAazB,SAAS6H,EAAEC,OAAO1M,SA6F0ByN,cAAc,EAAOD,UAAU,IAC5E,mBAAGlT,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UACI,cAAC4R,GAAD,CAAQ8B,cA/FxB,SAAuBvB,GAAI,IAAD,EACoBA,EAAEC,OAApC+C,EADc,EACdA,cAAezP,EADD,EACCA,MACjBiN,EAFgB,EACQyC,QACJD,GAAeE,aAAa,aACtDnJ,EAAayG,GACb3G,EAAW1B,SAAS5E,KA2F8ByN,cAAc,EAAOD,UAAU,IACrE,mBAAGlT,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UACI,cAAC2T,GAAD,CAAQK,aA7FxB,SAAsB7B,GAAI,IAAD,EACqBA,EAAEC,OAApC+C,EADa,EACbA,cAAezP,EADF,EACEA,MACjB2G,EAFe,EACS+I,QACLD,GAAeE,aAAa,YACrDjJ,EAAU9B,SAAS5E,IACnB4G,EAAYD,IAyFoC8G,cAAc,EAAOD,UAAU,IACnE,mBAAGlT,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UACI,cAACkU,GAAD,CAAYG,oBA3F5B,SAA6BlC,GACzBpF,EAAiBzC,SAAS6H,EAAEC,OAAO1M,SA0F+ByN,cAAc,EAAOD,UAAU,IACrF,mBAAGlT,UAAU,WAAb,kBAEJ,cAAC,GAAD,CAAamT,cAAc,EAAOD,UAAU,EAA5C,SACI,sBAAKlT,UAAU,SAAf,UACI,cAACwU,GAAD,CAAKK,aA7FzB,SAAsBS,GAClB3I,EAAW2I,IA4FsCnC,cAAc,EAAOD,UAAU,IAChE,mBAAGlT,UAAU,WAAb,0B,MCrLT,SAAS0c,GAAUxc,GAAQ,IAC9BgB,EAAe0H,qBAAWjE,GAA1BzD,WAD6B,EAEI0H,qBAAWsH,GAA5CJ,EAF6B,EAE7BA,WAAYE,EAFiB,EAEjBA,QAASD,EAFQ,EAERA,QACvB0B,EAAS,CACXE,OAAQzQ,EAAa,2BAA6B,oBAClDyb,MAAOzb,EAAa,uCAAyC,uCAoBjE,OACI,sBAAKlB,UAAU,qBAAf,UACI,sBAAMA,UAAU,wBAAhB,oBACA,sBAAKA,UAAU,SAAf,UACI,yBAAQ2F,UAAQ,EACZtD,KAAK,YAAY/B,GAAG,YAAY+R,SAAU,SAAAF,GAAC,OAtB3D,SAAyBA,GAAI,IACjBzM,EAAUyM,EAAEC,OAAZ1M,MACRsK,EAAQtK,GAoBmDkX,CAAgBzK,IADnE,UAEI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAOE,SAb9C7B,EAAWjB,KAAI,SAAAgO,GACX,OACI,wBAA6BnX,MAAOmX,EAAGC,YAAvC,SAAqDD,EAAG1c,aAA3C0c,EAAGC,mBAcpB,mBAAG9c,UAAU,WAAb,kBAGJ,sBAAKA,UAAU,SAAf,UACI,uBAAO2F,UAAQ,EAACgK,KAAK,QAAQ8C,YAAY,qBACrCkG,QAAQ,8BAA2BC,MAAOnH,EAAOkL,MAAOtK,SAAU,SAAAF,GAAC,OA3BnF,SAAiBA,GAAG,IACRzM,EAAUyM,EAAEC,OAAZ1M,MACRqK,EAAQrK,GAyB2EqX,CAAQ5K,MACnF,mBAAGnS,UAAU,WAAb,qB,YCpCD,SAASgd,GAAQ9c,GAAQ,IAAD,EACG0I,qBAAWjE,GAAzCzD,EAD2B,EAC3BA,WAAYW,EADe,EACfA,cADe,EAGoE+G,qBAAW6H,GAA1GJ,EAH2B,EAG3BA,aAAc3K,EAHa,EAGbA,MAAOvF,EAHM,EAGNA,YAAaoQ,EAHP,EAGOA,gBAAiBC,EAHxB,EAGwBA,SAAU/D,EAHlC,EAGkCA,eAAgB6D,EAHlD,EAGkDA,cAC7EpN,EAA6B0F,qBAAWF,GAAxCxF,yBAJ2B,EAKT4B,oBAAS,GALA,mBAK5BjE,EAL4B,KAKrB4T,EALqB,OAOO3P,mBAAS,IAPhB,mBAO5BmY,EAP4B,KAObC,EAPa,KAS7BzL,EAAS,CACX0L,mBAAoBjc,EAAa,mDAAkD,6CACnFkc,sBAAuBlc,EAAa,sDAA+C,gDACnFf,YAAae,EAAa,oCAA6B,+BACvDwE,MAAOxE,EAAa,0BAAyB,yBAC7Cmc,qBAAsBnc,EAAa,yCAAwC,iCAG3EyE,EAAwC,MAA7BzC,GAAiE,MAA7BA,GAClB,KAA7BA,EAEJ,SAASgP,EAAcC,GAAI,IAAD,EACAA,EAAEC,OAAhB1M,EADc,EACdA,MACR,OAFsB,EACPpF,IAEX,IAAK,eACDiQ,EAAgB7K,GAChB,MACJ,IAAK,oBACD+G,EAAe/G,GACf,MACJ,IAAK,cACD,IAAI4X,EAAQ5X,EAAQ,GACpB4X,EAAQhT,SAASgT,EAAMjT,QAAQ,SAAU,KAEzCiT,GADAA,GAAgB,IACFjT,QAAQ,eAAgB,OACtCmG,EAAS8M,GACI,OAATA,GAAgB9M,EAAS,KA+DzC,OATAvL,qBAAU,YACNU,EAAwC,MAA7BzC,GAAiE,MAA7BA,GAClB,KAA7BA,IACcrB,EAAc,MAC7B,CAACqB,IACJ+B,qBAAU,WACNpD,EAAcob,KACf,CAACA,IAGA,sBAAKjd,UAAW2F,EAAW,iBAAmB,SAA9C,UACI,sBAAM3F,UAAU,wBAAhB,SAAyCyR,EAAO2L,wBAEhD,sBAAKpd,UAAU,SAAf,UACI,yBAAQ2F,SAAUA,GAAqC,IAAzBsX,EAAczX,OAAcnD,KAAK,eAAe/B,GAAG,eAAe+R,SAAU,SAAAF,GAAC,OAAID,EAAcC,IAA7H,UACI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAO0L,qBA7D9C7M,EAAczB,KAAI,SAAA0O,GACd,OACI,wBAA8B7X,MAAO6X,EAAGC,aAAxC,SAAuDD,EAAGpd,aAA7Cod,EAAGC,oBA8DpB,mBAAGxd,UAAU,WAAb,kBAGJ,sBAAKA,UAAU,SAAf,UACI,uBAAO2F,SAAUA,GAAqC,IAAzBsX,EAAczX,OAAcE,MAAOvF,EAAawP,KAAK,OAAOtN,KAAK,oBAAoB/B,GAAG,oBAAoBmS,YAAahB,EAAOtR,YACzJkS,SAAU,SAAAF,GAAC,OAAID,EAAcC,MACjC,mBAAGnS,UAAU,WAAb,kBAGJ,mBAAGA,UAAU,mBAAb,SAAiCyR,EAAO/L,QAExC,sBAAK1F,UAAU,SAAf,UACI,uBAAO2P,KAAK,OAAOjK,MAAOA,EAAOC,SAAUA,GAAqC,IAAzBsX,EAAczX,OAAcnD,KAAK,cAAc/B,GAAG,cACrGmS,YAAY,KAAKJ,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAClD,mBAAGnS,UAAU,WAAb,kBAIJ,qBAAKA,UAAU,UAAf,SAzEAid,EAAcpO,KAAI,SAAC4O,EAAI7G,GACnB,OACI,sBAAK5W,UAAU,SAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,uBAAMA,UAAU,mBAAhB,8BAA+Cyd,EAAGtd,eAClD,uBAAMH,UAAU,mBAAhB,oBAA2Cyd,EAAG/X,MAAMqR,WAAW1M,QAAQ,0BAA2B,aAEtG,wBAAQsF,KAAK,SAASqH,QAAS,kBA0BvBzR,EA1BgDqR,OA2BxEsG,EAAiBD,EAAc3X,QAAO,SAAC+N,EAAGuD,GAAJ,OAAcA,IAAUrR,MADlE,IAA4BA,GA1BR,SACI,cAAC,KAAD,QANR,UAAgCkY,EAAGtd,aAAnC,OAAiDyW,SA0EzD,sBAAK5W,UAAU,YAAf,UACI,wBAAQ2P,KAAK,SAASqH,QAAS,kBA9D3C,WACI,GAAK3G,GAAiBlQ,GAAgBuF,EAGjC,CACD+O,GAAS,GACT7O,QAAQC,IAAI6X,WAAWhY,IACvBE,QAAQC,WAAW6X,WAAWhY,IAC9B,IAAIiY,EAAS,CACTtN,aAAc/F,SAAS+F,GACvB3K,MAAOgY,WAAWhY,GAClBvF,YAAaA,GAEjB+c,EAAiB,GAAD,oBAAKD,GAAL,CAAoBU,KACpClR,EAAe,IACf+D,EAAS,SAbTiE,GAAS,GA4DgCmJ,IAArC,SACKnM,EAAO4L,uBAEZ,mBAAGrd,UAAWa,EAAQ,WAAa,SAAnC,mE,MCrID,SAASgd,GAAU3d,GAAQ,IAC9BgB,EAAe0H,qBAAWjE,GAA1BzD,WAD6B,EAEsD0H,qBAAW4G,GAA9FP,EAF6B,EAE7BA,WAAYI,EAFiB,EAEjBA,eAAgBH,EAFC,EAEDA,YAAaI,EAFZ,EAEYA,eAAe/B,EAF3B,EAE2BA,UAAUgC,EAFrC,EAEqCA,aACpEkC,EAAS,CACXC,eAAgBxQ,EAAa,wBAAuB,eACpDyQ,OAAQzQ,EAAa,8BAAgC,oBACrDqS,YAAarS,EAAa,sCAAwC,4BAClE4c,UAAW5c,EAAa,yCAA2C,GACnE6c,UAAW7c,EAAa,wCAA0C,GAClE8c,UAAW9c,EAAa,wCAA0C,IAQtE,SAAS+c,EAAe9L,GAAG,IACfzM,EAAUyM,EAAEC,OAAZ1M,MACR,GAAGA,EAAMF,QAAU,GAAG,CAClB,IAAM0Y,EAAcxY,EAAML,MAAM,KAAK,GAAGgF,QAAQ,IAAI,IAC9C8T,EAAYzY,EAAML,MAAM,KAAK,GAAGgF,QAAQ,IAAI,IAAIA,QAAQ,IAAI,IAC5D+T,EAAU1Y,EAAML,MAAM,KAAK,GAAGgF,QAAQ,IAAI,IAChDiF,EAAe4O,GACf3O,EAAa4O,GACb5Q,EAAU6Q,IAalB,OACI,sBAAKpe,UAAU,qBAAf,UACI,sBAAMA,UAAU,wBAAhB,SAAyCyR,EAAOC,iBAChD,sBAAK1R,UAAU,SAAf,UACI,yBAAQ2F,UAAQ,EACZtD,KAAK,YAAY/B,GAAG,YAAY+R,SAAU,SAAAF,GAAC,OA/B3D,SAAyBA,GAAI,IACjBzM,EAAUyM,EAAEC,OAAZ1M,MACR2J,EAAe3J,GA6B4C2Y,CAAgBlM,IADnE,UAEI,wBAAQG,cAAY,EAAC5M,MAAM,GAA3B,SAA+B+L,EAAOE,SAb9C1C,EAAWJ,KAAI,SAAAyP,GACX,OACI,wBAA6B5Y,MAAO4Y,EAAGpP,YAAvC,SAAqDoP,EAAGne,aAA3Cme,EAAGpP,mBAcpB,mBAAGlP,UAAU,WAAb,kBAEJ,cAAC,KAAD,CAAWqC,KAAK,oBAAoBgQ,SAAU,SAAAF,GAAC,OAAI8L,EAAe9L,IAAIxM,SAA0B,MAAhBuJ,EAAqBqP,SAAS,GAAG3F,MAAOnH,EAAOsM,UAC/H/d,UAA2B,MAAhBkP,EAAsB,GAAK,SAAU2J,KAAK,qBAAqBF,QAAQ,+CAElF,cAAC,KAAD,CAAWtW,KAAK,kBAAkBgQ,SAAU,SAAAF,GAAC,OAAI8L,EAAe9L,IAAIxM,SAA0B,MAAhBuJ,EAAqBqP,SAAS,GAAG3F,MAAOnH,EAAOuM,UAC7Hhe,UAA2B,MAAhBkP,EAAsB,GAAK,SAAU2J,KAAK,qBAAqBF,QAAQ,+CAElF,cAAC,KAAD,CAAWtW,KAAK,YAAYgQ,SAAU,SAAAF,GAAC,OAAI8L,EAAe9L,IAAIxM,SAA0B,MAAhBuJ,EAAqBqP,SAAS,GAAG3F,MAAOnH,EAAOqM,UACvH9d,UAA2B,MAAhBkP,EAAsB,GAAK,SAAU2J,KAAK,sBAAsBF,QAAQ,kD,MCvDhF,SAASkB,GAAK3Z,GAAQ,IAAD,EACE4E,oBAAS,GADX,mBACzB0Z,EADyB,KACdC,EADc,KAGxBvd,EAAe0H,qBAAWjE,GAA1BzD,WAHwB,EAK0D0H,qBAAWyI,GAD7FL,EAJwB,EAIxBA,mBAAoBE,EAJI,EAIJA,cAAeD,EAJX,EAIWA,cAAeE,EAJ1B,EAI0BA,6BACtDP,EAL4B,EAK5BA,gBAAiBE,EALW,EAKXA,WAAYD,EALD,EAKCA,WAAYE,EALb,EAKaA,0BAA2BK,EALxC,EAKwCA,cAChElO,EAA6B0F,qBAAWF,GAAxCxF,yBAEFyC,EAAwC,MAA7BzC,GAAiE,MAA7BA,GACpB,MAA7BA,GAAiE,MAA7BA,GAAiE,KAA7BA,EAE5E+B,qBAAU,WACNmM,EAAczL,KACf,CAACA,IAEJ,IAAM8L,EAAS,CACXC,eAAgBxQ,EAAa,kDAAwC,+BACrE0P,gBAAiB1P,EAAa,4BAAwB,mBACtD4X,2BAA4B5X,EAAa,2BAA6B,2BACtE4P,WAAY5P,EAAa,eAAc,aACvC2P,WAAY3P,EAAa,yCAAqC,mCAC9D6P,0BAA2B7P,EAAa,wCAAoC,+BAC5Ewd,UAAWxd,EAAa,wBAA0B,sBAGtD,SAASgR,EAAcC,GAAI,IAAD,EACAA,EAAEC,OAAhB1M,EADc,EACdA,MACR,OAFsB,EACPpF,IAEX,IAAK,kBACD0Q,EAAmBtL,GACnB,MACJ,IAAK,aACDwL,EAAcxL,GACd,MACJ,IAAK,aACDuL,EAAcvL,GACd,MACJ,IAAK,4BACDyL,EAA6BzL,GAC7B,IAAMiZ,EAAOjZ,EAAM2E,QAAQ,UAAW,IAElCsU,EAAKnZ,OAAS,GAAIiZ,GAAa,GACV,KAAhBE,EAAKnZ,QbxB9B,SAAqBmZ,GAEjB,GAAW,KADXA,EAAOA,EAAKtU,QAAQ,UAAU,KACf,OAAO,EACtB,GAAmB,IAAfsU,EAAKnZ,OACL,OAAO,EAEX,GAAY,kBAARmZ,GACQ,kBAARA,GACQ,kBAARA,GACQ,kBAARA,GACQ,kBAARA,GACQ,kBAARA,GACQ,kBAARA,GACQ,kBAARA,GACQ,kBAARA,GACQ,kBAARA,EACA,OAAO,EAOX,IALA,IAAIC,EAAUD,EAAKnZ,OAAS,EACxBqZ,EAAUF,EAAKnH,UAAU,EAAEoH,GAC3BE,EAAUH,EAAKnH,UAAUoH,GACzBG,EAAO,EACPC,EAAMJ,EAAU,EACXrZ,EAAIqZ,EAASrZ,GAAK,EAAGA,IAC5BwZ,GAAQF,EAAQI,OAAOL,EAAUrZ,GAAKyZ,IAClCA,EAAM,IACJA,EAAM,GAEd,IAAIE,EAAYH,EAAO,GAAK,EAAI,EAAI,GAAKA,EAAO,GAChD,GAAIG,GAAaJ,EAAQG,OAAO,GAC5B,OAAO,EACXL,GAAoB,EACpBC,EAAUF,EAAKnH,UAAU,EAAEoH,GAC3BG,EAAO,EACPC,EAAMJ,EAAU,EAChB,IAAK,IAAIrZ,EAAIqZ,EAASrZ,GAAK,EAAGA,IAC5BwZ,GAAQF,EAAQI,OAAOL,EAAUrZ,GAAKyZ,IAClCA,EAAM,IACJA,EAAM,GAGd,OADAE,EAAYH,EAAO,GAAK,EAAI,EAAI,GAAKA,EAAO,KAC3BD,EAAQG,OAAO,GahBZE,CAAYR,IAKZxN,EAA6B,GAAD,OAAIzL,EAAM8R,UAAU,EAAG9R,EAAMF,OAAS,KAClEiZ,GAAa,KALbA,GAAa,GACbtN,EAA6BzL,IAO5BiZ,EAAKnZ,OAAS,IACnBiZ,GAAa,IAQ7B,OACI,sBAAKze,UAAW2F,EAAW,UAAY,SAAvC,UACI,sBAAM3F,UAAU,wBAAhB,SAAyCyR,EAAOC,iBAChD,sBAAK1R,UAAU,SAAf,UACI,uBAAO2F,SAAUA,EAAUD,MAAOkL,EAAiBjB,KAAK,OAAOtN,KAAK,kBAAkB/B,GAAG,kBAAkBmS,YAAahB,EAAOb,gBAC3H+H,QAAQ,sCAA0BC,MAAOnH,EAAOqH,2BAA4BzG,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAC7G,mBAAGnS,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UACI,uBAAO2F,SAAUA,EAAUD,MAAOoL,EAAYnB,KAAK,OAAOtN,KAAK,aAAa/B,GAAG,aAAamS,YAAahB,EAAOX,WAC5G6H,QAAQ,sCAA0BC,MAAOnH,EAAOqH,2BAA4BzG,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAC7G,mBAAGnS,UAAU,WAAb,kBAEJ,sBAAKA,UAAU,SAAf,UACI,uBAAO2F,SAAUA,EAAUD,MAAOmL,EAAYlB,KAAK,OAAOtN,KAAK,aAAa/B,GAAG,aAAamS,YAAahB,EAAOZ,WAC5G8H,QAAQ,sCAA0BC,MAAOnH,EAAOqH,2BAA4BzG,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAC7G,mBAAGnS,UAAU,WAAb,kBAEJ,gCACI,sBAAKA,UAAU,SAAf,UACI,cAAC,KAAD,CAAW2F,SAAUA,EAAUD,MAAOqL,EAA2BpB,KAAK,OAAOtN,KAAK,4BAA4B/B,GAAG,4BACjHmS,YAAahB,EAAOV,0BAA2B4H,QAAQ,iDAAyCE,KAAK,qBAAqBD,MAAOnH,EAAOiN,UACxIrM,SAAU,SAAAF,GAAC,OAAID,EAAcC,MAE7B,mBAAGnS,UAAU,WAAb,kBAEJ,mBAAGA,UAAWwe,EAAY,YAAc,SAAxC,SAAmD/M,EAAOiN,kB,MCqB3DU,OAvFf,WAAgB,IAAD,EACiCxW,qBAAWjE,GAA/CzC,EADG,EACHA,WAAYhB,EADT,EACSA,WAAYC,EADrB,EACqBA,QAE1BsQ,EAAS,CACX4N,YAAane,EAAa,sBAAwB,wBAClDoe,WAAYpe,EAAa,iBAAmB,eAC5Cqe,WAAYre,EAAa,SAAW,QAOxC,OACI,qCACI,mCACI,oBAAGse,KAAK,2BAAR,UAAmC,cAAC,KAAD,IAAgB/N,EAAO6N,cAC1D,+BAAO7N,EAAO4N,iBAElB,uBAAMI,SAAU,SAAAtN,GAAC,OAVzB,SAAkBA,GACdA,EAAEuN,iBACFxd,IAQyBud,CAAStN,IAAIwN,OAAO,GAAGC,OAAO,GAAGC,aAAa,MAAnE,UACI,sBAAK7f,UAAU,YAAf,UAEI,sBAAKA,UAAU,aAAf,UACI,cAAC,GAAD,IACA,sBAAKA,UAAU,eAAf,UACI,cAAC,EAAD,UACI,cAAC,GAAD,MAGJ,cAAC,EAAD,UACI,cAAC,EAAD,MAGJ,cAAC,EAAD,UACI,cAAC0c,GAAD,MAGJ,cAAC,EAAD,UACI,cAAC,GAAD,MAGJ,cAAC,GAAD,UACI,cAACjF,GAAD,MAGJ,cAAC,EAAD,UACI,cAAC,GAAD,YAKZ,sBAAKzX,UAAU,kBAAf,UACI,cAAC,EAAD,UACI,cAAC,GAAD,MAGJ,cAAC,EAAD,UACI,cAAC,GAAD,SAKR,qBAAKA,UAAU,eAAf,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAIR,qBAAKA,UAAU,gBAAf,SACI,cAAC,GAAD,UACI,cAAC,GAAD,WAMZ,qBAAKA,UAAU,aAAf,SACI,yBAAQ2P,KAAK,SAASmQ,SAAU3e,EAAhC,UACKA,EAAU,GAAKsQ,EAAO8N,WACvB,mBAAGvf,UAAWmB,EAAU,wBAA0B,WAFtD,IAEmEA,EAAU,UAAY,eCpF9Fie,OAjBf,WACE,OACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,IAAD,CACEW,SAAS,YAAYvf,UAAW,KAChCwf,iBAAiB,EAAOC,aAAa,EACrCC,cAAY,EAACC,KAAK,EAAOC,cAAc,EACvCC,yBAAuB,EAAC5f,WAAS,EACjC6f,kBAAkB,IAEpB,cAAC,GAAD,UCjBRC,IAASC,OAAO,cAAC,GAAD,IAAS1c,SAAS2c,eAAe,W","file":"static/js/main.7902b6c2.chunk.js","sourcesContent":["const proxy = \"https://0292a9eb466f.ngrok.io/\"\r\n// const proxy = \"http://localhost:2525/\"\r\n\r\nconst config = {\r\n    _urlCountries: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Country\",\r\n    _urlStates: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/State/GetByCountryId/\",\r\n    _urlCities: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/City/GetByStateId/\",\r\n    _urlAdressType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/AddressType\",\r\n    _urlPhoneType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/PhoneType\",\r\n    _urlGenders: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Gender\",\r\n    _urlMaritalStatus: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/MaritalStatus\",\r\n    _urlMaritalAgreement: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/MaritalAgreement\",\r\n    _urlProfessionalOccupation: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/ProfessionalOccupation\",\r\n    _urlEducation: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Education\",\r\n    _urlEmailType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/EmailType\",\r\n    _urlIdentificationType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/IdentificationType\",\r\n    _urlWealthType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/WealthType\",\r\n    _urlRelationshipType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/RelationshipType\",\r\n    _urlBankAccountType: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/BankAccountType\",\r\n    _urlBankGetByCode: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Bank/GetByCode/\",\r\n    _urlBankGetById: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Bank/GetById/\",\r\n    _urlBank: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Bank\",\r\n    _urlQuestions: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Suity/Questions\",\r\n    _urlAnswers: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/Suity/Answers\",\r\n    _urlSaveClient: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/Save\",\r\n    _urlGetPluralAccount: proxy + \"http://bp-api-hml.brasilplural.com/onboarding/api/OnlineClient/GetPluralAccount/\"\r\n}\r\n\r\nexport default config","/* eslint-disable no-empty */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Toastify extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex df-jcspb\">\r\n                <div className=\"toastify-icon\">\r\n                    <i className={this.props.className} />\r\n                </div>\r\n                <span> {this.props.description}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport Toastify from \"./index\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction Success(id,text,autoClose=2500,draggable = true,icon = 'fas fa-check'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.success(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable  }\r\n          );\r\n    }\r\n}\r\nfunction Error(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-triangle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.error(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\nfunction Warn(id,text,autoClose=2500,draggable = true,icon = 'fas fa-exclamation-circle'){\r\n    if (toast.isActive(id)) {\r\n    } else {\r\n        toast.warn(\r\n            <Toastify\r\n              className={icon}\r\n              description={text}\r\n            />,\r\n            { toastId: id, autoClose, draggable }\r\n          );\r\n    }\r\n}\r\n\r\nexport { Success, Error, Warn }","import { createContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\n\r\nimport { Error, Success, Warn } from '../components/Toastify/Toastify'\r\n\r\nconst InitialState = {\r\n  languagePT: true,\r\n  Clicked: false,\r\n  _Json_ClientAddresses: (obj) => { },\r\n  _Json_ClientInfo: (obj) => { },\r\n  _Json_AttorneyInfo: (obj) => { },\r\n  _Json_PhoneInfo: (obj) => { },\r\n  _Json_EmailInfo: (obj) => { },\r\n  _Json_ClientIdentification: (obj) => { },\r\n  _Json_Spouse: (obj) => { },\r\n  _Json_Work: (obj) => { },\r\n  _Json_Wealths: (obj) => { },\r\n  _Json_FormSuity: (obj) => { },\r\n  _Json_BankAccounts: (obj) => { },\r\n  _Json_LegalRepresentative: (obj) => { },\r\n  _Json_PPERelateds: (obj) => { },\r\n  saveClient: () => { }\r\n}\r\n\r\nlet reqJSON = {\r\n  clientId: 0,\r\n  name: '',\r\n  shortName: '',\r\n  taxPayerRegistry: '',\r\n  birthDate: '',\r\n  fatherName: '',\r\n  genderId: 0,\r\n  maritalStatusId: 0,\r\n  maritalAgreementId: 0,\r\n  motherName: '',\r\n  nationality: '',\r\n  countryBirthId: 0,\r\n  stateBirthId: 0,\r\n  stateBirthName: '',\r\n  professionalOccupationId: 0,\r\n  residenceInOtherCountryId: 0,\r\n  otherTaxResidenceCountryId: 0,\r\n  educationLevelId: 0,\r\n  ppeOccupation: '',\r\n  usPerson: false,\r\n  isAssociatedPerson: false,\r\n  urlCallback: '',\r\n  isAcceptedOrderAttorney: false,\r\n  isAdministratorInAnotherAccount: false,\r\n  attorneys: [],\r\n  spouse: {},\r\n  document: {},\r\n  work: {},\r\n  phones: [],\r\n  emails: [],\r\n  bankAccounts: [],\r\n  wealths: [],\r\n  addresses: [],\r\n  ppeRelateds: [],\r\n  formSuity: [],\r\n  legalRepresentatives: [],\r\n  authentication: {\r\n    login: 'APITEST',\r\n    password: 'APITEST'\r\n  }\r\n}\r\n\r\nexport const FormContext = createContext(InitialState);\r\n\r\nexport const FormProvider = (props) => {\r\n  const [languagePT, setLanguagePT] = useState(true)\r\n  const [Clicked, setClicked] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const url = window.location.pathname.split(\"/\")\r\n    const enUS = url.filter(i => i === 'en')\r\n    if (enUS.length > 0) setLanguagePT(false)\r\n    else setLanguagePT(true)\r\n  }, [])\r\n\r\n  function _Json_ClientAddresses(obj) {\r\n    reqJSON.addresses = [obj]\r\n  }\r\n  function _Json_ClientInfo(obj) {\r\n    reqJSON = { ...reqJSON, ...obj }\r\n  }\r\n  function _Json_AttorneyInfo(obj) {\r\n    reqJSON.attorneys = obj\r\n  }\r\n  function _Json_PhoneInfo(obj) {\r\n    reqJSON.phones = [obj]\r\n  }\r\n  function _Json_EmailInfo(obj) {\r\n    reqJSON.emails = [obj]\r\n  }\r\n  function _Json_ClientIdentification(obj) {\r\n    reqJSON.document = obj\r\n  }\r\n  function _Json_Spouse(obj) {\r\n    reqJSON.spouse = obj\r\n  }\r\n  function _Json_Work(obj) {\r\n    reqJSON.work = obj\r\n  }\r\n  function _Json_Wealths(obj) {\r\n    reqJSON.wealths = obj\r\n  }\r\n  function _Json_FormSuity(obj) {\r\n    reqJSON.formSuity = obj\r\n  }\r\n  function _Json_PPERelateds(obj) {\r\n    reqJSON.ppeRelateds = obj\r\n  }\r\n  function _Json_BankAccounts(obj) {\r\n    reqJSON.bankAccounts = obj\r\n  }\r\n  function _Json_LegalRepresentative(obj) {\r\n    reqJSON.legalRepresentatives = obj\r\n  }\r\n  function saveClient() {\r\n    const required = reqJSON.professionalOccupationId === 8 || reqJSON.professionalOccupationId === 9 ? false : true\r\n    if (reqJSON.bankAccounts.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione uma conta bancaria' : 'Add a bank account'\r\n      Warn(\r\n        \"Addbankaccount\",\r\n        ErrorMessage,\r\n        10000,\r\n        false\r\n      );\r\n    }\r\n    else if (required && reqJSON.wealths.length === 0) {\r\n      const ErrorMessage = languagePT ? 'Adicione um bem/finança' : 'Add a wealth / finance'\r\n      Warn(\r\n        \"Addwealth/finance\",\r\n        ErrorMessage,\r\n        10000,\r\n        false\r\n      );\r\n    }\r\n    else {\r\n      setClicked(true)\r\n      console.log(JSON.stringify(reqJSON))\r\n      const headers = {\r\n        'X-Requested-With': '',\r\n      }\r\n\r\n      axios.post(config._urlSaveClient, reqJSON, { headers })\r\n        .then(res => {\r\n          if (res.data) {\r\n            CheckClient(res.data.code)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          setClicked(false)\r\n          if (err.response) {\r\n            // Request made and server responded\r\n            if (err.response.data.innerMessage) {\r\n              Error(\r\n                \"SaveClient\",\r\n                err.response.data.innerMessage,\r\n                20000,\r\n                false\r\n              );\r\n            }\r\n            else {\r\n              console.log('Error', err.message);\r\n              const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n              Error(\r\n                \"ErrorOnCreateClient\",\r\n                ErrorMessage,\r\n                20000,\r\n                false\r\n              );\r\n            }\r\n          }\r\n          else if (err.request || err.response) {\r\n            // The request was made but no response was received\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              20000,\r\n              false\r\n            );\r\n          } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              10000,\r\n              false\r\n            );\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  function CheckClient(clientCode) {\r\n    const interval = setInterval(() => {\r\n      axios.get(`${config._urlGetPluralAccount}${clientCode}`)\r\n        .then(res => {\r\n          if (res.data.clientCode) {\r\n            // Cliente cadastrado com sucesso\r\n            clearInterval(interval)\r\n            const SuccessMessage = languagePT ? 'Cadastro Concluido com Sucesso' : 'Registration Completed Successfully'\r\n            setClicked(false)\r\n            Success('ClientCreated', SuccessMessage, 5000, false)\r\n            // setTimeout(() => {\r\n            //   window.location.replace(\"https://flow2pay.com.br/\");\r\n            // }, 5000);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (err.response) {\r\n            // Request made and server responded\r\n            if (err.response.data.innerMessage) {\r\n              setClicked(true)\r\n              const WarnMessage = languagePT ? 'O cadastro está na fila de análise/aprovação interna' : 'The registration is in the internal review / approval queue'\r\n              Warn(\r\n                \"RegistryInQueue\",\r\n                WarnMessage,\r\n                10000,\r\n                false\r\n              );\r\n            }\r\n          }\r\n          else if (err.request) {\r\n            setClicked(false)\r\n            // The request was made but no response was received\r\n            console.log(err.request);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              10000,\r\n              false\r\n            );\r\n          } else {\r\n            setClicked(false)\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', err.message);\r\n            const ErrorMessage = languagePT ? 'Ocorreu um erro, verifique as informações e tente novamente. Caso persista tente novamente mais tarde.' : 'An error occurred, check the information and try again. If it persists, try again later.'\r\n            Error(\r\n              \"ErrorOnCreateClient\",\r\n              ErrorMessage,\r\n              10000,\r\n              false\r\n            );\r\n          }\r\n        })\r\n    }, 10000);\r\n\r\n  }\r\n\r\n  return (\r\n    <FormContext.Provider\r\n      value={{\r\n        languagePT,\r\n        _Json_ClientAddresses,\r\n        _Json_ClientInfo,\r\n        _Json_AttorneyInfo,\r\n        _Json_PhoneInfo,\r\n        _Json_EmailInfo,\r\n        _Json_ClientIdentification,\r\n        _Json_Spouse,\r\n        _Json_Work,\r\n        _Json_Wealths,\r\n        _Json_LegalRepresentative,\r\n        _Json_BankAccounts,\r\n        _Json_FormSuity,\r\n        _Json_PPERelateds,\r\n        Clicked,\r\n        saveClient\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FormContext.Provider>\r\n  );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from 'axios'\r\nimport config from \"../config\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    name: String,\r\n    setname: () => { },\r\n    shortName: String,\r\n    setshortName: () => { },\r\n    taxPayerRegistry: String,\r\n    settaxPayerRegistry: () => { },\r\n    birthDate: String,\r\n    setbirthDate: () => { },\r\n    age: String,\r\n    setAge: () => { },\r\n    fatherName: String,\r\n    setfatherName: () => { },\r\n    genderId: String,\r\n    setgenderId: () => { },\r\n    gendersIds: [],\r\n    maritalStatusId: String,\r\n    setmaritalStatusId: () => { },\r\n    maritalStatus: [],\r\n    maritalAgreementId: String,\r\n    maritalAgreements: [],\r\n    motherName: String,\r\n    setmotherName: () => { },\r\n    nationality: String,\r\n    countryBirthId: String,\r\n    getCountriesBirthId: () => { },\r\n    stateBirthId: String,\r\n    stateBirthName: String,\r\n    professionalOccupationId: String,\r\n    residenceInOtherCountryId: String,\r\n    otherTaxResidenceCountryId: String,\r\n    educationLevelId: String,\r\n    ppeOccupation: String,\r\n    setppeOccupation: () => { },\r\n    usPerson: String,\r\n    setusPerson: () => { },\r\n    isAssociatedPerson: String,\r\n    setisAssociatedPerson: () => { },\r\n    urlCallback: String,\r\n    isAcceptedOrderAttorney: String,\r\n    isAdministratorInAnotherAccount: String,\r\n    setisAdministratorInAnotherAccount: () => { }\r\n}\r\nexport const ClientInfoContext = createContext(InitialState);\r\n\r\nexport const ClientInfoProvider = (props) => {\r\n    const {_Json_ClientInfo, _Json_Spouse} = useContext(FormContext)\r\n\r\n    //#region States\r\n\r\n    const [clientId, setclientId] = useState(0)\r\n    const [name, setname] = useState('')\r\n    const [shortName, setshortName] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [age, setAge] = useState('')\r\n    const [fatherName, setfatherName] = useState('')\r\n    const [motherName, setmotherName] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    //! Gender variables\r\n    const [genderId, setgenderId] = useState('')\r\n    const [gendersIds, setgendersIds] = useState([])\r\n    //! Marital variables\r\n    const [maritalStatusId, setmaritalStatusId] = useState('')\r\n    const [maritalStatus, setMaritalStatus] = useState([])\r\n    const [maritalAgreementId, setmaritalAgreementId] = useState('')\r\n    const [maritalAgreements, setmaritalAgreements] = useState([])\r\n    //! Country and state birth variables\r\n    const [countryBirthId, setcountryBirthId] = useState('')\r\n    const [countriesBirthId, setcountriesBirthId] = useState([])\r\n    const [stateBirthId, setstateBirthId] = useState('')\r\n    const [stateBirthName, setstateBirthName] = useState('')\r\n    const [statesBirth, setstatesBirth] = useState([])\r\n    //! Professional ocupation variables\r\n    const [professionalOccupationId, setprofessionalOccupationId] = useState('')\r\n    const [professionalOccupationsId, setprofessionalOccupationsId] = useState([])\r\n    //! Residence in other country variables\r\n    const [residenceInOtherCountryId, setresidenceInOtherCountryId] = useState('')\r\n    const [residencesInOtherCountryId, setresidencesInOtherCountryId] = useState([])\r\n    //! Other tax residence in other country variables\r\n    const [otherTaxResidenceCountryId, setotherTaxResidenceCountryId] = useState('')\r\n    const [otherTaxResidencesCountryId, setotherTaxResidencesCountryId] = useState([])\r\n    //! Education level variables\r\n    const [educationLevelId, seteducationLevelId] = useState('')\r\n    const [educationsLevelId, seteducationsLevelId] = useState([])\r\n    const [ppeOccupation, setppeOccupation] = useState('')\r\n    const [usPerson, setusPerson] = useState(false)\r\n    const [isAssociatedPerson, setisAssociatedPerson] = useState(false)\r\n    const [isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount] = useState(false)\r\n\r\n    //#endregion\r\n\r\n    const reqJSON = {\r\n        clientId: clientId,\r\n        name: name,\r\n        shortName: shortName,\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        birthDate: `${birthDate}T00:00:00`,\r\n        fatherName: fatherName,\r\n        genderId: parseInt(genderId),\r\n        maritalStatusId: parseInt(maritalStatusId),\r\n        maritalAgreementId: maritalAgreementId ? parseInt(maritalAgreementId) : 0,\r\n        motherName: motherName,\r\n        nationality: nationality,\r\n        countryBirthId: parseInt(countryBirthId),\r\n        stateBirthId: parseInt(stateBirthId),\r\n        stateBirthName: stateBirthName,\r\n        professionalOccupationId: parseInt(professionalOccupationId),\r\n        residenceInOtherCountryId: parseInt(residenceInOtherCountryId),\r\n        otherTaxResidenceCountryId: parseInt(otherTaxResidenceCountryId),\r\n        educationLevelId: parseInt(educationLevelId),\r\n        ppeOccupation: ppeOccupation,\r\n        usPerson: usPerson,\r\n        isAssociatedPerson: isAssociatedPerson,\r\n        isAdministratorInAnotherAccount: isAdministratorInAnotherAccount,\r\n    }\r\n    useEffect(() => {\r\n        if(maritalStatusId !== \"2\") _Json_Spouse({})\r\n    }, [maritalStatusId])\r\n\r\n    // Campos não obrigatórios\r\n    useEffect(() => {\r\n        _Json_ClientInfo(reqJSON)\r\n    }, [usPerson, isAssociatedPerson,ppeOccupation, maritalAgreementId, otherTaxResidenceCountryId,residenceInOtherCountryId,isAdministratorInAnotherAccount])\r\n\r\n    // Campos obrigatórios\r\n    useEffect(() => {\r\n        if (name && shortName && birthDate && fatherName && motherName && taxPayerRegistry && genderId && maritalStatusId && nationality && countryBirthId &&\r\n            stateBirthId && stateBirthName && professionalOccupationId  && educationLevelId) {\r\n            _Json_ClientInfo(reqJSON)\r\n        }\r\n    }, [name, shortName, birthDate, fatherName, motherName, taxPayerRegistry, genderId, maritalStatusId, nationality, countryBirthId,\r\n        stateBirthId, stateBirthName, professionalOccupationId, educationLevelId])\r\n\r\n\r\n    useEffect(() => {\r\n            getGendersIds()\r\n            getMaritalStatus()\r\n            getMaritalAgreements()\r\n            getCountries()\r\n            getProfessionalOccupations()\r\n            getEducation()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(countryBirthId === '') setstatesBirth([])\r\n        else getStatesBirth() \r\n    }, [countryBirthId])\r\n\r\n\r\n    function getGendersIds() {\r\n        axios.get(config._urlGenders)\r\n            .then(res => setgendersIds(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalStatus() {\r\n        axios.get(config._urlMaritalStatus)\r\n            .then(res => setMaritalStatus(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getMaritalAgreements() {\r\n        axios.get(config._urlMaritalAgreement)\r\n            .then(res => setmaritalAgreements(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => {\r\n                setcountriesBirthId(res.data)\r\n                setresidencesInOtherCountryId(res.data)\r\n                setotherTaxResidencesCountryId(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getStatesBirth() {\r\n        axios.get(`${config._urlStates}${countryBirthId}`)\r\n            .then(res => setstatesBirth(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getProfessionalOccupations() {\r\n        axios.get(config._urlProfessionalOccupation)\r\n            .then(res => setprofessionalOccupationsId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n    function getEducation() {\r\n        axios.get(config._urlEducation)\r\n            .then(res => seteducationsLevelId(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <ClientInfoContext.Provider\r\n            value={{\r\n                name, setname,\r\n                shortName, setshortName,\r\n                taxPayerRegistry, settaxPayerRegistry,\r\n                birthDate, setbirthDate, age, setAge,\r\n                fatherName, setfatherName,\r\n                motherName, setmotherName,\r\n                genderId, setgenderId, gendersIds,\r\n                maritalStatusId, setmaritalStatusId, maritalStatus,\r\n                maritalAgreements, setmaritalAgreementId,\r\n                nationality, setnationality,\r\n                setcountryBirthId, countriesBirthId,\r\n                setstateBirthId, setstateBirthName, statesBirth,\r\n                setprofessionalOccupationId, professionalOccupationsId,professionalOccupationId,\r\n                residencesInOtherCountryId, setresidenceInOtherCountryId,\r\n                otherTaxResidencesCountryId, setotherTaxResidenceCountryId,\r\n                seteducationLevelId, educationsLevelId,\r\n                ppeOccupation,setppeOccupation,\r\n                usPerson, setusPerson,\r\n                isAssociatedPerson, setisAssociatedPerson,\r\n                isAdministratorInAnotherAccount, setisAdministratorInAnotherAccount\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ClientInfoContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from '../contexts/FormContexts'\r\nimport { ClientInfoContext } from \"./ClientInfoContexts\"\r\n\r\nconst InitialState = {\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n}\r\n\r\nexport const IdentificationTypeContext = createContext(InitialState);\r\n\r\nexport const IdentificationTypeProvider = (props) => {\r\n\r\n    const { _Json_ClientIdentification } = useContext(FormContext)\r\n    const { taxPayerRegistry } = useContext(ClientInfoContext)\r\n\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    let reqJSON = {\r\n        identificationTypeId: parseInt(identificationTypeId),\r\n        number: number,\r\n        emissionInssuer: emissionInssuer,\r\n        emission: `${emission}T00:00:00`,\r\n        stateId: parseInt(stateId),\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (identificationTypeId && emissionInssuer && emission && stateId) {\r\n            if (identificationTypeId === \"40\") {\r\n                const cpf = taxPayerRegistry.replace(/[^\\d]+/g, '')\r\n                setnumber(cpf)\r\n                _Json_ClientIdentification(reqJSON)\r\n            }\r\n            else if (number) _Json_ClientIdentification(reqJSON)\r\n        }\r\n    }, [identificationTypeId, number, emissionInssuer, emission, stateId,taxPayerRegistry])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <IdentificationTypeContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                setnumber,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states\r\n            }}\r\n        >\r\n            {props.children}\r\n        </IdentificationTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    isAcceptedOrderAttorney: false,\r\n    name: '',\r\n    setname: () => { },\r\n    taxpayerRegistry: '',\r\n    settaxpayerRegistry: () => { },\r\n    birthDate: '',\r\n    setbirthDate: () => { },\r\n    isPEP: false,\r\n    setisPEP: () => { },\r\n    actionDescription: '',\r\n    setactionDescription: () => { },\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setneighborhood: () => { },\r\n    description: '',\r\n    setdescription: () => { },\r\n    zipCode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setnumber: () => { },\r\n    complement: '',\r\n    setcomplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { },\r\n}\r\nexport const AttorneyContext = createContext(InitialState);\r\n\r\nexport const AttorneyProvider = (props) => {\r\n    const [isAcceptedOrderAttorney, setisAcceptedOrderAttorney] = useState(false)\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [birthDate, setbirthDate] = useState('')\r\n    const [isPEP, setisPEP] = useState(false)\r\n    const [actionDescription, setactionDescription] = useState('')\r\n    const [countryId, setCountryId] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setneighborhood] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const [zipCode, setZipCode] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [complement, setcomplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_AttorneyInfo } = useContext(FormContext)\r\n\r\n    const attorneys = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry.replace(/[^\\d]+/g, ''),\r\n        birthDate: birthDate,\r\n        isPEP: isPEP,\r\n        actionDescription: actionDescription,\r\n        address: {\r\n            countryId: countryId,\r\n            stateId: stateId,\r\n            stateName: stateName,\r\n            cityId: cityId,\r\n            cityName: cityName,\r\n            neighborhood: neighborhood,\r\n            description: description,\r\n            zipCode: zipCode,\r\n            number: number,\r\n            complement: complement,\r\n            typeAddressId: typeAddressId\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(!isAcceptedOrderAttorney) _Json_AttorneyInfo([])\r\n        else if (isAcceptedOrderAttorney && name && taxpayerRegistry && birthDate && actionDescription && countryId && stateId && stateName && cityId && cityName &&\r\n            neighborhood && description && zipCode && number && complement && typeAddressId) {\r\n            _Json_AttorneyInfo([attorneys])\r\n        }\r\n    }, [isAcceptedOrderAttorney, name, taxpayerRegistry, birthDate, isPEP, actionDescription, countryId, stateId, stateName, cityId, cityName,\r\n        neighborhood, description, zipCode, number, complement, typeAddressId])\r\n\r\n    return (\r\n        <AttorneyContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, birthDate, isPEP, actionDescription,\r\n                countryId, isAcceptedOrderAttorney, stateId,\r\n                setisAcceptedOrderAttorney, setname, settaxpayerRegistry,\r\n                setbirthDate, setisPEP, setactionDescription,\r\n                setCountryId, setStateId, setStateName, setCityId, setneighborhood,\r\n                setCityName, setTypeAddressId, setZipCode, setdescription, setnumber, setcomplement\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AttorneyContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    countryId: '',\r\n    setCountryId: () => { },\r\n    stateId: '',\r\n    setStateId: () => { },\r\n    stateName: '',\r\n    setStateName: () => { },\r\n    cityId: '',\r\n    setCityId: () => { },\r\n    cityName: '',\r\n    setCityName: () => { },\r\n    neighborhood: '',\r\n    setNeighborhood: () => { },\r\n    description: '',\r\n    setDescription: () => { },\r\n    zipcode: '',\r\n    setZipCode: () => { },\r\n    number: '',\r\n    setNumber: () => { },\r\n    complement: '',\r\n    setComplement: () => { },\r\n    typeAddressId: '',\r\n    setTypeAddressId: () => { }\r\n}\r\nexport const AdressesContext = createContext(InitialState);\r\n\r\nexport const AdressesProvider = (props) => {\r\n    const [countryId, setCountryId] = useState('')\r\n    const [stateId, setStateId] = useState('')\r\n    const [cityId, setCityId] = useState('')\r\n    const [zipcode, setZipCode] = useState('')\r\n    const [stateName, setStateName] = useState('')\r\n    const [cityName, setCityName] = useState('')\r\n    const [neighborhood, setNeighborhood] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [complement, setComplement] = useState('')\r\n    const [typeAddressId, setTypeAddressId] = useState('')\r\n\r\n    const { _Json_ClientAddresses } = useContext(FormContext)\r\n\r\n    const AdressJson = {\r\n        \"countryId\": countryId,\r\n        \"stateId\": stateId,\r\n        \"stateName\": stateName,\r\n        \"cityId\": cityId,\r\n        \"cityName\": cityName,\r\n        \"neighborhood\": neighborhood,\r\n        \"description\": description,\r\n        \"zipCode\": zipcode,\r\n        \"number\": number,\r\n        \"complement\": complement,\r\n        \"typeAddressId\": typeAddressId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cityId && cityName && complement && countryId && description && neighborhood && number && stateId && stateName && typeAddressId && zipcode) {\r\n            _Json_ClientAddresses(AdressJson)\r\n        }\r\n    }, [cityId, cityName, complement, countryId, description, neighborhood, number, stateId, stateName, typeAddressId, zipcode])\r\n\r\n    return (\r\n        <AdressesContext.Provider\r\n            value={{\r\n                countryId,\r\n                setCountryId,\r\n                stateId,\r\n                setStateId,\r\n                setStateName,\r\n                cityId,\r\n                setCityId,\r\n                setCityName,\r\n                zipcode,\r\n                setZipCode,\r\n                stateName,\r\n                cityName,\r\n                neighborhood,\r\n                setNeighborhood,\r\n                description,\r\n                setDescription,\r\n                number,\r\n                setNumber,\r\n                complement,\r\n                setComplement,\r\n                typeAddressId,\r\n                setTypeAddressId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AdressesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    bankId: '',\r\n    agency: '',\r\n    account: '',\r\n    digit: '',\r\n    typeAccountId: '',\r\n    bankAccountTypes: [],\r\n    banks: [],\r\n    setbankId: () => { },\r\n    setagency: () => { },\r\n    setaccount: () => { },\r\n    setdigit: () => { },\r\n    settypeAccountId: () => { }\r\n}\r\n\r\nexport const BankAccountsContext = createContext(InitialState);\r\n\r\nexport const BankAccountsProvider = (props) => {\r\n    const [bankId, setbankId] = useState('')\r\n    const [agency, setagency] = useState('')\r\n    const [account, setaccount] = useState('')\r\n    const [digit, setdigit] = useState('')\r\n    const [typeAccountId, settypeAccountId] = useState('')\r\n\r\n\r\n    const [bankAccountTypes, setBankAccountTypes] = useState([])\r\n    const [banks, setBanks] = useState([])\r\n\r\n    useEffect(() => {\r\n        GetAccountTypes()\r\n        GetBanks()\r\n    }, [])\r\n\r\n    function GetAccountTypes() {\r\n        axios.get(config._urlBankAccountType)\r\n            .then(res => { if (res.data) setBankAccountTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function GetBanks() {\r\n        const newBanks = []\r\n        axios.get(config._urlBank)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    res.data.map(i => {\r\n                        const bank = { name: `${i.code} ${i.name}`, value: `${i.bankId}` }\r\n                        newBanks.push(bank)\r\n                    })\r\n                }\r\n            })\r\n            .then(res => {\r\n                setBanks(newBanks)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <BankAccountsContext.Provider\r\n            value={{\r\n                bankAccountTypes, banks,\r\n                bankId, setbankId,\r\n                agency, setagency,\r\n                account, setaccount,\r\n                digit, setdigit,\r\n                typeAccountId, settypeAccountId\r\n            }}\r\n        >\r\n            {props.children}\r\n        </BankAccountsContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    phoneTypes: [],\r\n    phoneTypeId: '',\r\n    countryCode: '',\r\n    stateCode: '',\r\n    number: '',\r\n    setPhoneTypeId: () => { },\r\n    setCountryCode: () => { },\r\n    setStateCode: () => { },\r\n    setNumber: () => { },\r\n}\r\n\r\n\r\n\r\nexport const PhonesContext = createContext(InitialState);\r\n\r\nexport const PhonesProvider = (props) => {\r\n    const { _Json_PhoneInfo } = useContext(FormContext)\r\n    const [phoneTypeId, setPhoneTypeId] = useState('')\r\n    const [countryCode, setCountryCode] = useState('')\r\n    const [stateCode, setStateCode] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [phoneTypes, setPhoneTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        countryCode: countryCode,\r\n        stateCode: stateCode,\r\n        number: number,\r\n        type: parseInt(phoneTypeId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (countryCode && stateCode && number && phoneTypeId) _Json_PhoneInfo(reqJSON)\r\n    }, [countryCode, stateCode, number, phoneTypeId])\r\n\r\n    useEffect(() => {\r\n            getPhoneTypes()\r\n    }, [])\r\n\r\n\r\n    function getPhoneTypes() {\r\n        axios.get(config._urlPhoneType)\r\n            .then(res => {\r\n                if (res.data) setPhoneTypes(res.data)\r\n            })\r\n            .catch(err => console.log(`${err}`))\r\n    }\r\n\r\n    return (\r\n        <PhonesContext.Provider\r\n            value={{\r\n                phoneTypes, setPhoneTypeId, phoneTypeId,\r\n                countryCode, setCountryCode,\r\n                stateCode, setStateCode,\r\n                number, setNumber\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PhonesContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nconst InitialState = {\r\n    mail: '',\r\n    type: '',\r\n    isCorrespondency: true,\r\n    emailTypes: [],\r\n    setMail: () => { },\r\n    setType: () => { },\r\n    setIsCorrespondency: () => { },\r\n}\r\n\r\nexport const EmailContext = createContext(InitialState);\r\n\r\nexport const EmailProvider = (props) => {\r\n    const { _Json_EmailInfo } = useContext(FormContext)\r\n    const [mail, setMail] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [isCorrespondency, setIsCorrespondency] = useState(true)\r\n    const [emailTypes, setEmailTypes] = useState([])\r\n\r\n    let reqJSON = {\r\n        mail: mail,\r\n        type: parseInt(type),\r\n        isCorrespondency: true\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (mail && type) _Json_EmailInfo(reqJSON)\r\n    }, [mail, type])\r\n\r\n    useEffect(() => {\r\n            getEmailTypes()\r\n    }, [])\r\n\r\n\r\n    function getEmailTypes() {\r\n        axios.get(config._urlEmailType)\r\n            .then(res => {\r\n                if (res.data) setEmailTypes(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <EmailContext.Provider\r\n            value={{\r\n                emailTypes,\r\n                setIsCorrespondency, isCorrespondency,\r\n                setType, setMail\r\n            }}\r\n        >\r\n            {props.children}\r\n        </EmailContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport { FormContext } from './FormContexts'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    typeWealthId: '',\r\n    value: '',\r\n    description: '',\r\n    typesWealthId: [],\r\n    settypeWealthId: () => { },\r\n    setvalue: () => { },\r\n    setdescription: () => { },\r\n}\r\n\r\nexport const WealthsTypeContext = createContext(InitialState);\r\n\r\nexport const WealthsTypeProvider = (props) => {\r\n\r\n    const [typeWealthId, settypeWealthId] = useState('')\r\n    const [value, setvalue] = useState('')\r\n    const [description, setdescription] = useState('')\r\n\r\n    const [typesWealthId, settypesWealthId] = useState([])\r\n\r\n    useEffect(() => {\r\n            GetWealthTypes()\r\n    }, [])\r\n\r\n    function GetWealthTypes() {\r\n        axios.get(config._urlWealthType)\r\n            .then(res => { if (res.data) settypesWealthId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <WealthsTypeContext.Provider\r\n            value={{\r\n                typeWealthId, value, description,\r\n                settypeWealthId, setvalue, setdescription,\r\n                typesWealthId,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WealthsTypeContext.Provider>\r\n    );\r\n};\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    institutionName: '',\r\n    occupation: '',\r\n    profession: '',\r\n    corporateTaxpayerRegistry: '',\r\n    setinstitutionName: () => { },\r\n    setoccupation: () => { },\r\n    setprofession: () => { },\r\n    setcorporateTaxpayerRegistry: () => { },\r\n    setIsRequired: () => { }\r\n}\r\n\r\nexport const WorkContext = createContext(InitialState);\r\n\r\nexport const WorkProvider = (props) => {\r\n\r\n    const { _Json_Work } = useContext(FormContext)\r\n\r\n    const [institutionName, setinstitutionName] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n    const [profession, setprofession] = useState('')\r\n    const [corporateTaxpayerRegistry, setcorporateTaxpayerRegistry] = useState('')\r\n    \r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    let reqJSON = {\r\n        institutionName: institutionName,\r\n        occupation: occupation,\r\n        profession: profession,\r\n        corporateTaxpayerRegistry: corporateTaxpayerRegistry.replace(/[^\\d]+/g, '')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_Work({})\r\n        else if (institutionName && occupation && profession && corporateTaxpayerRegistry){\r\n            _Json_Work(reqJSON)\r\n        }\r\n    }, [isRequired,institutionName, occupation, profession, corporateTaxpayerRegistry])\r\n\r\n\r\n    return (\r\n        <WorkContext.Provider\r\n            value={{\r\n                institutionName, setinstitutionName,\r\n                occupation, setoccupation,\r\n                profession, setprofession,\r\n                corporateTaxpayerRegistry, setcorporateTaxpayerRegistry,\r\n                setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </WorkContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { IdentificationTypeContext } from '../../contexts/IdentificationTypeContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function IdentificationType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, \r\n        setstateId,setemissionInssuer, setnumber, setemission, emission } = useContext(IdentificationTypeContext)\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Identificação' : 'Identification',\r\n        Select: languagePT ? 'Selecionar Tipo de Identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Document UF',\r\n        emission: languagePT ? 'Data de emissão' : 'Issue date',\r\n        emissionInssuer: languagePT ? 'Orgão Emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    function OnChangeField(e) {\r\n        const {value, id} = e.target \r\n        switch (id) {\r\n            case 'identificationType':\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'IdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'identificationTypeemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'identificationTypedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'identificationTypeemission':\r\n                setemission(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divIdentificationTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"identificationType\" id=\"identificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex\"}>\r\n                <input required={identificationTypeId !== \"40\"} type=\"text\" name=\"identificationTypedocument\" id=\"identificationTypedocument\" onChange={e => OnChangeField(e)}\r\n                placeholder={Labels.documentNumber}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required name=\"IdtypeStateId\" id=\"IdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.States}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescriptionTitle\">{Labels.emission}</p>\r\n            <div className=\"d-flex\">\r\n                <input value={emission} required type=\"date\" name=\"identificationTypeemission\" id=\"identificationTypeemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required type=\"text\" name=\"identificationTypeemissionInssuer\" id=\"identificationTypeemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                placeholder={Labels.emissionInssuer}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nexport default function Countries(props) {\r\n    const [countries, setCountries] = useState([])\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar País' : 'Select Country'\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n        getCountries()\r\n    }, [])\r\n\r\n    function getCountries() {\r\n        axios.get(config._urlCountries)\r\n            .then(res => { if (res.data) setCountries(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n    function RenderCountries() {\r\n        return (\r\n            countries.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"countries\" id=\"countries\" onChange={props.onSelectCountry}>\r\n            <option defaultValue value=\"\">{Labels.Select}</option>\r\n            {RenderCountries()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { AdressesContext } from \"../../contexts/AdressesContexts\";\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const Atctx = useContext(AttorneyContext)\r\n    const Adctx = useContext(AdressesContext)\r\n\r\n    const [states, setStates] = useState([])\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Estado' : 'Select State',\r\n        SelectError: languagePT ? 'Erro ao consultar estados' : 'Error querying states'\r\n    }\r\n\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if(Atctx.isAcceptedOrderAttorney) required = true\r\n        else if(!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n\r\n    useEffect(() => {\r\n        if(props.ClientAdress) {\r\n            if (Adctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n        else if (props.Attorney){\r\n            if (Atctx.countryId.length !== 0) getStates()\r\n            else setStates([])\r\n        }\r\n    }, [Atctx.countryId, Adctx.countryId])\r\n\r\n    function getStates() {\r\n        const _countryId = props.ClientAdress ? Adctx.countryId : Atctx.countryId\r\n        axios.get(`${config._urlStates}${_countryId}`)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    setStates(res.data)\r\n                }\r\n                else {\r\n                    console.log(Labels.SelectError)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(Labels.SelectError)\r\n            })\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <select required={required} name=\"states\" id=\"states\" onChange={props.onSelectState}>\r\n            <option defaultValue value=\"\">{Labels.Select}</option>\r\n            {RenderStates()}\r\n        </select>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\n\r\nimport config from '../../config'\r\n\r\nimport './index.css'\r\n\r\nexport default function Cities(props) {\r\n    const Adctx = useContext(AdressesContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n\r\n    const [cities, setCities] = useState([])\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Cidade' : 'Select City',\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n        if (props.ClientAdress) {\r\n            if (Adctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n        else if (props.Attorney) {\r\n            if (Atctx.stateId.length !== 0) getCities()\r\n            else setCities([])\r\n        }\r\n    }, [Atctx.stateId, Adctx.stateId])\r\n\r\n    function getCities() {\r\n        const _stateId = props.ClientAdress ? Adctx.stateId : Atctx.stateId\r\n        axios.get(`${config._urlCities}${_stateId}`)\r\n            .then(res => { if (res.data) { setCities(res.data) } })\r\n            .catch(err => { console.log(err) })\r\n    }\r\n    function RenderCities() {\r\n        return (\r\n            cities.map(c => {\r\n                return (\r\n                    <option key={c.cityId} value={c.cityId} cityname={c.name}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divCitiesSelect\">\r\n            <select required={required} name=\"cities\" id=\"cities\" onChange={props.onSelectCity}>\r\n                <option defaultValue value=\"\">{Labels.Select}</option>\r\n                {RenderCities()}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport config from \"../../config\";\r\nimport { AttorneyContext } from \"../../contexts/AttorneyContexts\";\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nexport default function AdressType(props) {\r\n    const [adressType, setAdressType] = useState([])\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Tipo de Endereço' : 'Select Address Type',\r\n    }\r\n\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    useEffect(() => {\r\n            getAdressType()\r\n    }, [])\r\n\r\n    function getAdressType() {\r\n        axios.get(config._urlAdressType)\r\n            .then(res => {if (res.data) setAdressType(res.data)})\r\n            .catch(err => console.log(err))\r\n    }\r\n    function RenderAdressType() {\r\n        return (\r\n            adressType.map(adt => {\r\n                return (\r\n                    <option key={adt.addressTypeId} value={adt.addressTypeId}>{adt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n            <select required={required} name=\"addressType\" id=\"addressType\" onChange={props.onSelectTypeAddress}>\r\n                <option defaultValue value=\"\">{Labels.Select}</option>\r\n                {RenderAdressType()}\r\n            </select>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function CEP(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const Atctx = useContext(AttorneyContext)\r\n    const [error, setError] = useState(false)\r\n    const Labels = {\r\n        CollectCep: languagePT ? 'Digite seu cep' : 'Type your ZIP Code',\r\n        Error: languagePT ? 'CEP Invalido' : 'Invalid ZIP Code'\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if (Atctx.isAcceptedOrderAttorney) required = true\r\n        else if (!Atctx.isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n\r\n    function ValidateCEP(e) {\r\n        const Cep = e.target.value\r\n        if (Cep.length === 0) {\r\n            setError(false)\r\n            props.onCollectCep('')\r\n        }\r\n        const validacep = /^[0-9]{5,8}$/;\r\n        if (validacep.test(Cep)) {\r\n            setError(false)\r\n            props.onCollectCep(Cep)\r\n        }\r\n        else {\r\n            props.onCollectCep('')\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"divCollectCep\">\r\n            <input required={required} className={error ? \"error\" : \"\"} placeholder={Labels.CollectCep} type=\"text\" name=\"cep\" id=\"cep\"\r\n                maxLength=\"8\" onChange={e => ValidateCEP(e)} />\r\n            <p className={error ? \"msgError\" : \"d-none\"}>{Labels.Error}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts';\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport './index.css'\r\n\r\nexport default function AdressUtils(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setComplement, setDescription, setNeighborhood, setNumber } = useContext(AdressesContext)\r\n    const { setcomplement, setdescription, setneighborhood, setnumber, isAcceptedOrderAttorney } = useContext(AttorneyContext)\r\n    const Labels = {\r\n        neighborhood: languagePT ? 'Bairro' : 'Neighborhood',\r\n        description: languagePT ? 'Rua' : 'Street',\r\n        number: languagePT ? 'Número' : 'Number',\r\n        complement: languagePT ? 'Complemento' : 'Complement',\r\n    }\r\n    let required\r\n    if (props.Attorney) {\r\n        if(isAcceptedOrderAttorney) required = true\r\n        else if(!isAcceptedOrderAttorney) required = false\r\n    }\r\n    else if (props.ClientAdress) required = true\r\n    \r\n\r\n    function setInput(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'neighborhood':\r\n                if (props.Attorney) setneighborhood(value)\r\n                else if (props.ClientAdress) setNeighborhood(value)\r\n                break;\r\n            case 'description':\r\n                if (props.Attorney) setdescription(value)\r\n                else if (props.ClientAdress) setDescription(value)\r\n                break;\r\n            case 'number':\r\n                if (props.Attorney) setnumber(value)\r\n                else if (props.ClientAdress) setNumber(value)\r\n                break;\r\n            case 'complement':\r\n                if (props.Attorney) setcomplement(value)\r\n                else if (props.ClientAdress) setComplement(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"divCollectUtilsAdress\">\r\n            {props.children}\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"neighborhood\" id=\"neighborhood\" placeholder={Labels.neighborhood} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"description\" id=\"description\" placeholder={Labels.description} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" maxLength=\"20\" name=\"number\" id=\"number\" placeholder={Labels.number} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} onChange={e => setInput(e)} type=\"text\" name=\"complement\" id=\"complement\" placeholder={Labels.complement} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdressesContext } from '../../contexts/AdressesContexts'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nexport default function Adresses(props) {\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode } = useContext(AdressesContext)\r\n    const {languagePT} = useContext(FormContext)\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Endereço' : 'Address',\r\n    }\r\n\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientAdress\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <Countries onSelectCountry={onSelectCountry} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <States onSelectState={onSelectState} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <Cities onSelectCity={onSelectCity} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={true} Attorney={false}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <AdressUtils ClientAdress={true} Attorney={false}>\r\n                <div className=\"d-flex\">\r\n                    <CEP onCollectCep={onCollectCep} ClientAdress={true} Attorney={false}/>\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n            </AdressUtils>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport Fuse from 'fuse.js';\r\n\r\nimport SelectSearch from 'react-select-search'\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { BankAccountsContext } from '../../contexts/BankContexts';\r\n\r\nimport './index.css'\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function BankAccounts(props) {\r\n    const [error, setError] = useState(false)\r\n    const { languagePT, _Json_BankAccounts } = useContext(FormContext)\r\n    const { bankAccountTypes, banks,\r\n        bankId, setbankId,\r\n        agency, setagency,\r\n        account, setaccount,\r\n        digit, setdigit,\r\n        typeAccountId, settypeAccountId } = useContext(BankAccountsContext)\r\n    const [clientBankAccounts, setclientBankAccounts] = useState([])\r\n    const Labels = {\r\n        selectItems: languagePT ? 'Selecione um item da lista e Preencha os campos' : 'Select an item from the list and fill the fields',\r\n        SelecttypeAccountId: languagePT ? 'Tipo de conta bancária' : 'Bank account type',\r\n        SelectbankId: languagePT ? 'Selecione o seu banco' : 'Select your bank',\r\n        account: languagePT ? 'Número da conta bancária' : 'Bank account number',\r\n        digit: languagePT ? 'Digito' : 'Digit',\r\n        agency: languagePT ? 'Agência' : 'Agency',\r\n        description: languagePT ? 'Contas bancarias' : 'Bank accounts',\r\n        addAccount: languagePT ? 'CLIQUE PARA ADICIONAR CONTA BANCARIA' : 'CLICK TO ADD BANK ACCOUNT'\r\n    }\r\n\r\n    function RenderBankAccountTypes() {\r\n        return (\r\n            bankAccountTypes.map(bat => {\r\n                return (\r\n                    <option key={bat.bankAccountTypeId} value={bat.bankAccountTypeId}>{bat.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderBanks() {\r\n        return (\r\n            banks.map(bank => {\r\n                return (\r\n                    <option key={bank.bankId} value={bank.bankId} code={bank.code}>{bank.code} | {bank.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderclientBankAccounts() {\r\n        return (\r\n            clientBankAccounts.map((bat, index) => {\r\n                return (\r\n                    <div className=\"account\" key={index}>\r\n                        <div className=\"d-flex d-flexdc\">\r\n                            <span className=\"inputDescription\">{banks.find(b => b.value === bat.bankId.toString()).name}</span>\r\n                            <span className=\"inputDescription\">Agencia: {bat.agency}</span>\r\n                            <span className=\"inputDescription\">Conta: {bat.account}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeBankAccount(index)}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addBankAccount() {\r\n        if (!account || !agency || !bankId || !digit || !typeAccountId) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            let bank = {\r\n                bankId: parseInt(bankId),\r\n                agency: parseInt(agency),\r\n                account: parseInt(account),\r\n                digit: parseInt(digit),\r\n                typeAccountId: parseInt(typeAccountId)\r\n            }\r\n            setclientBankAccounts([...clientBankAccounts, bank])\r\n            setaccount('')\r\n            setdigit('')\r\n            setagency('')\r\n        }\r\n    }\r\n    function removeBankAccount(i) {\r\n        setclientBankAccounts(clientBankAccounts.filter((c, index) => index !== i))\r\n    }\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'typeAccountId':\r\n                settypeAccountId(value)\r\n                break;\r\n            case 'account':\r\n                setaccount(value)\r\n                break;\r\n            case 'digit':\r\n                setdigit(value)\r\n                break;\r\n            case 'agency':\r\n                setagency(value)\r\n                break;\r\n            case 'bankId':\r\n                console.log(value)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        _Json_BankAccounts(clientBankAccounts)\r\n    }, [clientBankAccounts])\r\n\r\n\r\n    function fuzzySearch(options) {\r\n        const fuse = new Fuse(options, {\r\n            keys: ['name'],\r\n            threshold: 0.3,\r\n        });\r\n\r\n        return (value) => {\r\n            if (!value.length) {\r\n                return options;\r\n            }\r\n            let array = fuse.search(value)\r\n            array = array.map(i => i.item)\r\n            return array;\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className=\"divBankAccounts\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.description}</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={clientBankAccounts.length === 0} name=\"typeAccountId\" id=\"typeAccountId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.SelecttypeAccountId}</option>\r\n                    {RenderBankAccountTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n\r\n                <SelectSearch options={banks} search={true} filterOptions={fuzzySearch} name=\"name\"\r\n                    emptyMessage=\"Not found\" placeholder={Labels.SelectbankId} id=\"bankId\"\r\n                    printOptions=\"auto\" closeOnSelect={true} onChange={id => setbankId(id)}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={account} type=\"text\" name=\"account\" id=\"account\"\r\n                    placeholder={Labels.account} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={digit} type=\"text\" name=\"digit\" id=\"digit\"\r\n                    placeholder={Labels.digit} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={clientBankAccounts.length === 0} value={agency} type=\"text\" name=\"agency\" id=\"agency\"\r\n                    placeholder={Labels.agency} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"bankAccounts\">\r\n                {RenderclientBankAccounts()}\r\n            </div>\r\n            <div className=\"addAccount\">\r\n                <button onClick={() => addBankAccount()} type=\"button\">\r\n                    {Labels.addAccount}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>{Labels.selectItems}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    name: '',\r\n    nationality: '',\r\n    occupation: '',\r\n    settaxPayerRegistry: () => { },\r\n    setname: () => { },\r\n    setnationality: () => { },\r\n    setoccupation: () => { }\r\n}\r\n\r\nexport const PPERelatedsContext = createContext(InitialState);\r\n\r\nexport const PPERelatedsProvider = (props) => {\r\n    const { _Json_PPERelateds } = useContext(FormContext)\r\n\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [name, setname] = useState('')\r\n    const [nationality, setnationality] = useState('')\r\n    const [occupation, setoccupation] = useState('')\r\n\r\n    const reqJson = {\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        name: name,\r\n        nationality: nationality,\r\n        occupation: occupation\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(name && taxPayerRegistry && occupation && nationality) _Json_PPERelateds([reqJson])\r\n    }, [name,taxPayerRegistry,occupation,nationality])\r\n\r\n    return (\r\n        <PPERelatedsContext.Provider\r\n            value={{\r\n                taxPayerRegistry,\r\n                name,\r\n                nationality,\r\n                occupation,\r\n                settaxPayerRegistry,\r\n                setname,\r\n                setnationality,\r\n                setoccupation\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PPERelatedsContext.Provider>\r\n    );\r\n};\r\n","function ValidCPF(cpf) {\r\n    var Soma;\r\n    var Resto;\r\n    Soma = 0;\r\n    if (cpf === \"00000000000\") return false;\r\n    if (cpf === \"11111111111\") return false;\r\n    if (cpf === \"22222222222\") return false;\r\n    if (cpf === \"33333333333\") return false;\r\n    if (cpf === \"44444444444\") return false;\r\n    if (cpf === \"55555555555\") return false;\r\n    if (cpf === \"66666666666\") return false;\r\n    if (cpf === \"77777777777\") return false;\r\n    if (cpf === \"88888888888\") return false;\r\n\r\n    for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n    if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n    Soma = 0;\r\n    for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n    Resto = (Soma * 10) % 11;\r\n\r\n    if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n    if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n    return true;\r\n}\r\n\r\nfunction validarCNPJ(cnpj) {\r\n    cnpj = cnpj.replace(/[^\\d]+/g,'');\r\n    if(cnpj == '') return false;\r\n    if (cnpj.length != 14)\r\n        return false;\r\n    // Elimina CNPJs invalidos conhecidos\r\n    if (cnpj == \"00000000000000\" || \r\n        cnpj == \"11111111111111\" || \r\n        cnpj == \"22222222222222\" || \r\n        cnpj == \"33333333333333\" || \r\n        cnpj == \"44444444444444\" || \r\n        cnpj == \"55555555555555\" || \r\n        cnpj == \"66666666666666\" || \r\n        cnpj == \"77777777777777\" || \r\n        cnpj == \"88888888888888\" || \r\n        cnpj == \"99999999999999\")\r\n        return false;\r\n    // Valida DVs\r\n    let tamanho = cnpj.length - 2\r\n    let numeros = cnpj.substring(0,tamanho);\r\n    let digitos = cnpj.substring(tamanho);\r\n    let soma = 0;\r\n    let pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(0))\r\n        return false;\r\n    tamanho = tamanho + 1;\r\n    numeros = cnpj.substring(0,tamanho);\r\n    soma = 0;\r\n    pos = tamanho - 7;\r\n    for (let i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(1))\r\n          return false;\r\n           \r\n    return true;\r\n}\r\n\r\nexport {\r\n    ValidCPF, validarCNPJ\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { PPERelatedsContext } from '../../contexts/PPERelatedsContext';\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\n\r\nimport InputMask from \"react-input-mask\";\r\nimport Switch from \"react-switch\";\r\n\r\nimport {ValidCPF} from '../../utils'\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function PPERelateds(props) {\r\n    const { languagePT, _Json_PPERelateds } = useContext(FormContext)\r\n    const { name, nationality, occupation, setname, setnationality,\r\n        setoccupation, settaxPayerRegistry, taxPayerRegistry } = useContext(PPERelatedsContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n\r\n    const [PPERelated, setPPERelated] = useState(false)\r\n\r\n    const Labels = {\r\n        PPERelated: languagePT ? 'Cliente têm relacionamento com uma Pessoa Politicamente Exposta ?' : 'Customer has a relationship with a Politically Exposed Person ?',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        name: languagePT ? 'Nome da Pessoa Politicamente Exposta' : 'Politically Exposed Person\\'s Name',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'TaxPayerRegistry',\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!PPERelated) _Json_PPERelateds([])\r\n    }, [PPERelated])\r\n\r\n    function OnChangeField(e) {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"d-flex d-flexdc df-alc\">\r\n                <p className=\"inputDescription\">{Labels.PPERelated} ?</p>\r\n                <Switch\r\n                    onColor=\"#fac580\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#474e5e\"\r\n                    offHandleColor=\"#000A1E\"\r\n                    checked={PPERelated}\r\n                    onChange={cheked => setPPERelated(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={20}\r\n                    width={50}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input value={name} required={PPERelated} type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} value={nationality} required={PPERelated} type=\"text\"\r\n                    name=\"nationality\" id=\"nationality\" placeholder={Labels.nationality}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"\" : \"d-none\"}>\r\n                <div className=\"d-flex\">\r\n                    <InputMask className={PPERelated ? \"\" : \"d-none\"} value={taxPayerRegistry} required={PPERelated}\r\n                        type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\" placeholder={Labels.taxPayerRegistry}\r\n                        mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" \r\n                        title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className={PPERelated ? \"d-flex\" : \"d-none\"}>\r\n                <input className={PPERelated ? \"\" : \"d-none\"} required={PPERelated} value={occupation} type=\"text\" name=\"occupation\" id=\"occupation\" placeholder={Labels.occupation}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import { createContext, useContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nimport { FormContext } from './FormContexts'\r\n\r\nconst InitialState = {\r\n    taxPayerRegistry: '',\r\n    identificationTypeId: '',\r\n    number: '',\r\n    emissionInssuer: '',\r\n    emission: '',\r\n    stateId: '',\r\n    identificationTypes: [],\r\n    setname: () => { },\r\n    setidentificationTypeId: () => { },\r\n    setnumber: () => { },\r\n    setemissionInssuer: () => { },\r\n    setemission: () => { },\r\n    setstateId: () => { },\r\n    setHide: () => { }\r\n}\r\n\r\nexport const SpouseContext = createContext(InitialState);\r\n\r\nexport const SpouseProvider = (props) => {\r\n\r\n    const { _Json_Spouse } = useContext(FormContext)\r\n\r\n    const [spouseId, setspouseId] = useState(0)\r\n    const [name, setname] = useState('')\r\n    const [taxPayerRegistry, settaxPayerRegistry] = useState('')\r\n    const [identificationTypeId, setidentificationTypeId] = useState('')\r\n    const [number, setnumber] = useState('')\r\n    const [emissionInssuer, setemissionInssuer] = useState('')\r\n    const [emission, setemission] = useState('')\r\n    const [stateId, setstateId] = useState('')\r\n    \r\n    const [identificationTypes, setIdentificationTypes] = useState([])\r\n    const [states, setStates] = useState([])\r\n\r\n    const [hide, setHide] = useState(false)\r\n\r\n    let reqJSON = {\r\n        spouseId: parseInt(spouseId),\r\n        name: name,\r\n        taxPayerRegistry: taxPayerRegistry.replace(/[^\\d]+/g, ''),\r\n        document: {\r\n            identificationTypeId: parseInt(identificationTypeId),\r\n            number: number,\r\n            emissionInssuer: emissionInssuer,\r\n            emission: emission,\r\n            stateId: parseInt(stateId)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (identificationTypeId === \"40\") {\r\n            if (name && taxPayerRegistry && identificationTypeId && emissionInssuer && emission && stateId) {\r\n                const cpf = taxPayerRegistry.replace(/[^\\d]+/g, '')\r\n                reqJSON.document.number = identificationTypeId === \"40\" ? cpf : number\r\n                reqJSON.taxPayerRegistry = cpf\r\n                _Json_Spouse(reqJSON)\r\n            }\r\n        }\r\n        else if (name && taxPayerRegistry && identificationTypeId && number && emissionInssuer && emission && stateId) {\r\n            const cpf = taxPayerRegistry.replace(/[^\\d]+/g, '')\r\n            reqJSON.taxPayerRegistry = cpf\r\n            _Json_Spouse(reqJSON)\r\n        }\r\n\r\n    }, [hide, name, taxPayerRegistry, identificationTypeId, number, emissionInssuer, emission, stateId])\r\n\r\n    useEffect(() => {\r\n            getIdentificationType()\r\n            getStates()\r\n    }, [])\r\n\r\n\r\n    function getIdentificationType() {\r\n        axios.get(config._urlIdentificationType)\r\n            .then(res => { if (res.data) setIdentificationTypes(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function getStates() {\r\n        axios.get(`${config._urlStates}26`)\r\n            .then(res => { if (res.data) setStates(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <SpouseContext.Provider\r\n            value={{\r\n                identificationTypes, setidentificationTypeId, identificationTypeId,\r\n                settaxPayerRegistry, taxPayerRegistry,\r\n                setnumber, setname, name,\r\n                number,\r\n                setemissionInssuer,\r\n                setemission,\r\n                setstateId,\r\n                states,\r\n                setHide\r\n            }}\r\n        >\r\n            {props.children}\r\n        </SpouseContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { SpouseContext } from '../../contexts/Spouse';\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport {ValidCPF} from '../../utils'\r\nimport './index.css'\r\n\r\nexport default function Spouse(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const { languagePT } = useContext(FormContext)\r\n    const { identificationTypes, identificationTypeId, setidentificationTypeId, states, setHide,\r\n        setstateId, setemissionInssuer, setnumber, setemission, number, taxPayerRegistry, settaxPayerRegistry, setname, name } = useContext(SpouseContext)\r\n    const Labels = {\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        Select: languagePT ? 'Selecionar Tipo de Identificação' : 'Select Identification Type',\r\n        States: languagePT ? 'UF do documento' : 'Document UF',\r\n        emission: languagePT ? 'Data de emissão' : 'Issue date',\r\n        emissionInssuer: languagePT ? 'Orgão Emissor' : 'Emission Inssuer',\r\n        documentNumber: languagePT ? 'Número do documento' : 'Document Number',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'spousename':\r\n                setname(value)\r\n                break;\r\n            case 'spouseidentificationType':\r\n                setnumber('')\r\n                setidentificationTypeId(value)\r\n                break;\r\n            case 'spouseIdtypeStateId':\r\n                setstateId(value)\r\n                break;\r\n            case 'spouseemissionInssuer':\r\n                setemissionInssuer(value)\r\n                break;\r\n            case 'spousedocument':\r\n                setnumber(value)\r\n                break;\r\n            case 'spouseemission':\r\n                const emissionDoc = `${value}T00:00:00`\r\n                setemission(emissionDoc)\r\n                break;\r\n            case 'spousedocumentcpf':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderIdentificationTypes() {\r\n        return (\r\n            identificationTypes.map(idt => {\r\n                return (\r\n                    <option key={idt.identifycationTypeId} value={idt.identifycationTypeId}>{idt.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            states.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className={props.hide ? \"d-none\" : \"divSpouse\"}>\r\n            <span className=\"inputDescriptionTitle\">Informações Conjuge</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={name} required={props.required} type=\"text\" name=\"spousename\" id=\"spousename\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={props.required}\r\n                    name=\"spouseidentificationType\" id=\"spouseidentificationType\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderIdentificationTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className={identificationTypeId === \"40\" ? \"d-none\" : \"d-flex\"}>\r\n                <input value={number} required={identificationTypeId !== \"40\" && props.required} type=\"text\" name=\"spousedocument\" id=\"spousedocument\" onChange={e => OnChangeField(e)}\r\n                    placeholder={Labels.documentNumber} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <InputMask value={taxPayerRegistry} required={props.required} type=\"text\" name=\"spousedocumentcpf\" id=\"spousedocumentcpf\"\r\n                        placeholder={Labels.taxPayerRegistry} mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={props.required} name=\"spouseIdtypeStateId\" id=\"spouseIdtypeStateId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.States}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.emission}</p>\r\n            <div className=\"d-flex\">\r\n                <input required={props.required} type=\"date\" name=\"spouseemission\" id=\"spouseemission\" onChange={e => OnChangeField(e)}\r\n                    min={Min} max={Max} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={props.required} type=\"text\" name=\"spouseemissionInssuer\" id=\"spouseemissionInssuer\" onChange={e => OnChangeField(e)}\r\n                    placeholder={Labels.emissionInssuer} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { FormContext } from \"./FormContexts\";\r\n\r\nimport config from \"../config\";\r\n\r\nconst InitialState = {\r\n    name: '',\r\n    taxpayerRegistry: '',\r\n    relationshipTypeId: '',\r\n    relationshipTypesId: [],\r\n    setname: () => { },\r\n    settaxpayerRegistry: () => { },\r\n    setRelationshipTypeId: () => { },\r\n    setIsRequired: () => { }\r\n}\r\nexport const LegalRepresentativeContext = createContext(InitialState);\r\n\r\nexport const LegalRepresentativeProvider = (props) => {\r\n    const [name, setname] = useState('')\r\n    const [taxpayerRegistry, settaxpayerRegistry] = useState('')\r\n    const [relationshipTypeId, setRelationshipTypeId] = useState('')\r\n\r\n    const [relationshipTypesId, setRelationshipTypesId] = useState([])\r\n\r\n    const [isRequired, setIsRequired] = useState(false)\r\n\r\n    const { _Json_LegalRepresentative, errorOnApi } = useContext(FormContext)\r\n\r\n    const legalRepresentatives = {\r\n        name: name,\r\n        taxpayerRegistry: taxpayerRegistry,\r\n        relationshipTypeId: relationshipTypeId\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isRequired) _Json_LegalRepresentative([])\r\n        else if (name && taxpayerRegistry && relationshipTypeId) _Json_LegalRepresentative([legalRepresentatives])\r\n    }, [isRequired, name, taxpayerRegistry, relationshipTypeId])\r\n\r\n    useEffect(() => {\r\n            GetRelationsShipType()\r\n    }, [])\r\n\r\n    function GetRelationsShipType() {\r\n        axios.get(config._urlRelationshipType)\r\n            .then(res => { if (res.data) setRelationshipTypesId(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <LegalRepresentativeContext.Provider\r\n            value={{\r\n                name, taxpayerRegistry, relationshipTypeId,\r\n                setname, settaxpayerRegistry, setRelationshipTypeId,\r\n                relationshipTypesId, setIsRequired\r\n            }}\r\n        >\r\n            {props.children}\r\n        </LegalRepresentativeContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\nimport { LegalRepresentativeContext } from '../../contexts/LegalRepresentativeContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function Work(props) {\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { age } = useContext(ClientInfoContext)\r\n    const { name, taxpayerRegistry, relationshipTypesId,\r\n        setname, settaxpayerRegistry, setRelationshipTypeId, setIsRequired } = useContext(LegalRepresentativeContext)\r\n\r\n    let required = age > 0 && age < 18 ? true : false\r\n\r\n    const Labels = {\r\n        legalRepresentativeName: languagePT ? 'Nome ao representante legal do cliente' : '',\r\n        legalRepresentativeTaxpayerRegistry: languagePT ? 'CPF ao representante legal do cliente' : '',\r\n        relationshipTypeId: languagePT ? 'Tipo do relacionamento ao representante legal' : '',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : '',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n    }\r\n    function ValidCPF(cpf) {\r\n        var Soma;\r\n        var Resto;\r\n        Soma = 0;\r\n        if (cpf === \"00000000000\") return false;\r\n        if (cpf === \"11111111111\") return false;\r\n        if (cpf === \"22222222222\") return false;\r\n        if (cpf === \"33333333333\") return false;\r\n        if (cpf === \"44444444444\") return false;\r\n        if (cpf === \"55555555555\") return false;\r\n        if (cpf === \"66666666666\") return false;\r\n        if (cpf === \"77777777777\") return false;\r\n        if (cpf === \"88888888888\") return false;\r\n\r\n        if (cpf.includes('.')) cpf = cpf.replace(/\\./g, '')\r\n        if (cpf.includes('-')) cpf = cpf.replace(/-/g, '')\r\n        // if (cpf.includes('-')) cpf = cpf.replace(/\\-/g, '')\r\n\r\n        for (let i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(9, 10))) return false;\r\n\r\n        Soma = 0;\r\n        for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\r\n        Resto = (Soma * 10) % 11;\r\n\r\n        if ((Resto === 10) || (Resto === 11)) Resto = 0;\r\n        if (Resto !== parseInt(cpf.substring(10, 11))) return false;\r\n        return true;\r\n    }\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'legalRepresentativeName':\r\n                setname(value)\r\n                break;\r\n            case 'relationshipTypeId':\r\n                setRelationshipTypeId(value)\r\n                break;\r\n            case 'legalRepresentativeTaxpayerRegistry':\r\n                settaxpayerRegistry(value)\r\n                if (value.length < 11) setErrorCpf(false)\r\n                else if (value.length === 11) {\r\n                    if (ValidCPF(value)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (value.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderRelationshipTypes() {\r\n        return (\r\n            relationshipTypesId.map(reltid => {\r\n                return (\r\n                    <option key={reltid.relationshipTypeId} value={reltid.relationshipTypeId}>{reltid.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [])\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n        if (required) {\r\n            setname('')\r\n            setRelationshipTypeId('')\r\n            settaxpayerRegistry('')\r\n        }\r\n    }, [age])\r\n\r\n    return (\r\n        <div className={required ? \"divLegalRepresentative\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">Representates legais</span>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={name} type=\"text\" name=\"legalRepresentativeName\" id=\"legalRepresentativeName\" placeholder={Labels.legalRepresentativeName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <input value={taxpayerRegistry} required={required} type=\"text\" name=\"legalRepresentativeTaxpayerRegistry\" id=\"legalRepresentativeTaxpayerRegistry\" placeholder={Labels.legalRepresentativeTaxpayerRegistry}\r\n                        pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeField(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={required}\r\n                    name=\"relationshipTypeId\" id=\"relationshipTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.relationshipTypeId}</option>\r\n                    {RenderRelationshipTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\n\r\n\r\nimport Spouse from '../Spouse'\r\nimport LegalRepresentative from '../LegalRepresentative'\r\n\r\nimport { LegalRepresentativeProvider } from '../../contexts/LegalRepresentativeContexts';\r\nimport { SpouseProvider } from '../../contexts/Spouse';\r\n\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nimport { ValidCPF } from '../../utils'\r\n\r\nimport Switch from \"react-switch\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport './index.css'\r\n\r\nexport default function ClientInfo() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const {\r\n        // States\r\n        name, shortName, birthDate, fatherName, motherName, taxPayerRegistry, genderId, gendersIds, maritalStatusId, nationality,\r\n        countriesBirthId, stateBirthId, statesBirth, professionalOccupationId, professionalOccupationsId,\r\n        residenceInOtherCountryId, residencesInOtherCountryId, otherTaxResidencesCountryId, otherTaxResidenceCountryId,\r\n        educationLevelId, educationsLevelId, ppeOccupation, usPerson, isAssociatedPerson, isAdministratorInAnotherAccount,\r\n        maritalStatus, maritalAgreements, maritalAgreementId,\r\n        // Sets\r\n        setname, setshortName, setbirthDate, setAge, setfatherName, setmotherName, settaxPayerRegistry, setgenderId, setmaritalStatusId, setmaritalAgreementId,\r\n        setnationality, setcountryBirthId, setstateBirthId, setstateBirthName, setprofessionalOccupationId, setresidenceInOtherCountryId,\r\n        setotherTaxResidenceCountryId, seteducationLevelId, setppeOccupation, setusPerson, setisAssociatedPerson, setisAdministratorInAnotherAccount\r\n    } = useContext(ClientInfoContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações do cliente' : 'Customer information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        dateInvalid: languagePT ? 'Selecione uma data valida' : 'Select a valid date',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        shortName: languagePT ? 'Apelido' : 'ShortName',\r\n        birthDate: languagePT ? 'Data de Nascimento' : 'BirthDate',\r\n        fatherName: languagePT ? 'Nome do Pai' : 'Father Name',\r\n        motherName: languagePT ? 'Nome da Mãe' : 'Mother Name',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        genderId: languagePT ? 'Genero' : 'Gender',\r\n        maritalStatusId: languagePT ? 'Estado civil' : 'Marital Status',\r\n        maritalAgreementId: languagePT ? 'Regime do estado civil' : 'Marital Agreement',\r\n        nationality: languagePT ? 'Nacionalidade' : 'Nationality',\r\n        countryBirthId: languagePT ? 'País de nascimento' : 'Country Birth',\r\n        stateBirthId: languagePT ? 'UF de nascimento do cliente' : 'State Birth',\r\n        stateBirthName: languagePT ? 'Nome UF de nascimento' : 'State Birth Name',\r\n        professionalOccupationId: languagePT ? 'Natureza da ocupação' : 'Professional Occupation',\r\n        residenceInOtherCountryId: languagePT ? 'País ao cliente que possui residencia em outros países' : 'Residence in Other Country',\r\n        otherTaxResidenceCountryId: languagePT ? 'País ao cliente que possui domicílio fiscal além do declarado' : 'Other Tax Residence Country',\r\n        residenceInOtherCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        otherTaxResidenceCountryIdSelect: languagePT ? 'Selecione o país' : '',\r\n        educationLevelId: languagePT ? 'Escolaridade' : 'Education Level',\r\n        ppeOccupation: languagePT ? 'Cargo PPE do cliente, se o mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n        usPerson: languagePT ? 'Cliente considerado como USPerson' : 'Considered as USPerson',\r\n        isAssociatedPerson: languagePT ? 'Pessoa Vinculada' : 'Associated Person',\r\n        isAdministratorInAnotherAccount: languagePT ? 'Cliente realiza operações por conta de terceiros' : 'Customer performs operations on behalf of third parties',\r\n        urlCallback: languagePT ? '' : '',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador' : 'Authorizes the transmission of orders by proxy',\r\n    }\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value, selectedIndex, options } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'shortName':\r\n                setshortName(value)\r\n                break;\r\n            case 'birthDate':\r\n                setAge('')\r\n\r\n                const d = new Date()\r\n                const ano_atual = d.getFullYear()\r\n                const mes_atual = d.getMonth() + 1\r\n                const dia_atual = d.getDate()\r\n\r\n                const ano_aniversario = parseInt(value.split(\"-\")[0])\r\n                const mes_aniversario = parseInt(value.split(\"-\")[1])\r\n                const dia_aniversario = parseInt(value.split(\"-\")[2])\r\n\r\n                if (ano_aniversario >= parseInt(Min.split(\"-\")[0])) {\r\n                    let Qtd_Anos = ano_atual - ano_aniversario\r\n                    if (mes_atual < mes_aniversario || mes_atual === mes_aniversario && dia_atual < dia_aniversario) {\r\n                        Qtd_Anos--\r\n                    }\r\n                    setAge(Qtd_Anos)\r\n                }\r\n                setbirthDate(value)\r\n                break;\r\n            case 'fatherName':\r\n                setfatherName(value)\r\n                break;\r\n            case 'motherName':\r\n                setmotherName(value)\r\n                break;\r\n            case 'taxPayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxPayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxPayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxPayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'gender':\r\n                setgenderId(value)\r\n                break;\r\n            case 'maritalStatusId':\r\n                setmaritalStatusId(value)\r\n                if (value !== '2') setmaritalAgreementId('')\r\n                break;\r\n            case 'maritalAgreementId':\r\n                setmaritalAgreementId(value)\r\n                break;\r\n            case 'nationality':\r\n                setnationality(value)\r\n                break;\r\n            case 'countryBirthId':\r\n                setcountryBirthId(value)\r\n                break;\r\n            case 'statesBirth':\r\n                const stateNameBirth = options[selectedIndex].getAttribute('statename')\r\n                // console.log(stateNameBirth)\r\n                setstateBirthId(value)\r\n                setstateBirthName(stateNameBirth)\r\n                break;\r\n            case 'professionalOccupationId':\r\n                setprofessionalOccupationId(value)\r\n                break;\r\n            case 'residenceInOtherCountryId':\r\n                setresidenceInOtherCountryId(value)\r\n                break;\r\n            case 'otherTaxResidenceCountryId':\r\n                setotherTaxResidenceCountryId(value)\r\n                break;\r\n            case 'educationLevel':\r\n                seteducationLevelId(value)\r\n                break;\r\n            case 'ppeOccupation':\r\n                setppeOccupation(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderGenders() {\r\n        return (\r\n            gendersIds.map(g => {\r\n                return (\r\n                    <option key={g.genderId} value={g.genderId}>{g.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalStatus() {\r\n        return (\r\n            maritalStatus.map(m => {\r\n                return (\r\n                    <option key={m.maritalStatusId} value={m.maritalStatusId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderMaritalAgreementId() {\r\n        return (\r\n            maritalAgreements.map(m => {\r\n                return (\r\n                    <option key={m.maritalAgreementId} value={m.maritalAgreementId}>{m.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderCountriesBirth() {\r\n        return (\r\n            countriesBirthId.map(c => {\r\n                return (\r\n                    <option key={c.countryId} value={c.countryId}>{c.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderStates() {\r\n        return (\r\n            statesBirth.map(s => {\r\n                return (\r\n                    <option key={s.stateId} value={s.stateId} statename={s.name}>{s.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderProfessionalOccupations() {\r\n        return (\r\n            professionalOccupationsId.map(pot => {\r\n                return (\r\n                    <option key={pot.professionalOccupationId} value={pot.professionalOccupationId}>{pot.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderResidencesInOtherCountry() {\r\n        return (\r\n            residencesInOtherCountryId.map(roc => {\r\n                return (\r\n                    <option key={roc.countryId} value={roc.countryId}>{roc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderOtherTaxResidencesCountry() {\r\n        return (\r\n            otherTaxResidencesCountryId.map(otrc => {\r\n                return (\r\n                    <option key={otrc.countryId} value={otrc.countryId}>{otrc.name}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderEducationLevel() {\r\n        return (\r\n            educationsLevelId.map(ed => {\r\n                return (\r\n                    <option key={ed.educationLevelId} value={ed.educationLevelId}>{ed.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"clientInfo\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <input value={name} required type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={shortName} required type=\"text\" name=\"shortName\" id=\"shortName\" placeholder={Labels.shortName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.birthDate}</p>\r\n            <div className=\"d-flex\">\r\n                <input value={birthDate} required type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                    min={Min} max={Max} title={Labels.onlyLettersTitle} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <LegalRepresentativeProvider>\r\n                <LegalRepresentative />\r\n            </LegalRepresentativeProvider>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={fatherName} required type=\"text\" name=\"fatherName\" id=\"fatherName\" placeholder={Labels.fatherName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={motherName} required type=\"text\" name=\"motherName\" id=\"motherName\" placeholder={Labels.motherName}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <InputMask value={taxPayerRegistry} required type=\"text\" name=\"taxPayerRegistry\" id=\"taxPayerRegistry\" placeholder={Labels.taxPayerRegistry}\r\n                        mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} onChange={e => OnChangeFields(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={genderId} required className=\"clSelect\" name=\"gender\" id=\"gender\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.genderId}</option>\r\n                    {RenderGenders()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={maritalStatusId} required className=\"clSelect\" name=\"maritalStatusId\" id=\"maritalStatusId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.maritalStatusId}</option>\r\n                    {RenderMaritalStatus()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <SpouseProvider>\r\n                <Spouse hide={maritalStatusId === '2' ? false : true} required={maritalStatusId === '2' ? true : false}>\r\n\r\n                    <div className={maritalStatusId === '2' ? \"d-flex\" : \"d-none\"}>\r\n                        <select value={maritalAgreementId} required={maritalStatusId === '2'} className=\"clSelect\" name=\"maritalAgreementId\" id=\"maritalAgreementId\" onChange={e => OnChangeFields(e)}>\r\n                            <option defaultValue value=\"\">{Labels.maritalAgreementId}</option>\r\n                            {RenderMaritalAgreementId()}\r\n                        </select>\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </Spouse>\r\n            </SpouseProvider>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <input value={nationality} required type=\"text\" name=\"nationality\" id=\"nationality\" placeholder={Labels.nationality}\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required className=\"clSelect\" name=\"countryBirthId\" id=\"countryBirthId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.countryBirthId}</option>\r\n                    {RenderCountriesBirth()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={stateBirthId} required className=\"clSelect\" name=\"statesBirth\" id=\"statesBirth\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.stateBirthName}</option>\r\n                    {RenderStates()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={professionalOccupationId} required className=\"clSelect\" name=\"professionalOccupationId\" id=\"professionalOccupationId\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.professionalOccupationId}</option>\r\n                    {RenderProfessionalOccupations()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <select value={educationLevelId} required className=\"clSelect\" name=\"educationLevel\" id=\"educationLevel\" onChange={e => OnChangeFields(e)}>\r\n                    <option defaultValue value=\"\">{Labels.educationLevelId}</option>\r\n                    {RenderEducationLevel()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.residenceInOtherCountryId}</p>\r\n            <select value={residenceInOtherCountryId} className=\"clSelect\" name=\"residenceInOtherCountryId\" id=\"residenceInOtherCountryId\" onChange={e => OnChangeFields(e)}>\r\n                <option defaultValue value=\"\">{Labels.residenceInOtherCountryIdSelect}</option>\r\n                {RenderResidencesInOtherCountry()}\r\n            </select>\r\n\r\n            <p className=\"inputDescription\">{Labels.otherTaxResidenceCountryId}</p>\r\n            <select value={otherTaxResidenceCountryId} className=\"clSelect\" name=\"otherTaxResidenceCountryId\" id=\"otherTaxResidenceCountryId\" onChange={e => OnChangeFields(e)}>\r\n                <option defaultValue value=\"\">{Labels.otherTaxResidenceCountryIdSelect}</option>\r\n                {RenderOtherTaxResidencesCountry()}\r\n            </select>\r\n\r\n\r\n\r\n            <div>\r\n                <p className=\"inputDescription\">{Labels.ppeOccupation}</p>\r\n                <input value={ppeOccupation} type=\"text\" name=\"ppeOccupation\" id=\"ppeOccupation\"\r\n                    pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex df-jcspb d-flexdc\">\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.usPerson} ?</p>\r\n                    <Switch\r\n                        onColor=\"#fac580\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#474e5e\"\r\n                        offHandleColor=\"#000A1E\"\r\n                        checked={usPerson}\r\n                        onChange={cheked => setusPerson(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isAssociatedPerson} ?</p>\r\n                    <Switch\r\n                        onColor=\"#fac580\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#474e5e\"\r\n                        offHandleColor=\"#000A1E\"\r\n                        checked={isAssociatedPerson}\r\n                        onChange={cheked => setisAssociatedPerson(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isAdministratorInAnotherAccount} ?</p>\r\n                    <Switch\r\n                        onColor=\"#fac580\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#474e5e\"\r\n                        offHandleColor=\"#000A1E\"\r\n                        checked={isAdministratorInAnotherAccount}\r\n                        onChange={cheked => setisAdministratorInAnotherAccount(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { createContext, useEffect, useState } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nconst InitialState = {\r\n    questions:[],\r\n    answers:[]\r\n}\r\n\r\nexport const FormSuityContext = createContext(InitialState);\r\n\r\nexport const FormSuityProvider = (props) => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState([])\r\n\r\n    useEffect(() => {\r\n        GetQuestions()\r\n        GetAnswers()\r\n    }, [])\r\n\r\n    function GetQuestions() {\r\n        axios.get(config._urlQuestions)\r\n            .then(res => { if (res.data) setQuestions(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function GetAnswers() {\r\n        axios.get(config._urlAnswers)\r\n            .then(res => { if (res.data) setAnswers(res.data) })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <FormSuityContext.Provider\r\n            value={{\r\n                questions, answers\r\n            }}\r\n        >\r\n            {props.children}\r\n        </FormSuityContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { FormSuityContext } from \"../../contexts/FormSuity\";\r\n\r\nimport './index.css'\r\n\r\nexport default function States(props) {\r\n    const { languagePT, _Json_FormSuity } = useContext(FormContext)\r\n    const { answers, questions } = useContext(FormSuityContext)\r\n\r\n    const Labels = {\r\n        answers: languagePT ? 'Selecionar uma resposta para a pergunta' : '',\r\n    }\r\n\r\n    let questionsAnswers = []\r\n\r\n    function OnChangeField(e) {\r\n        const { id, value } = e.target\r\n        const req = {\r\n            questionId: parseInt(id),\r\n            answerId: parseInt(value)\r\n        }\r\n        questionsAnswers = questionsAnswers.filter(q => q.questionId !== parseInt(id))\r\n        questionsAnswers.push(req)\r\n        _Json_FormSuity(questionsAnswers)\r\n    }\r\n\r\n    function RenderQuestions() {\r\n        return (\r\n            questions.map(q => {\r\n                return (\r\n                    <div className=\"div-question-answer\" key={q.suityQuestionId} id={q.suityQuestionId}>\r\n                        <span className=\"inputDescriptionTitle\">{q.question}</span>\r\n                        <div className=\"d-flex\">\r\n                            <select required name={q.suityQuestionId} id={q.suityQuestionId} onChange={e => OnChangeField(e)}>\r\n                                <option defaultValue value=\"\">{Labels.answers}</option>\r\n                                {RenderAnswers(q.suityQuestionId)}\r\n                            </select>\r\n                            <p className=\"required\">*</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    function RenderAnswers(QuestionId) {\r\n        const answersFiltered = answers.filter(a => a.suityQuestionId === QuestionId)\r\n        return (\r\n            answersFiltered.map(a => {\r\n                return (\r\n                    <option key={a.suityAnswerId} value={a.suityAnswerId} >{a.answer}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (RenderQuestions())\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport Countries from '../Countries'\r\nimport States from '../State'\r\nimport Cities from '../City'\r\nimport AdressType from '../AdressType'\r\nimport CEP from '../Cep'\r\nimport AdressUtils from '../AdressUtils'\r\n\r\nimport './index.css'\r\nimport { AttorneyContext } from '../../contexts/AttorneyContexts'\r\nimport { FormContext } from '../../contexts/FormContexts'\r\n\r\nimport Switch from \"react-switch\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport {ValidCPF} from '../../utils'\r\n\r\n\r\nexport default function Attorney() {\r\n    const { languagePT } = useContext(FormContext)\r\n    const [errorCpf, setErrorCpf] = useState(false)\r\n    const Max = new Date().toISOString().split('T')[0]\r\n    const Min = new Date(Max.split('-')[0] - 200, '00', '01').toISOString().split('T')[0]\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Dados do procurador' : 'Attorney information',\r\n        onlyLettersTitle: languagePT ? 'Somente letras' : 'Only letters',\r\n        isAcceptedOrderAttorney: languagePT ? 'Autoriza a transmissão de ordens por procurador ?' : 'Do you authorize the transmission of orders by a Attorney?',\r\n        name: languagePT ? 'Nome' : 'Name',\r\n        birthDate: languagePT ? 'Nascimento' : 'BirthDate',\r\n        taxPayerRegistry: languagePT ? 'CPF' : 'Tax Payer Registry',\r\n        cpfTitle: languagePT ? 'Digite um cpf valido' : 'Please enter a valid cpf',\r\n        actionDescription: languagePT ? 'Descrição dos poderes' : 'Description of powers',\r\n        isPEP: languagePT ? 'O mesmo consta como Pessoa Politicamente Exposta.' : 'PPE Ocupation, whether he is listed as a Politically Exposed Person.',\r\n    }\r\n\r\n    const { setCountryId, setStateId, setStateName, setCityId, setCityName, setTypeAddressId, setZipCode,\r\n        isAcceptedOrderAttorney, setisAcceptedOrderAttorney, name, taxpayerRegistry,\r\n        isPEP, setisPEP, actionDescription, setactionDescription, setname, settaxpayerRegistry, setbirthDate } = useContext(AttorneyContext)\r\n\r\n    function OnChangeFields(e) {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'name':\r\n                setname(value)\r\n                break;\r\n            case 'birthDate':\r\n                const birthDate = `${value}T00:00:00`\r\n                console.log(birthDate)\r\n                setbirthDate(birthDate)\r\n                break;\r\n            case 'taxpayerRegistry':\r\n                const cpf = value.replace(/[^\\d]+/g, '');\r\n                settaxpayerRegistry(value)\r\n                if (cpf.length < 11) setErrorCpf(false)\r\n                else if (cpf.length === 11) {\r\n                    if (ValidCPF(cpf)) {\r\n                        setErrorCpf(false)\r\n                        settaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        settaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCpf(true)\r\n                    }\r\n                }\r\n                else if (cpf.length > 11) {\r\n                    setErrorCpf(true)\r\n                }\r\n                break;\r\n            case 'actionDescription':\r\n                setactionDescription(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function onSelectCountry(e) {\r\n        setCountryId(parseInt(e.target.value))\r\n    }\r\n    function onSelectState(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const statename = options[selectedIndex].getAttribute('statename')\r\n        setStateName(statename)\r\n        setStateId(parseInt(value))\r\n    }\r\n    function onSelectCity(e) {\r\n        const { selectedIndex, value, options } = e.target\r\n        const cityName = options[selectedIndex].getAttribute('cityname')\r\n        setCityId(parseInt(value))\r\n        setCityName(cityName)\r\n    }\r\n    function onSelectTypeAddress(e) {\r\n        setTypeAddressId(parseInt(e.target.value))\r\n    }\r\n    function onCollectCep(cep) {\r\n        setZipCode(cep)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Attorney\">\r\n\r\n            <div className=\"d-flex d-flexdc df-alc\">\r\n                <p className=\"inputDescription\">{Labels.isAcceptedOrderAttorney} ?</p>\r\n                <Switch\r\n                    onColor=\"#fac580\"\r\n                    onHandleColor=\"#F49925\"\r\n                    offColor=\"#474e5e\"\r\n                    offHandleColor=\"#000A1E\"\r\n                    checked={isAcceptedOrderAttorney}\r\n                    onChange={cheked => setisAcceptedOrderAttorney(cheked)}\r\n                    handleDiameter={30}\r\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                    height={20}\r\n                    width={50}\r\n                    className=\"react-switch\"\r\n                    id=\"material-switch\"\r\n                />\r\n            </div>\r\n\r\n            <div className={isAcceptedOrderAttorney ? \"d-flex d-flexdc\" : \"d-none\"}>\r\n                <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n\r\n                <div className=\"d-flex\">\r\n                    <input value={name} required={isAcceptedOrderAttorney} type=\"text\" name=\"name\" id=\"name\" placeholder={Labels.name}\r\n                        pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex\">\r\n                        <InputMask value={taxpayerRegistry} required={isAcceptedOrderAttorney} type=\"text\" name=\"taxpayerRegistry\" id=\"taxpayerRegistry\" \r\n                        placeholder={Labels.taxPayerRegistry} mask=\"999.999.999-99\" pattern=\"\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2}\" title={Labels.cpfTitle} \r\n                        onChange={e => OnChangeFields(e)} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                    <p className={errorCpf ? 'errorCpf' : 'd-none'}>{Labels.cpfTitle}</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <input required={isAcceptedOrderAttorney} type=\"date\" name=\"birthDate\" id=\"birthDate\" onChange={e => OnChangeFields(e)}\r\n                        min={Min} max={Max} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex d-flexdc df-alc\">\r\n                    <p className=\"inputDescription\">{Labels.isPEP} ?</p>\r\n                    <Switch\r\n                        onColor=\"#fac580\"\r\n                        onHandleColor=\"#F49925\"\r\n                        offColor=\"#474e5e\"\r\n                        offHandleColor=\"#000A1E\"\r\n                        checked={isPEP}\r\n                        onChange={cheked => setisPEP(cheked)}\r\n                        handleDiameter={30}\r\n                        boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                        activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                        height={20}\r\n                        width={50}\r\n                        className=\"react-switch\"\r\n                        id=\"material-switch\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex\">\r\n                        <input required={isAcceptedOrderAttorney} value={actionDescription} type=\"text\" name=\"actionDescription\" id=\"actionDescription\"\r\n                            pattern=\"(^[A-Za-z á-úÁ-Ú]+$)\" title={Labels.onlyLettersTitle} onChange={e => OnChangeFields(e)} placeholder={Labels.actionDescription} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"d-flex\">\r\n                    <Countries onSelectCountry={onSelectCountry} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <States onSelectState={onSelectState} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <Cities onSelectCity={onSelectCity} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <AdressType onSelectTypeAddress={onSelectTypeAddress} ClientAdress={false} Attorney={true} />\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <AdressUtils ClientAdress={false} Attorney={true}>\r\n                    <div className=\"d-flex\">\r\n                        <CEP onCollectCep={onCollectCep} ClientAdress={false} Attorney={true} />\r\n                        <p className=\"required\">*</p>\r\n                    </div>\r\n                </AdressUtils>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { EmailContext } from '../../contexts/EmailContexts';\r\n\r\nimport './index.css'\r\n\r\nexport default function EmailType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { emailTypes, setType, setMail } = useContext(EmailContext)\r\n    const Labels = {\r\n        Select: languagePT ? 'Selecionar Tipo de Email' : 'Select Email Type',\r\n        Email: languagePT ? 'Formato aceitado: example@domain.com' : 'Format accepted: example@domain.com'\r\n    }\r\n\r\n    function SelectTypeEmail(e) {\r\n        const { value } = e.target\r\n        setType(value)\r\n    }\r\n    function SetMail(e){\r\n        const { value } = e.target\r\n        setMail(value)\r\n    }\r\n    function RenderEmailType() {\r\n        return (\r\n            emailTypes.map(em => {\r\n                return (\r\n                    <option key={em.emailTypeId} value={em.emailTypeId}>{em.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divEmailTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">E-mail</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"emailType\" id=\"emailType\" onChange={e => SelectTypeEmail(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderEmailType()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required type=\"email\" placeholder=\"example@domain.com\"\r\n                    pattern=\"^[\\w._\\-]+@\\w+.com(.br)?\" title={Labels.Email} onChange={e => SetMail(e)}/>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WealthsTypeContext } from '../../contexts/Wealths';\r\n\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport CurrencyInput from 'react-currency-masked-input'\r\n\r\nimport './index.css'\r\n\r\nexport default function Wealths(props) {\r\n    const { languagePT, _Json_Wealths } = useContext(FormContext)\r\n\r\n    const { typeWealthId, value, description, settypeWealthId, setvalue, setdescription, typesWealthId } = useContext(WealthsTypeContext)\r\n    const { professionalOccupationId } = useContext(ClientInfoContext)\r\n    const [error, setError] = useState(false)\r\n\r\n    const [clientWealths, setClientWealths] = useState([])\r\n\r\n    const Labels = {\r\n        SelectWealthTypeId: languagePT ? 'Selecione tipo de bens/finanças para cadastro' : 'Select type of wealth/finances to register',\r\n        inputDescriptionTitle: languagePT ? 'Informações de bens/finanças para cadastro' : 'Wealths/Finances information for registration',\r\n        description: languagePT ? 'Descrição do bem/finança' : 'Wealths/Finances Description',\r\n        value: languagePT ? 'Valor do bem/finança' : 'Wealths/Finances Value',\r\n        addButtonDescription: languagePT ? 'CLIQUE PARA ADICIONAR O BEM/FINANÇA' : 'CLICK TO ADD A WEALTH/FINANCE'\r\n    }\r\n\r\n    let required = professionalOccupationId === \"8\" || professionalOccupationId === \"9\" ||\r\n        professionalOccupationId === \"\" ? false : true\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'wealthTypeId':\r\n                settypeWealthId(value)\r\n                break;\r\n            case 'wealthDescription':\r\n                setdescription(value)\r\n                break;\r\n            case 'wealthValue':\r\n                let valor = value + '';\r\n                valor = parseInt(valor.replace(/[\\D]+/g, ''));\r\n                valor = valor + '';\r\n                valor = valor.replace(/([0-9]{2})$/g, \".$1\");\r\n                setvalue(valor)\r\n                if (valor == 'NaN') setvalue('') \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function RenderWealthTypes() {\r\n        return (\r\n            typesWealthId.map(tw => {\r\n                return (\r\n                    <option key={tw.wealthTypeId} value={tw.wealthTypeId}>{tw.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function RenderClientWealths() {\r\n        return (\r\n            clientWealths.map((cw, index) => {\r\n                return (\r\n                    <div className=\"wealth\" key={`${cw.description}${index}`}>\r\n                        <div className=\"d-flex d-flexdc\">\r\n                            <span className=\"inputDescription\">Descrição: {cw.description}</span>\r\n                            <span className=\"inputDescription\">Valor: {cw.value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\")}</span>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => removeClientWealth(index)}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    function addClientWealth() {\r\n        if (!typeWealthId || !description || !value) {\r\n            setError(true)\r\n        }\r\n        else {\r\n            setError(false)\r\n            console.log(parseFloat(value))\r\n            console.log(typeof parseFloat(value))\r\n            let wealth = {\r\n                typeWealthId: parseInt(typeWealthId),\r\n                value: parseFloat(value),\r\n                description: description\r\n            }\r\n            setClientWealths([...clientWealths, wealth])\r\n            setdescription('')\r\n            setvalue('')\r\n        }\r\n    }\r\n    function removeClientWealth(i) {\r\n        setClientWealths(clientWealths.filter((c, index) => index !== i))\r\n    }\r\n\r\n    useEffect(() => {\r\n        required = professionalOccupationId === \"8\" || professionalOccupationId === \"9\" ||\r\n        professionalOccupationId === \"\" ? false : true\r\n        if(!required) _Json_Wealths([])\r\n    }, [professionalOccupationId])\r\n    useEffect(() => {\r\n        _Json_Wealths(clientWealths)\r\n    }, [clientWealths])\r\n\r\n    return (\r\n        <div className={required ? \"divWealthTypes\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">{Labels.inputDescriptionTitle}</span>\r\n\r\n            <div className=\"d-flex\">\r\n                <select required={required && clientWealths.length === 0} name=\"wealthTypeId\" id=\"wealthTypeId\" onChange={e => OnChangeField(e)}>\r\n                    <option defaultValue value=\"\">{Labels.SelectWealthTypeId}</option>\r\n                    {RenderWealthTypes()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex\">\r\n                <input required={required && clientWealths.length === 0} value={description} type=\"text\" name=\"wealthDescription\" id=\"wealthDescription\" placeholder={Labels.description}\r\n                    onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n\r\n            <p className=\"inputDescription\">{Labels.value}</p>\r\n            {/* <div className=\"d-flex\"> */}\r\n            <div className=\"d-flex\">\r\n                <input type=\"text\" value={value} required={required && clientWealths.length === 0} name=\"wealthValue\" id=\"wealthValue\"\r\n                    placeholder=\"$0\" onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            {/* </div> */}\r\n\r\n            <div className=\"wealths\">\r\n                {RenderClientWealths()}\r\n            </div>\r\n            <div className=\"addButton\">\r\n                <button type=\"button\" onClick={() => addClientWealth()}>\r\n                    {Labels.addButtonDescription}\r\n                </button>\r\n                <p className={error ? \"msgError\" : \"d-none\"}>Selecione um item da lista e Preencha os campos</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { PhonesContext } from \"../../contexts/PhonesContexts\";\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function PhoneType(props) {\r\n    const { languagePT } = useContext(FormContext)\r\n    const { phoneTypes, setPhoneTypeId, phoneTypeId, setCountryCode,setNumber,setStateCode } = useContext(PhonesContext)\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Número de Telefone' : 'Phone number',\r\n        Select: languagePT ? 'Selecionar Tipo de Telefone' : 'Select Phone Type',\r\n        SelectError: languagePT ? 'Erro ao consultar Tipos de Telefone' : 'Error querying Phone Type',\r\n        Celnumber: languagePT ? 'Formato exigido: +DDI (DDD) 9XXXX-XXXX' : '',\r\n        Resnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : '',\r\n        Comnumber: languagePT ? 'Formato exigido: +DDI (DDD) XXXX-XXXX' : ''\r\n    }\r\n\r\n    function SelectTypePhone(e) {\r\n        const { value } = e.target\r\n        setPhoneTypeId(value)\r\n    }\r\n\r\n    function SetPhoneNumber(e){\r\n        const { value } = e.target\r\n        if(value.length >= 18){\r\n            const CountryCode = value.split(\" \")[0].replace(\"+\",\"\")\r\n            const StateCode = value.split(\" \")[1].replace(\"(\",\"\").replace(\")\",\"\")\r\n            const _Number = value.split(\" \")[2].replace(\"-\",\"\")\r\n            setCountryCode(CountryCode)\r\n            setStateCode(StateCode)\r\n            setNumber(_Number)\r\n        }\r\n    }\r\n\r\n    function RenderPhoneType() {\r\n        return (\r\n            phoneTypes.map(ph => {\r\n                return (\r\n                    <option key={ph.phoneTypeId} value={ph.phoneTypeId}>{ph.description}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"divPhoneTypeSelect\">\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <select required\r\n                    name=\"phoneType\" id=\"phoneType\" onChange={e => SelectTypePhone(e)}>\r\n                    <option defaultValue value=\"\">{Labels.Select}</option>\r\n                    {RenderPhoneType()}\r\n                </select>\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <InputMask name=\"ResidencialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '1'} maskChar=\"\" title={Labels.Resnumber}\r\n            className={phoneTypeId === '1' ? '' : 'd-none'} mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\"/>\r\n\r\n            <InputMask name=\"ComercialNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '2'} maskChar=\"\" title={Labels.Comnumber}\r\n            className={phoneTypeId === '2' ? '' : 'd-none'} mask=\"+99 (99) 9999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{4}[-]\\d{4}\"/>\r\n\r\n            <InputMask name=\"CelNumber\" onChange={e => SetPhoneNumber(e)} required={phoneTypeId === '3'} maskChar=\"\" title={Labels.Celnumber}\r\n            className={phoneTypeId === '3' ? '' : 'd-none'} mask=\"+99 (99) 99999-9999\" pattern=\"[+]\\d{0,4} [(]\\d{0,4}[)] \\d{5}[-]\\d{4}\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormContext } from \"../../contexts/FormContexts\";\r\nimport { WorkContext } from '../../contexts/Work';\r\nimport { ClientInfoContext } from '../../contexts/ClientInfoContexts';\r\n\r\nimport {validarCNPJ} from '../../utils'\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport './index.css'\r\n\r\nexport default function Work(props) {\r\n    const [errorCNPJ, setErrorCNPJ] = useState(false)\r\n\r\n    const { languagePT } = useContext(FormContext)\r\n    const { setinstitutionName, setprofession, setoccupation, setcorporateTaxpayerRegistry,\r\n        institutionName, profession, occupation, corporateTaxpayerRegistry, setIsRequired } = useContext(WorkContext)\r\n    const { professionalOccupationId } = useContext(ClientInfoContext)\r\n\r\n    const required = professionalOccupationId === \"3\" || professionalOccupationId === \"6\" ||\r\n        professionalOccupationId === \"8\" || professionalOccupationId === \"9\" || professionalOccupationId === \"\" ? false : true\r\n\r\n    useEffect(() => {\r\n        setIsRequired(required)\r\n    }, [required])\r\n\r\n    const Labels = {\r\n        componentTitle: languagePT ? 'Informações Instituição de Trabalho' : 'Work Institution Information',\r\n        institutionName: languagePT ? 'Nome da instituição' : 'Institution Name',\r\n        onlyLettersAndNumbersTitle: languagePT ? 'Somente letras e numeros' : 'Only letters and numbers',\r\n        profession: languagePT ? 'Profissão' : 'Profession',\r\n        occupation: languagePT ? 'Cargo na instituição de trabalho' : 'Position in the work institution',\r\n        corporateTaxpayerRegistry: languagePT ? 'CNPJ da instituição de trabalho' : 'CNPJ of the work institution',\r\n        cnpjTitle: languagePT ? 'Digite um cnpj valido' : 'Enter a valid cnpj',\r\n    }\r\n\r\n    function OnChangeField(e) {\r\n        const { value, id } = e.target\r\n        switch (id) {\r\n            case 'institutionName':\r\n                setinstitutionName(value)\r\n                break;\r\n            case 'profession':\r\n                setprofession(value)\r\n                break;\r\n            case 'occupation':\r\n                setoccupation(value)\r\n                break;\r\n            case 'corporateTaxpayerRegistry':\r\n                setcorporateTaxpayerRegistry(value)\r\n                const cnpj = value.replace(/[^\\d]+/g, '');\r\n\r\n                if (cnpj.length < 14) setErrorCNPJ(false)\r\n                else if (cnpj.length === 14) {\r\n                    if (validarCNPJ(cnpj)) {\r\n                        setErrorCNPJ(false)\r\n                        setcorporateTaxpayerRegistry(value)\r\n                    }\r\n                    else {\r\n                        setcorporateTaxpayerRegistry(`${value.substring(0, value.length - 1)}`)\r\n                        setErrorCNPJ(true)\r\n                    }\r\n                }\r\n                else if (cnpj.length > 14) {\r\n                    setErrorCNPJ(true)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={required ? \"divWork\" : \"d-none\"}>\r\n            <span className=\"inputDescriptionTitle\">{Labels.componentTitle}</span>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={institutionName} type=\"text\" name=\"institutionName\" id=\"institutionName\" placeholder={Labels.institutionName}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={profession} type=\"text\" name=\"profession\" id=\"profession\" placeholder={Labels.profession}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <input required={required} value={occupation} type=\"text\" name=\"occupation\" id=\"occupation\" placeholder={Labels.occupation}\r\n                    pattern=\"(^[A-Za-z0-9 á-úÁ-Ú]+$)\" title={Labels.onlyLettersAndNumbersTitle} onChange={e => OnChangeField(e)} />\r\n                <p className=\"required\">*</p>\r\n            </div>\r\n            <div>\r\n                <div className=\"d-flex\">\r\n                    <InputMask required={required} value={corporateTaxpayerRegistry} type=\"text\" name=\"corporateTaxpayerRegistry\" id=\"corporateTaxpayerRegistry\" \r\n                    placeholder={Labels.corporateTaxpayerRegistry} pattern=\"^\\d{2}\\.?\\d{3}\\.?\\d{3}\\/?\\d{4}-?\\d{2}$\" mask=\"99.999.999/9999-99\" title={Labels.cnpjTitle} \r\n                    onChange={e => OnChangeField(e)} />\r\n\r\n                    <p className=\"required\">*</p>\r\n                </div>\r\n                <p className={errorCNPJ ? 'errorCNPJ' : 'd-none'}>{Labels.cnpjTitle}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport { IdentificationTypeProvider } from './contexts/IdentificationTypeContexts';\r\nimport { FormContext } from './contexts/FormContexts';\r\nimport { AttorneyProvider } from './contexts/AttorneyContexts';\r\nimport { AdressesProvider } from './contexts/AdressesContexts'\r\nimport { BankAccountsProvider } from './contexts/BankContexts'\r\nimport { PhonesProvider } from './contexts/PhonesContexts';\r\nimport { EmailProvider } from './contexts/EmailContexts';\r\nimport { WealthsTypeProvider } from './contexts/Wealths';\r\nimport { WorkProvider } from './contexts/Work';\r\n\r\n\r\n\r\nimport IdentificationType from './components/IdentificationType';\r\nimport ClientAdress from './components/ClientAdress'\r\nimport BankAccounts from './components/BankAccounts';\r\nimport PPERelateds from './components/PPE Related';\r\nimport ClientInfo from './components/ClientInfo';\r\nimport FormSuity from './components/FormSuity';\r\nimport Attorney from './components/Attorney';\r\nimport EmailType from './components/Email';\r\nimport Wealths from './components/Wealths';\r\nimport Phones from './components/Phones';\r\nimport Work from './components/Work';\r\n\r\nimport './Global.css';\r\nimport { FormSuityProvider } from './contexts/FormSuity';\r\nimport { PPERelatedsProvider } from './contexts/PPERelatedsContext';\r\n\r\nimport { FaAngleLeft } from \"react-icons/fa\";\r\n\r\nfunction App() {\r\n    const { saveClient, languagePT, Clicked } = useContext(FormContext)\r\n\r\n    const Labels = {\r\n        HeaderTitle: languagePT ? \"Cadastro de Cliente\" : \"Customer registration\",\r\n        BackToSite: languagePT ? \"Voltar ao Site\" : \"Back to site\",\r\n        ButtonSave: languagePT ? \"Salvar\" : \"Save\"\r\n    }\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault()\r\n        saveClient()\r\n    }\r\n    return (\r\n        <>\r\n            <header>\r\n                <a href=\"https://flow2pay.com.br/\"><FaAngleLeft />{Labels.BackToSite}</a>\r\n                <span>{Labels.HeaderTitle}</span>\r\n            </header>\r\n            <form onSubmit={e => onSubmit(e)} action=\"\" method=\"\" autoComplete=\"off\">\r\n                <div className=\"div-infos\">\r\n\r\n                    <div className=\"div-client\">\r\n                        <ClientInfo />\r\n                        <div className=\"div-client-1\">\r\n                            <PhonesProvider>\r\n                                <Phones />\r\n                            </PhonesProvider>\r\n\r\n                            <IdentificationTypeProvider>\r\n                                <IdentificationType />\r\n                            </IdentificationTypeProvider>\r\n\r\n                            <EmailProvider>\r\n                                <EmailType />\r\n                            </EmailProvider>\r\n\r\n                            <AdressesProvider>\r\n                                <ClientAdress />\r\n                            </AdressesProvider>\r\n\r\n                            <PPERelatedsProvider>\r\n                                <PPERelateds />\r\n                            </PPERelatedsProvider>\r\n\r\n                            <WorkProvider>\r\n                                <Work />\r\n                            </WorkProvider>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"div-wealthsType\">\r\n                        <BankAccountsProvider>\r\n                            <BankAccounts />\r\n                        </BankAccountsProvider>\r\n\r\n                        <WealthsTypeProvider>\r\n                            <Wealths />\r\n                        </WealthsTypeProvider>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"div-attorney\">\r\n                        <AttorneyProvider>\r\n                            <Attorney />\r\n                        </AttorneyProvider>\r\n                    </div>\r\n\r\n                    <div className=\"div-formsuity\">\r\n                        <FormSuityProvider>\r\n                            <FormSuity />\r\n                        </FormSuityProvider>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"div-footer\">\r\n                    <button type=\"submit\" disabled={Clicked}>\r\n                        {Clicked ? \"\" : Labels.ButtonSave}\r\n                        <i className={Clicked ? \"fa fa-spinner fa-spin\" : \"d-none\"}/> {Clicked ? \"Aguarde\" : \"\"}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { FormProvider } from './contexts/FormContexts';\nimport { ClientInfoProvider } from './contexts/ClientInfoContexts';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Form from './form'\n\nimport './Global.css';\n\nfunction App() {\n  return (\n    <FormProvider>\n      <ClientInfoProvider>\n        <ToastContainer\n          position=\"top-right\" autoClose={2500}\n          hideProgressBar={false} newestOnTop={false}\n          closeOnClick rtl={false} pauseOnHover={false}\n          pauseOnVisibilityChange draggable\n          pauseOnFocusLoss={false}\n        />\n        <Form />\n      </ClientInfoProvider>\n    </FormProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}